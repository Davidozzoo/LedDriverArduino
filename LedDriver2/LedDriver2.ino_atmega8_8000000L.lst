
C:\Users\user\AppData\Local\Temp\arduino_build_43537/LedDriver2.ino.elf:     file format elf32-avr


Disassembly of section .text:

00000000 <__vectors>:
__vectors():
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	69 c0       	rjmp	.+210    	; 0xd6 <__bad_interrupt>
       4:	68 c0       	rjmp	.+208    	; 0xd6 <__bad_interrupt>
       6:	67 c0       	rjmp	.+206    	; 0xd6 <__bad_interrupt>
       8:	66 c0       	rjmp	.+204    	; 0xd6 <__bad_interrupt>
       a:	65 c0       	rjmp	.+202    	; 0xd6 <__bad_interrupt>
       c:	64 c0       	rjmp	.+200    	; 0xd6 <__bad_interrupt>
       e:	63 c0       	rjmp	.+198    	; 0xd6 <__bad_interrupt>
      10:	62 c0       	rjmp	.+196    	; 0xd6 <__bad_interrupt>
      12:	04 c4       	rjmp	.+2056   	; 0x81c <__vector_9>
      14:	60 c0       	rjmp	.+192    	; 0xd6 <__bad_interrupt>
      16:	5f c0       	rjmp	.+190    	; 0xd6 <__bad_interrupt>
      18:	5e c0       	rjmp	.+188    	; 0xd6 <__bad_interrupt>
      1a:	5d c0       	rjmp	.+186    	; 0xd6 <__bad_interrupt>
      1c:	5c c0       	rjmp	.+184    	; 0xd6 <__bad_interrupt>
      1e:	5b c0       	rjmp	.+182    	; 0xd6 <__bad_interrupt>
      20:	5a c0       	rjmp	.+180    	; 0xd6 <__bad_interrupt>
      22:	59 c0       	rjmp	.+178    	; 0xd6 <__bad_interrupt>
      24:	58 c0       	rjmp	.+176    	; 0xd6 <__bad_interrupt>

00000026 <__trampolines_end>:
__trampolines_start():
      26:	00 00       	nop
      28:	00 00       	nop
      2a:	38 00       	.word	0x0038	; ????
      2c:	35 00       	.word	0x0035	; ????
      2e:	32 00       	.word	0x0032	; ????

00000030 <port_to_mode_PGM>:
      30:	00 00 00 00 37 00 34 00 31 00                       ....7.4.1.

0000003a <port_to_input_PGM>:
      3a:	00 00 00 00 36 00 33 00 30 00                       ....6.3.0.

00000044 <digital_pin_to_port_PGM>:
      44:	04 04 04 04 04 04 04 04 02 02 02 02 02 02 03 03     ................
      54:	03 03 03 03 02 02 03                                .......

0000005b <digital_pin_to_bit_mask_PGM>:
      5b:	01 02 04 08 10 20 40 80 01 02 04 08 10 20 01 02     ..... @...... ..
      6b:	04 08 10 20 40 80 40                                ... @.@

00000072 <digital_pin_to_timer_PGM>:
	...
      7a:	00 04 05 07 00 00 00 00 00 00 00 00 00 00 00 00     ................

0000008a <__ctors_start>:
__ctors_start():
      8a:	0c 0c       	add	r0, r12

0000008c <__ctors_end>:
__dtors_end():
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf e5       	ldi	r28, 0x5F	; 95
      92:	d4 e0       	ldi	r29, 0x04	; 4
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
__do_copy_data():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2409
      98:	10 e0       	ldi	r17, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2410
      9a:	a0 e6       	ldi	r26, 0x60	; 96
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2411
      9c:	b0 e0       	ldi	r27, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2412
      9e:	e8 eb       	ldi	r30, 0xB8	; 184
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2413
      a0:	fa e1       	ldi	r31, 0x1A	; 26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2414
      a2:	02 c0       	rjmp	.+4      	; 0xa8 <__do_copy_data+0x10>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2417
      a4:	05 90       	lpm	r0, Z+
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2422
      a6:	0d 92       	st	X+, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2424
      a8:	a6 3a       	cpi	r26, 0xA6	; 166
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2425
      aa:	b1 07       	cpc	r27, r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2426
      ac:	d9 f7       	brne	.-10     	; 0xa4 <__do_copy_data+0xc>

000000ae <__do_clear_bss>:
__do_clear_bss():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2441
      ae:	21 e0       	ldi	r18, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2442
      b0:	a6 ea       	ldi	r26, 0xA6	; 166
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2443
      b2:	b0 e0       	ldi	r27, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2444
      b4:	01 c0       	rjmp	.+2      	; 0xb8 <.do_clear_bss_start>

000000b6 <.do_clear_bss_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2446
      b6:	1d 92       	st	X+, r1

000000b8 <.do_clear_bss_start>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2448
      b8:	af 35       	cpi	r26, 0x5F	; 95
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2449
      ba:	b2 07       	cpc	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2450
      bc:	e1 f7       	brne	.-8      	; 0xb6 <.do_clear_bss_loop>

000000be <__do_global_ctors>:
__do_global_ctors():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2466
      be:	10 e0       	ldi	r17, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2467
      c0:	c6 e4       	ldi	r28, 0x46	; 70
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2468
      c2:	d0 e0       	ldi	r29, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2472
      c4:	03 c0       	rjmp	.+6      	; 0xcc <__do_global_ctors+0xe>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2474
      c6:	21 97       	sbiw	r28, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2480
      c8:	fe 01       	movw	r30, r28
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2481
      ca:	ea dc       	rcall	.-1580   	; 0xfffffaa0 <__eeprom_end+0xff7efaa0>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2483
      cc:	c5 34       	cpi	r28, 0x45	; 69
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2484
      ce:	d1 07       	cpc	r29, r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2489
      d0:	d1 f7       	brne	.-12     	; 0xc6 <__do_global_ctors+0x8>
      d2:	ee d3       	rcall	.+2012   	; 0x8b0 <main>
      d4:	ef cc       	rjmp	.-1570   	; 0xfffffab4 <__eeprom_end+0xff7efab4>

000000d6 <__bad_interrupt>:
__vector_1():
      d6:	94 cf       	rjmp	.-216    	; 0x0 <__vectors>

000000d8 <digitalRead.constprop.10>:
digitalRead.constprop.10():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:216
  SREG = oldSREG;
}

int digitalRead(uint8_t pin)
{
  uint8_t timer = digitalPinToTimer(pin);
      d8:	e0 e8       	ldi	r30, 0x80	; 128
      da:	f0 e0       	ldi	r31, 0x00	; 0
      dc:	84 91       	lpm	r24, Z
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:217
  uint8_t bit = digitalPinToBitMask(pin);
      de:	e9 e6       	ldi	r30, 0x69	; 105
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	94 91       	lpm	r25, Z
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:218
  uint8_t port = digitalPinToPort(pin);
      e4:	e2 e5       	ldi	r30, 0x52	; 82
      e6:	f0 e0       	ldi	r31, 0x00	; 0
      e8:	e4 91       	lpm	r30, Z
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:220

  if (port == NOT_A_PIN) return LOW;
      ea:	ee 23       	and	r30, r30
      ec:	01 f1       	breq	.+64     	; 0x12e <digitalRead.constprop.10+0x56>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:224

  // If the pin that support PWM output, we need to turn it off
  // before getting a digital reading.
  if (timer != NOT_ON_TIMER) turnOffPWM(timer);
      ee:	88 23       	and	r24, r24
      f0:	49 f0       	breq	.+18     	; 0x104 <digitalRead.constprop.10+0x2c>
turnOffPWM():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:77
//
//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));
//static inline void turnOffPWM(uint8_t timer)
static void turnOffPWM(uint8_t timer)
{
  switch (timer)
      f2:	85 30       	cpi	r24, 0x05	; 5
      f4:	a9 f0       	breq	.+42     	; 0x120 <digitalRead.constprop.10+0x48>
      f6:	87 30       	cpi	r24, 0x07	; 7
      f8:	b1 f0       	breq	.+44     	; 0x126 <digitalRead.constprop.10+0x4e>
      fa:	84 30       	cpi	r24, 0x04	; 4
      fc:	19 f4       	brne	.+6      	; 0x104 <digitalRead.constprop.10+0x2c>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:82
  {
    // Timer1
    #if defined(TCCR1A) && defined(COM1A1)
      case TIMER1A:
        TCCR1A &= ~_BV(COM1A1);
      fe:	8f b5       	in	r24, 0x2f	; 47
     100:	8f 77       	andi	r24, 0x7F	; 127
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:87
        break;
    #endif
    #if defined(TCCR1A) && defined(COM1B1)
      case TIMER1B:
        TCCR1A &= ~_BV(COM1B1);
     102:	8f bd       	out	0x2f, r24	; 47
digitalRead.constprop.10():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:226

  // If the pin that support PWM output, we need to turn it off
  // before getting a digital reading.
  if (timer != NOT_ON_TIMER) turnOffPWM(timer);

  if (*portInputRegister(port) & bit) return HIGH;
     104:	f0 e0       	ldi	r31, 0x00	; 0
     106:	ee 0f       	add	r30, r30
     108:	ff 1f       	adc	r31, r31
     10a:	e6 5c       	subi	r30, 0xC6	; 198
     10c:	ff 4f       	sbci	r31, 0xFF	; 255
     10e:	a5 91       	lpm	r26, Z+
     110:	b4 91       	lpm	r27, Z
     112:	ec 91       	ld	r30, X
     114:	e9 23       	and	r30, r25
     116:	81 e0       	ldi	r24, 0x01	; 1
     118:	90 e0       	ldi	r25, 0x00	; 0
     11a:	59 f4       	brne	.+22     	; 0x132 <digitalRead.constprop.10+0x5a>
     11c:	80 e0       	ldi	r24, 0x00	; 0
     11e:	08 95       	ret
turnOffPWM():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:87
        TCCR1A &= ~_BV(COM1A1);
        break;
    #endif
    #if defined(TCCR1A) && defined(COM1B1)
      case TIMER1B:
        TCCR1A &= ~_BV(COM1B1);
     120:	8f b5       	in	r24, 0x2f	; 47
     122:	8f 7d       	andi	r24, 0xDF	; 223
     124:	ee cf       	rjmp	.-36     	; 0x102 <digitalRead.constprop.10+0x2a>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:99
    #endif
    
    // Timer2
    #if defined(TCCR2) && defined(COM21)
      case TIMER2:
        TCCR2 &= ~_BV(COM21);
     126:	85 b5       	in	r24, 0x25	; 37
     128:	8f 7d       	andi	r24, 0xDF	; 223
     12a:	85 bd       	out	0x25, r24	; 37
     12c:	eb cf       	rjmp	.-42     	; 0x104 <digitalRead.constprop.10+0x2c>
digitalRead.constprop.10():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:220
{
  uint8_t timer = digitalPinToTimer(pin);
  uint8_t bit = digitalPinToBitMask(pin);
  uint8_t port = digitalPinToPort(pin);

  if (port == NOT_A_PIN) return LOW;
     12e:	80 e0       	ldi	r24, 0x00	; 0
     130:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:228
  // before getting a digital reading.
  if (timer != NOT_ON_TIMER) turnOffPWM(timer);

  if (*portInputRegister(port) & bit) return HIGH;
  return LOW;
}
     132:	08 95       	ret

00000134 <ClocklessController<(unsigned char)11, 2, 5, 3, (EOrder)66, 0, false, 10>::getMaxRefreshRate() const>:
_ZNK19ClocklessControllerILh11ELi2ELi5ELi3EL6EOrder66ELi0ELb0ELi10EE17getMaxRefreshRateEv():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:117
public:
	virtual void init() {
		FastPin<DATA_PIN>::setOutput();
	}

	virtual uint16_t getMaxRefreshRate() const { return 400; }
     134:	80 e9       	ldi	r24, 0x90	; 144
     136:	91 e0       	ldi	r25, 0x01	; 1
     138:	08 95       	ret

0000013a <micros>:
micros():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:237
  unsigned char f; // temporary storage for millis fraction counter
  unsigned char q = 0; // record whether an overflow is flagged
#endif
  // t will be the number where the timer0 counter stopped
  uint8_t t;
  uint8_t oldSREG = SREG;
     13a:	3f b7       	in	r19, 0x3f	; 63
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:240

  // Stop all interrupts
  cli();
     13c:	f8 94       	cli
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:247
#ifdef CORRECT_EXACT_MICROS
  // combine exact millisec and 8usec counters
  m = timer0_millis;
  f = timer0_fract;
#else
  m = timer0_overflow_count;
     13e:	80 91 a9 00 	lds	r24, 0x00A9	; 0x8000a9 <timer0_overflow_count>
     142:	90 91 aa 00 	lds	r25, 0x00AA	; 0x8000aa <timer0_overflow_count+0x1>
     146:	a0 91 ab 00 	lds	r26, 0x00AB	; 0x8000ab <timer0_overflow_count+0x2>
     14a:	b0 91 ac 00 	lds	r27, 0x00AC	; 0x8000ac <timer0_overflow_count+0x3>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:252
#endif

  // TCNT0 : The Timer Counter Register
#if defined(TCNT0)
  t = TCNT0;
     14e:	22 b7       	in	r18, 0x32	; 50
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:268
    m++;
#else
    q = 1;
#endif
#else
  if ((TIFR & _BV(TOV0)) && (t < 255))
     150:	08 b6       	in	r0, 0x38	; 56
     152:	00 fe       	sbrs	r0, 0
     154:	05 c0       	rjmp	.+10     	; 0x160 <micros+0x26>
     156:	2f 3f       	cpi	r18, 0xFF	; 255
     158:	19 f0       	breq	.+6      	; 0x160 <micros+0x26>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:270
#ifndef CORRECT_EXACT_MICROS
    m++;
     15a:	01 96       	adiw	r24, 0x01	; 1
     15c:	a1 1d       	adc	r26, r1
     15e:	b1 1d       	adc	r27, r1
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:276
#else
    q = 1;
#endif
#endif
  // Restore SREG
  SREG = oldSREG;
     160:	3f bf       	out	0x3f, r19	; 63
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:292
      ((t * MICROSECONDS_PER_TIMER0_OVERFLOW) >> 8);
  return q ? m + MICROSECONDS_PER_TIMER0_OVERFLOW : m;
#elif 1
  /* All power-of-two Megahertz frequencies enter here, as well as 12.8 MHz.
     We only end up here if right shift before multiplication is exact. */
  return ((m << 8) + t) * (MICROSECONDS_PER_TIMER0_OVERFLOW >> 8);
     162:	ba 2f       	mov	r27, r26
     164:	a9 2f       	mov	r26, r25
     166:	98 2f       	mov	r25, r24
     168:	88 27       	eor	r24, r24
     16a:	bc 01       	movw	r22, r24
     16c:	cd 01       	movw	r24, r26
     16e:	62 0f       	add	r22, r18
     170:	71 1d       	adc	r23, r1
     172:	81 1d       	adc	r24, r1
     174:	91 1d       	adc	r25, r1
     176:	43 e0       	ldi	r20, 0x03	; 3
     178:	66 0f       	add	r22, r22
     17a:	77 1f       	adc	r23, r23
     17c:	88 1f       	adc	r24, r24
     17e:	99 1f       	adc	r25, r25
     180:	4a 95       	dec	r20
     182:	d1 f7       	brne	.-12     	; 0x178 <micros+0x3e>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:393
  // m & t are multiplied by 4 (since it was already multiplied by 256)
  // t is multiplied by 4
  return ((m << 8) + t) * (64 / clockCyclesPerMicrosecond());
#endif
#endif // 0
}
     184:	08 95       	ret

00000186 <delay>:
delay():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:396

void delay(unsigned long ms)
{
     186:	8f 92       	push	r8
     188:	9f 92       	push	r9
     18a:	af 92       	push	r10
     18c:	bf 92       	push	r11
     18e:	cf 92       	push	r12
     190:	df 92       	push	r13
     192:	ef 92       	push	r14
     194:	ff 92       	push	r15
     196:	4b 01       	movw	r8, r22
     198:	5c 01       	movw	r10, r24
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:397
  unsigned long start = micros();
     19a:	cf df       	rcall	.-98     	; 0x13a <micros>
     19c:	6b 01       	movw	r12, r22
     19e:	7c 01       	movw	r14, r24
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:401

  while (ms > 0UL) {
    yield();
    while (ms > 0UL && (micros() - start) >= 1000UL) {
     1a0:	cc df       	rcall	.-104    	; 0x13a <micros>
     1a2:	6c 19       	sub	r22, r12
     1a4:	7d 09       	sbc	r23, r13
     1a6:	8e 09       	sbc	r24, r14
     1a8:	9f 09       	sbc	r25, r15
     1aa:	68 3e       	cpi	r22, 0xE8	; 232
     1ac:	73 40       	sbci	r23, 0x03	; 3
     1ae:	81 05       	cpc	r24, r1
     1b0:	91 05       	cpc	r25, r1
     1b2:	b0 f3       	brcs	.-20     	; 0x1a0 <delay+0x1a>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:402
      ms--;
     1b4:	21 e0       	ldi	r18, 0x01	; 1
     1b6:	82 1a       	sub	r8, r18
     1b8:	91 08       	sbc	r9, r1
     1ba:	a1 08       	sbc	r10, r1
     1bc:	b1 08       	sbc	r11, r1
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:403
      start += 1000UL;
     1be:	88 ee       	ldi	r24, 0xE8	; 232
     1c0:	c8 0e       	add	r12, r24
     1c2:	83 e0       	ldi	r24, 0x03	; 3
     1c4:	d8 1e       	adc	r13, r24
     1c6:	e1 1c       	adc	r14, r1
     1c8:	f1 1c       	adc	r15, r1
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:401
{
  unsigned long start = micros();

  while (ms > 0UL) {
    yield();
    while (ms > 0UL && (micros() - start) >= 1000UL) {
     1ca:	81 14       	cp	r8, r1
     1cc:	91 04       	cpc	r9, r1
     1ce:	a1 04       	cpc	r10, r1
     1d0:	b1 04       	cpc	r11, r1
     1d2:	31 f7       	brne	.-52     	; 0x1a0 <delay+0x1a>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:406
      ms--;
      start += 1000UL;
    }
  }
}
     1d4:	ff 90       	pop	r15
     1d6:	ef 90       	pop	r14
     1d8:	df 90       	pop	r13
     1da:	cf 90       	pop	r12
     1dc:	bf 90       	pop	r11
     1de:	af 90       	pop	r10
     1e0:	9f 90       	pop	r9
     1e2:	8f 90       	pop	r8
     1e4:	08 95       	ret

000001e6 <PixelController<(EOrder)66, 1, 4294967295ul>::init_binary_dithering()>:
_ZN15PixelControllerIL6EOrder66ELi1ELm4294967295EE21init_binary_ditheringEv():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:372

#endif


        /// Set up the values for binary dithering
        void init_binary_dithering() {
     1e6:	0f 93       	push	r16
     1e8:	1f 93       	push	r17
     1ea:	cf 93       	push	r28
     1ec:	df 93       	push	r29
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:376
#if !defined(NO_DITHERING) || (NO_DITHERING != 1)
            // R is the digther signal 'counter'.
            static uint8_t R = 0;
            ++R;
     1ee:	20 91 a7 00 	lds	r18, 0x00A7	; 0x8000a7 <PixelController<(EOrder)66, 1, 4294967295ul>::init_binary_dithering()::R>
     1f2:	2f 5f       	subi	r18, 0xFF	; 255
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:381

            // R is wrapped around at 2^ditherBits,
            // so if ditherBits is 2, R will cycle through (0,1,2,3)
            uint8_t ditherBits = VIRTUAL_BITS;
            R &= (0x01 << ditherBits) - 1;
     1f4:	32 2f       	mov	r19, r18
     1f6:	37 70       	andi	r19, 0x07	; 7
     1f8:	30 93 a7 00 	sts	0x00A7, r19	; 0x8000a7 <PixelController<(EOrder)66, 1, 4294967295ul>::init_binary_dithering()::R>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:390
            // If 'ditherBits' is 2, Q here will cycle through (0,128,64,192)
            uint8_t Q = 0;

            // Reverse bits in a byte
            {
                if(R & 0x01) { Q |= 0x80; }
     1fc:	20 ff       	sbrs	r18, 0
     1fe:	2a c0       	rjmp	.+84     	; 0x254 <PixelController<(EOrder)66, 1, 4294967295ul>::init_binary_dithering()+0x6e>
     200:	20 e8       	ldi	r18, 0x80	; 128
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:391
                if(R & 0x02) { Q |= 0x40; }
     202:	31 fd       	sbrc	r19, 1
     204:	20 64       	ori	r18, 0x40	; 64
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:392
                if(R & 0x04) { Q |= 0x20; }
     206:	34 70       	andi	r19, 0x04	; 4
     208:	09 f0       	breq	.+2      	; 0x20c <PixelController<(EOrder)66, 1, 4294967295ul>::init_binary_dithering()+0x26>
     20a:	20 62       	ori	r18, 0x20	; 32
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:405
            // Now we adjust Q to fall in the center of each range,
            // instead of at the start of the range.
            // If ditherBits is 2, Q will be (0, 128, 64, 192) at first,
            // and this adjustment makes it (31, 159, 95, 223).
            if( ditherBits < 8) {
                Q += 0x01 << (7 - ditherBits);
     20c:	20 5f       	subi	r18, 0xF0	; 240
     20e:	fc 01       	movw	r30, r24
     210:	ec 01       	movw	r28, r24
     212:	23 96       	adiw	r28, 0x03	; 3
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:415
            // actual dithering.

            // Setup the initial D and E values
            for(int i = 0; i < 3; ++i) {
                    uint8_t s = mScale.raw[i];
                    e[i] = s ? (256/s) + 1 : 0;
     214:	00 e0       	ldi	r16, 0x00	; 0
     216:	11 e0       	ldi	r17, 0x01	; 1
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:414
            // which is added to pixel values to affect the
            // actual dithering.

            // Setup the initial D and E values
            for(int i = 0; i < 3; ++i) {
                    uint8_t s = mScale.raw[i];
     218:	64 85       	ldd	r22, Z+12	; 0x0c
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:415
                    e[i] = s ? (256/s) + 1 : 0;
     21a:	66 23       	and	r22, r22
     21c:	21 f0       	breq	.+8      	; 0x226 <PixelController<(EOrder)66, 1, 4294967295ul>::init_binary_dithering()+0x40>
     21e:	70 e0       	ldi	r23, 0x00	; 0
     220:	c8 01       	movw	r24, r16
     222:	11 dc       	rcall	.-2014   	; 0xfffffa46 <__eeprom_end+0xff7efa46>
     224:	6f 5f       	subi	r22, 0xFF	; 255
     226:	61 87       	std	Z+9, r22	; 0x09
scale8():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/lib8tion/scale8.h:93
        "clr __zero_reg__    \n\t"

        : "+a" (i)      /* writes to i */
        : "a"  (scale)  /* uses scale */
        : "r0", "r1"    /* clobbers r0, r1 */
    );
     228:	32 2f       	mov	r19, r18
     22a:	36 9f       	mul	r19, r22
     22c:	03 0e       	add	r0, r19
     22e:	30 e0       	ldi	r19, 0x00	; 0
     230:	31 1d       	adc	r19, r1
     232:	11 24       	eor	r1, r1
_ZN15PixelControllerIL6EOrder66ELi1ELm4294967295EE21init_binary_ditheringEv():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:418
                    d[i] = scale8(Q, e[i]);
#if (FASTLED_SCALE8_FIXED == 1)
                    if(d[i]) (--d[i]);
     234:	31 11       	cpse	r19, r1
     236:	10 c0       	rjmp	.+32     	; 0x258 <PixelController<(EOrder)66, 1, 4294967295ul>::init_binary_dithering()+0x72>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:416

            // Setup the initial D and E values
            for(int i = 0; i < 3; ++i) {
                    uint8_t s = mScale.raw[i];
                    e[i] = s ? (256/s) + 1 : 0;
                    d[i] = scale8(Q, e[i]);
     238:	16 82       	std	Z+6, r1	; 0x06
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:420
#if (FASTLED_SCALE8_FIXED == 1)
                    if(d[i]) (--d[i]);
#endif
                    if(e[i]) --e[i];
     23a:	66 23       	and	r22, r22
     23c:	11 f0       	breq	.+4      	; 0x242 <PixelController<(EOrder)66, 1, 4294967295ul>::init_binary_dithering()+0x5c>
     23e:	61 50       	subi	r22, 0x01	; 1
     240:	61 87       	std	Z+9, r22	; 0x09
     242:	31 96       	adiw	r30, 0x01	; 1
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:413
            // D and E form the "scaled dither signal"
            // which is added to pixel values to affect the
            // actual dithering.

            // Setup the initial D and E values
            for(int i = 0; i < 3; ++i) {
     244:	ec 17       	cp	r30, r28
     246:	fd 07       	cpc	r31, r29
     248:	39 f7       	brne	.-50     	; 0x218 <PixelController<(EOrder)66, 1, 4294967295ul>::init_binary_dithering()+0x32>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:423
                    if(d[i]) (--d[i]);
#endif
                    if(e[i]) --e[i];
            }
#endif
        }
     24a:	df 91       	pop	r29
     24c:	cf 91       	pop	r28
     24e:	1f 91       	pop	r17
     250:	0f 91       	pop	r16
     252:	08 95       	ret
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:386
            R &= (0x01 << ditherBits) - 1;

            // Q is the "unscaled dither signal" itself.
            // It's initialized to the reversed bits of R.
            // If 'ditherBits' is 2, Q here will cycle through (0,128,64,192)
            uint8_t Q = 0;
     254:	20 e0       	ldi	r18, 0x00	; 0
     256:	d5 cf       	rjmp	.-86     	; 0x202 <PixelController<(EOrder)66, 1, 4294967295ul>::init_binary_dithering()+0x1c>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:418
            for(int i = 0; i < 3; ++i) {
                    uint8_t s = mScale.raw[i];
                    e[i] = s ? (256/s) + 1 : 0;
                    d[i] = scale8(Q, e[i]);
#if (FASTLED_SCALE8_FIXED == 1)
                    if(d[i]) (--d[i]);
     258:	31 50       	subi	r19, 0x01	; 1
     25a:	36 83       	std	Z+6, r19	; 0x06
     25c:	ee cf       	rjmp	.-36     	; 0x23a <PixelController<(EOrder)66, 1, 4294967295ul>::init_binary_dithering()+0x54>

0000025e <ClocklessController<(unsigned char)11, 2, 5, 3, (EOrder)66, 0, false, 10>::showPixels(PixelController<(EOrder)66, 1, 4294967295ul>&)>:
_ZN19ClocklessControllerILh11ELi2ELi5ELi3EL6EOrder66ELi0ELb0ELi10EE10showPixelsER15PixelControllerILS0_66ELi1ELm4294967295EE():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:120

protected:
	virtual void showPixels(PixelController<RGB_ORDER> & pixels) {
     25e:	4f 92       	push	r4
     260:	5f 92       	push	r5
     262:	7f 92       	push	r7
     264:	8f 92       	push	r8
     266:	9f 92       	push	r9
     268:	af 92       	push	r10
     26a:	bf 92       	push	r11
     26c:	cf 92       	push	r12
     26e:	df 92       	push	r13
     270:	ef 92       	push	r14
     272:	ff 92       	push	r15
     274:	0f 93       	push	r16
     276:	1f 93       	push	r17
     278:	cf 93       	push	r28
     27a:	df 93       	push	r29
     27c:	2c 01       	movw	r4, r24
     27e:	eb 01       	movw	r28, r22
wait():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/fastled_delay.h:28

	/// Blocking delay until WAIT time since mark() has passed
	void wait() {
		uint16_t diff;
		do {
			diff = (micros() & 0xFFFF) - mLastMicros;
     280:	5c df       	rcall	.-328    	; 0x13a <micros>
     282:	f2 01       	movw	r30, r4
     284:	27 85       	ldd	r18, Z+15	; 0x0f
     286:	30 89       	ldd	r19, Z+16	; 0x10
     288:	62 1b       	sub	r22, r18
     28a:	73 0b       	sbc	r23, r19
C:\Users\user\Documents\Arduino\libraries\FastLED\src/fastled_delay.h:29
		} while(diff < WAIT);
     28c:	6a 30       	cpi	r22, 0x0A	; 10
     28e:	71 05       	cpc	r23, r1
     290:	b8 f3       	brcs	.-18     	; 0x280 <ClocklessController<(unsigned char)11, 2, 5, 3, (EOrder)66, 0, false, 10>::showPixels(PixelController<(EOrder)66, 1, 4294967295ul>&)+0x22>
_ZN19ClocklessControllerILh11ELi2ELi5ELi3EL6EOrder66ELi0ELb0ELi10EE10showPixelsER15PixelControllerILS0_66ELi1ELm4294967295EE():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:123

		mWait.wait();
		cli();
     292:	f8 94       	cli
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:125

		if(pixels.mLen > 0) {
     294:	8a 81       	ldd	r24, Y+2	; 0x02
     296:	9b 81       	ldd	r25, Y+3	; 0x03
     298:	18 16       	cp	r1, r24
     29a:	19 06       	cpc	r1, r25
     29c:	0c f0       	brlt	.+2      	; 0x2a0 <ClocklessController<(unsigned char)11, 2, 5, 3, (EOrder)66, 0, false, 10>::showPixels(PixelController<(EOrder)66, 1, 4294967295ul>&)+0x42>
     29e:	40 c1       	rjmp	.+640    	; 0x520 <L_3386>
showRGBInternal():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:361
#define FL_FALLTHROUGH __attribute__ ((fallthrough));

	// This method is made static to force making register Y available to use for data on AVR - if the method is non-static, then
	// gcc will use register Y for the this pointer.
	static void /*__attribute__((optimize("O0")))*/  /*__attribute__ ((always_inline))*/  showRGBInternal(PixelController<RGB_ORDER> & pixels)  {
		uint8_t *data = (uint8_t*)pixels.mData;
     2a0:	e8 81       	ld	r30, Y
     2a2:	f9 81       	ldd	r31, Y+1	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:367
		data_ptr_t port = FastPin<DATA_PIN>::port();
		data_t mask = FastPin<DATA_PIN>::mask();
		uint8_t scale_base = 0;

		// FASTLED_REGISTER uint8_t *end = data + nLeds;
		data_t hi = *port | mask;
     2a4:	68 b3       	in	r22, 0x18	; 24
     2a6:	86 2e       	mov	r8, r22
     2a8:	68 94       	set
     2aa:	83 f8       	bld	r8, 3
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:368
		data_t lo = *port & ~mask;
     2ac:	38 b3       	in	r19, 0x18	; 24
     2ae:	37 7f       	andi	r19, 0xF7	; 247
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:369
		*port = lo;
     2b0:	38 bb       	out	0x18, r19	; 24
_ZN15PixelControllerIL6EOrder66ELi1ELm4294967295EE25preStepFirstByteDitheringEv():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:471
                d[2] = e[2] - d[2];
        }

        /// Some chipsets pre-cycle the first byte, which means we want to cycle byte 0's dithering separately
        __attribute__((always_inline)) inline void preStepFirstByteDithering() {
            d[RO(0)] = e[RO(0)] - d[RO(0)];
     2b2:	da 84       	ldd	r13, Y+10	; 0x0a
     2b4:	8f 81       	ldd	r24, Y+7	; 0x07
     2b6:	2d 2d       	mov	r18, r13
     2b8:	28 1b       	sub	r18, r24
     2ba:	82 2f       	mov	r24, r18
     2bc:	2f 83       	std	Y+7, r18	; 0x07
_ZN15PixelControllerIL6EOrder66ELi1ELm4294967295EE9advanceByEv():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:454
        /// @returns LANES from template
        __attribute__((always_inline)) inline int lanes() { return LANES; }

        /// Get the amount to advance the pointer by
        /// @returns PixelController::mAdvance
        __attribute__((always_inline)) inline int advanceBy() { return mAdvance; }
     2be:	4f 85       	ldd	r20, Y+15	; 0x0f
     2c0:	04 2e       	mov	r0, r20
     2c2:	00 0c       	add	r0, r0
     2c4:	55 0b       	sbc	r21, r21
showRGBInternal():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:383

		// pull the dithering/adjustment values out of the pixels object for direct asm access

		// even though advanceBy is only an int8, we cast it to int16 for sign extension in case it's negative.
		int16_t advanceBy = pixels.advanceBy();
		uint16_t count = pixels.mLen;
     2c6:	aa 81       	ldd	r26, Y+2	; 0x02
     2c8:	bb 81       	ldd	r27, Y+3	; 0x03
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:385

		uint8_t s0 = pixels.mScale.raw[RO(0)];
     2ca:	7d 85       	ldd	r23, Y+13	; 0x0d
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:386
		uint8_t s1 = pixels.mScale.raw[RO(1)];
     2cc:	fc 84       	ldd	r15, Y+12	; 0x0c
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:387
		uint8_t s2 = pixels.mScale.raw[RO(2)];
     2ce:	ee 84       	ldd	r14, Y+14	; 0x0e
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:389
#if (FASTLED_SCALE8_FIXED==1)
		s0++; s1++; s2++;
     2d0:	7f 5f       	subi	r23, 0xFF	; 255
     2d2:	f3 94       	inc	r15
     2d4:	e3 94       	inc	r14
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:392
#endif
		uint8_t d0 = pixels.d[RO(0)];
		uint8_t d1 = pixels.d[RO(1)];
     2d6:	9e 81       	ldd	r25, Y+6	; 0x06
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:393
		uint8_t d2 = pixels.d[RO(2)];
     2d8:	98 84       	ldd	r9, Y+8	; 0x08
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:395
		uint8_t e0 = pixels.e[RO(0)];
		uint8_t e1 = pixels.e[RO(1)];
     2da:	b9 84       	ldd	r11, Y+9	; 0x09
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:396
		uint8_t e2 = pixels.e[RO(2)];
     2dc:	ab 84       	ldd	r10, Y+11	; 0x0b
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:401

		uint8_t loopvar=0;

		// This has to be done in asm to keep gcc from messing up the asm code further down
		b0 = data[RO(0)];
     2de:	11 81       	ldd	r17, Z+1	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:403
		{
			LDSCL4(b0,O0) 	PRESCALEA2(d0)
     2e0:	c1 2c       	mov	r12, r1
     2e2:	6c 2d       	mov	r22, r12
     2e4:	0c 2d       	mov	r16, r12
     2e6:	2c 2d       	mov	r18, r12
     2e8:	21 81       	ldd	r18, Z+1	; 0x01
     2ea:	11 27       	eor	r17, r17
     2ec:	88 94       	clc
     2ee:	21 11       	cpse	r18, r1
     2f0:	28 0f       	add	r18, r24
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:404
			PRESCALEB4(d0)	SCALE02(b0,0)
     2f2:	08 f4       	brcc	.+2      	; 0x2f6 <L_637>
     2f4:	2f ef       	ldi	r18, 0xFF	; 255

000002f6 <L_637>:
     2f6:	81 95       	neg	r24
     2f8:	88 94       	clc
     2fa:	70 fd       	sbrc	r23, 0
     2fc:	12 0f       	add	r17, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:405
			RORSC04(b0,1) 	ROR1(b0) CLC1
     2fe:	17 95       	ror	r17
     300:	88 94       	clc
     302:	71 fd       	sbrc	r23, 1
     304:	12 0f       	add	r17, r18
     306:	17 95       	ror	r17
     308:	88 94       	clc
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:406
			SCROR04(b0,2)		SCALE02(b0,3)
     30a:	72 fd       	sbrc	r23, 2
     30c:	12 0f       	add	r17, r18
     30e:	17 95       	ror	r17
     310:	88 94       	clc
     312:	73 fd       	sbrc	r23, 3
     314:	12 0f       	add	r17, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:407
			RORSC04(b0,4) 	ROR1(b0) CLC1
     316:	17 95       	ror	r17
     318:	88 94       	clc
     31a:	74 fd       	sbrc	r23, 4
     31c:	12 0f       	add	r17, r18
     31e:	17 95       	ror	r17
     320:	88 94       	clc
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:408
			SCROR04(b0,5) 	SCALE02(b0,6)
     322:	75 fd       	sbrc	r23, 5
     324:	12 0f       	add	r17, r18
     326:	17 95       	ror	r17
     328:	88 94       	clc
     32a:	76 fd       	sbrc	r23, 6
     32c:	12 0f       	add	r17, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:409
			RORSC04(b0,7) 	ROR1(b0) CLC1
     32e:	17 95       	ror	r17
     330:	88 94       	clc
     332:	77 fd       	sbrc	r23, 7
     334:	12 0f       	add	r17, r18
     336:	17 95       	ror	r17
     338:	88 94       	clc
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:410
			MOV_ADDDE04(b1,b0,d0,e0)
     33a:	62 2f       	mov	r22, r18
     33c:	71 11       	cpse	r23, r1
     33e:	61 2f       	mov	r22, r17
     340:	8d 0d       	add	r24, r13
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:411
			MOV1(b0,b1)
     342:	16 2f       	mov	r17, r22
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:418

		{
			// while(--count)
			{
				// Loop beginning
				DNOP;
     344:	00 2c       	mov	r0, r0
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:432
				// out.  When doing byte 1, we're doing the above for byte 2.  When we're doing byte 2,
				// we're cycling back around and doing the above for byte 0.

				// Inline scaling - RGB ordering
				// DNOP
				HI1 _D1(1) QLO2(b0, 7) LDSCL4(b1,O1) 	_D2(4)	LO1	PRESCALEA2(d1)	_D3(2)
     346:	88 ba       	out	0x18, r8	; 24
     348:	17 ff       	sbrs	r17, 7
     34a:	38 bb       	out	0x18, r19	; 24
     34c:	20 81       	ld	r18, Z
     34e:	66 27       	eor	r22, r22
     350:	88 94       	clc
     352:	38 bb       	out	0x18, r19	; 24
     354:	21 11       	cpse	r18, r1
     356:	29 0f       	add	r18, r25
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:433
				HI1 _D1(1) QLO2(b0, 6) PRESCALEB4(d1)	_D2(4)	LO1	SCALE12(b1,0)	_D3(2)
     358:	88 ba       	out	0x18, r8	; 24
     35a:	16 ff       	sbrs	r17, 6
     35c:	38 bb       	out	0x18, r19	; 24
     35e:	08 f4       	brcc	.+2      	; 0x362 <L_1113>
     360:	2f ef       	ldi	r18, 0xFF	; 255

00000362 <L_1113>:
     362:	91 95       	neg	r25
     364:	88 94       	clc
     366:	38 bb       	out	0x18, r19	; 24
     368:	f0 fc       	sbrc	r15, 0
     36a:	62 0f       	add	r22, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:434
				HI1 _D1(1) QLO2(b0, 5) RORSC14(b1,1) 	_D2(4)	LO1 RORCLC2(b1)		_D3(2)
     36c:	88 ba       	out	0x18, r8	; 24
     36e:	15 ff       	sbrs	r17, 5
     370:	38 bb       	out	0x18, r19	; 24
     372:	67 95       	ror	r22
     374:	88 94       	clc
     376:	f1 fc       	sbrc	r15, 1
     378:	62 0f       	add	r22, r18
     37a:	38 bb       	out	0x18, r19	; 24
     37c:	67 95       	ror	r22
     37e:	88 94       	clc
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:435
				HI1 _D1(1) QLO2(b0, 4) SCROR14(b1,2)	_D2(4)	LO1 SCALE12(b1,3)	_D3(2)
     380:	88 ba       	out	0x18, r8	; 24
     382:	14 ff       	sbrs	r17, 4
     384:	38 bb       	out	0x18, r19	; 24
     386:	f2 fc       	sbrc	r15, 2
     388:	62 0f       	add	r22, r18
     38a:	67 95       	ror	r22
     38c:	88 94       	clc
     38e:	38 bb       	out	0x18, r19	; 24
     390:	f3 fc       	sbrc	r15, 3
     392:	62 0f       	add	r22, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:436
				HI1 _D1(1) QLO2(b0, 3) RORSC14(b1,4) 	_D2(4)	LO1 RORCLC2(b1) 	_D3(2)
     394:	88 ba       	out	0x18, r8	; 24
     396:	13 ff       	sbrs	r17, 3
     398:	38 bb       	out	0x18, r19	; 24
     39a:	67 95       	ror	r22
     39c:	88 94       	clc
     39e:	f4 fc       	sbrc	r15, 4
     3a0:	62 0f       	add	r22, r18
     3a2:	38 bb       	out	0x18, r19	; 24
     3a4:	67 95       	ror	r22
     3a6:	88 94       	clc
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:437
				HI1 _D1(1) QLO2(b0, 2) SCROR14(b1,5) 	_D2(4)	LO1 SCALE12(b1,6)	_D3(2)
     3a8:	88 ba       	out	0x18, r8	; 24
     3aa:	12 ff       	sbrs	r17, 2
     3ac:	38 bb       	out	0x18, r19	; 24
     3ae:	f5 fc       	sbrc	r15, 5
     3b0:	62 0f       	add	r22, r18
     3b2:	67 95       	ror	r22
     3b4:	88 94       	clc
     3b6:	38 bb       	out	0x18, r19	; 24
     3b8:	f6 fc       	sbrc	r15, 6
     3ba:	62 0f       	add	r22, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:438
				HI1 _D1(1) QLO2(b0, 1) RORSC14(b1,7) 	_D2(4)	LO1 RORCLC2(b1) 	_D3(2)
     3bc:	88 ba       	out	0x18, r8	; 24
     3be:	11 ff       	sbrs	r17, 1
     3c0:	38 bb       	out	0x18, r19	; 24
     3c2:	67 95       	ror	r22
     3c4:	88 94       	clc
     3c6:	f7 fc       	sbrc	r15, 7
     3c8:	62 0f       	add	r22, r18
     3ca:	38 bb       	out	0x18, r19	; 24
     3cc:	67 95       	ror	r22
     3ce:	88 94       	clc
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:439
				HI1 _D1(1) QLO2(b0, 0)
     3d0:	88 ba       	out	0x18, r8	; 24
     3d2:	10 ff       	sbrs	r17, 0
     3d4:	38 bb       	out	0x18, r19	; 24
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:446
					case 4: _D2(0) LO1 _D3(0) HI1 _D1(1) QLO2(b0,0)  /* fall through */
					case 3: _D2(0) LO1 _D3(0) HI1 _D1(1) QLO2(b0,0)  /* fall through */
					case 2: _D2(0) LO1 _D3(0) HI1 _D1(1) QLO2(b0,0)  /* fall through */
					case 1: _D2(0) LO1 _D3(0) HI1 _D1(1) QLO2(b0,0)
				}
				MOV_ADDDE14(b0,b1,d1,e1) _D2(4) LO1 _D3(0)
     3d6:	12 2f       	mov	r17, r18
     3d8:	f1 10       	cpse	r15, r1
     3da:	16 2f       	mov	r17, r22
     3dc:	9b 0d       	add	r25, r11
     3de:	38 bb       	out	0x18, r19	; 24
_Z3_dcILi2EEvRh():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:55
template<> __attribute__((always_inline)) inline void _dc< 0>(FASTLED_REGISTER uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(FASTLED_REGISTER uint8_t & ) {asm __volatile__("mov r0,r0":::);}
#if defined(__LGT8F__) 
template<> __attribute__((always_inline)) inline void _dc< 2>(FASTLED_REGISTER uint8_t & loopvar) { _dc<1>(loopvar); _dc<1>(loopvar); }
#else
template<> __attribute__((always_inline)) inline void _dc< 2>(FASTLED_REGISTER uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     3e0:	00 c0       	rjmp	.+0      	; 0x3e2 <L_1113+0x80>
showRGBInternal():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:448
					case 2: _D2(0) LO1 _D3(0) HI1 _D1(1) QLO2(b0,0)  /* fall through */
					case 1: _D2(0) LO1 _D3(0) HI1 _D1(1) QLO2(b0,0)
				}
				MOV_ADDDE14(b0,b1,d1,e1) _D2(4) LO1 _D3(0)

				HI1 _D1(1) QLO2(b0, 7) LDSCL4(b1,O2) 	_D2(4)	LO1	PRESCALEA2(d2)	_D3(2)
     3e2:	88 ba       	out	0x18, r8	; 24
     3e4:	17 ff       	sbrs	r17, 7
     3e6:	38 bb       	out	0x18, r19	; 24
     3e8:	22 81       	ldd	r18, Z+2	; 0x02
     3ea:	66 27       	eor	r22, r22
     3ec:	88 94       	clc
     3ee:	38 bb       	out	0x18, r19	; 24
     3f0:	21 11       	cpse	r18, r1
     3f2:	29 0d       	add	r18, r9
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:449
				HI1 _D1(1) QLO2(b0, 6) PSBIDATA4(d2)	_D2(4)	LO1	SCALE22(b1,0)	_D3(2)
     3f4:	88 ba       	out	0x18, r8	; 24
     3f6:	16 ff       	sbrs	r17, 6
     3f8:	38 bb       	out	0x18, r19	; 24
     3fa:	08 f4       	brcc	.+2      	; 0x3fe <L_1918>
     3fc:	2f ef       	ldi	r18, 0xFF	; 255

000003fe <L_1918>:
     3fe:	e4 0f       	add	r30, r20
     400:	f5 1f       	adc	r31, r21
     402:	38 bb       	out	0x18, r19	; 24
     404:	e0 fc       	sbrc	r14, 0
     406:	62 0f       	add	r22, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:450
				HI1 _D1(1) QLO2(b0, 5) RORSC24(b1,1) 	_D2(4)	LO1 RORCLC2(b1) 	_D3(2)
     408:	88 ba       	out	0x18, r8	; 24
     40a:	15 ff       	sbrs	r17, 5
     40c:	38 bb       	out	0x18, r19	; 24
     40e:	67 95       	ror	r22
     410:	88 94       	clc
     412:	e1 fc       	sbrc	r14, 1
     414:	62 0f       	add	r22, r18
     416:	38 bb       	out	0x18, r19	; 24
     418:	67 95       	ror	r22
     41a:	88 94       	clc
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:451
				HI1 _D1(1) QLO2(b0, 4) SCROR24(b1,2)	_D2(4)	LO1 SCALE22(b1,3)	_D3(2)
     41c:	88 ba       	out	0x18, r8	; 24
     41e:	14 ff       	sbrs	r17, 4
     420:	38 bb       	out	0x18, r19	; 24
     422:	e2 fc       	sbrc	r14, 2
     424:	62 0f       	add	r22, r18
     426:	67 95       	ror	r22
     428:	88 94       	clc
     42a:	38 bb       	out	0x18, r19	; 24
     42c:	e3 fc       	sbrc	r14, 3
     42e:	62 0f       	add	r22, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:452
				HI1 _D1(1) QLO2(b0, 3) RORSC24(b1,4) 	_D2(4)	LO1 RORCLC2(b1) 	_D3(2)
     430:	88 ba       	out	0x18, r8	; 24
     432:	13 ff       	sbrs	r17, 3
     434:	38 bb       	out	0x18, r19	; 24
     436:	67 95       	ror	r22
     438:	88 94       	clc
     43a:	e4 fc       	sbrc	r14, 4
     43c:	62 0f       	add	r22, r18
     43e:	38 bb       	out	0x18, r19	; 24
     440:	67 95       	ror	r22
     442:	88 94       	clc
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:453
				HI1 _D1(1) QLO2(b0, 2) SCROR24(b1,5) 	_D2(4)	LO1 SCALE22(b1,6)	_D3(2)
     444:	88 ba       	out	0x18, r8	; 24
     446:	12 ff       	sbrs	r17, 2
     448:	38 bb       	out	0x18, r19	; 24
     44a:	e5 fc       	sbrc	r14, 5
     44c:	62 0f       	add	r22, r18
     44e:	67 95       	ror	r22
     450:	88 94       	clc
     452:	38 bb       	out	0x18, r19	; 24
     454:	e6 fc       	sbrc	r14, 6
     456:	62 0f       	add	r22, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:454
				HI1 _D1(1) QLO2(b0, 1) RORSC24(b1,7) 	_D2(4)	LO1 RORCLC2(b1) 	_D3(2)
     458:	88 ba       	out	0x18, r8	; 24
     45a:	11 ff       	sbrs	r17, 1
     45c:	38 bb       	out	0x18, r19	; 24
     45e:	67 95       	ror	r22
     460:	88 94       	clc
     462:	e7 fc       	sbrc	r14, 7
     464:	62 0f       	add	r22, r18
     466:	38 bb       	out	0x18, r19	; 24
     468:	67 95       	ror	r22
     46a:	88 94       	clc
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:455
				HI1 _D1(1) QLO2(b0, 0)
     46c:	88 ba       	out	0x18, r8	; 24
     46e:	10 ff       	sbrs	r17, 0
     470:	38 bb       	out	0x18, r19	; 24
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:466
				}

				// Because Prescale on the middle byte also increments the data counter,
				// we have to do both halves of updating d2 here - negating it (in the
				// MOV_NEGD24 macro) and then adding E back into it
				MOV_NEGD24(b0,b1,d2) _D2(4) LO1 ADDDE1(d2,e2) _D3(1)
     472:	12 2f       	mov	r17, r18
     474:	e1 10       	cpse	r14, r1
     476:	16 2f       	mov	r17, r22
     478:	91 94       	neg	r9
     47a:	38 bb       	out	0x18, r19	; 24
     47c:	9a 0c       	add	r9, r10
_Z3_dcILi1EEvRh():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(FASTLED_REGISTER uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(FASTLED_REGISTER uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(FASTLED_REGISTER uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(FASTLED_REGISTER uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(FASTLED_REGISTER uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(FASTLED_REGISTER uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     47e:	00 2c       	mov	r0, r0
showRGBInternal():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:467

				// Because Prescale on the middle byte also increments the data counter,
				// we have to do both halves of updating d2 here - negating it (in the
				// MOV_NEGD24 macro) and then adding E back into it
				MOV_NEGD24(b0,b1,d2) _D2(4) LO1 ADDDE1(d2,e2) _D3(1)
				HI1 _D1(1) QLO2(b0, 7) LDSCL4(b1,O0) 	_D2(4)	LO1	PRESCALEA2(d0)	_D3(2)
     480:	88 ba       	out	0x18, r8	; 24
     482:	17 ff       	sbrs	r17, 7
     484:	38 bb       	out	0x18, r19	; 24
     486:	21 81       	ldd	r18, Z+1	; 0x01
     488:	66 27       	eor	r22, r22
     48a:	88 94       	clc
     48c:	38 bb       	out	0x18, r19	; 24
     48e:	21 11       	cpse	r18, r1
     490:	28 0f       	add	r18, r24
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:468
				HI1 _D1(1) QLO2(b0, 6) PRESCALEB4(d0)	_D2(4)	LO1	SCALE02(b1,0)	_D3(2)
     492:	88 ba       	out	0x18, r8	; 24
     494:	16 ff       	sbrs	r17, 6
     496:	38 bb       	out	0x18, r19	; 24
     498:	08 f4       	brcc	.+2      	; 0x49c <L_2740>
     49a:	2f ef       	ldi	r18, 0xFF	; 255

0000049c <L_2740>:
     49c:	81 95       	neg	r24
     49e:	88 94       	clc
     4a0:	38 bb       	out	0x18, r19	; 24
     4a2:	70 fd       	sbrc	r23, 0
     4a4:	62 0f       	add	r22, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:469
				HI1 _D1(1) QLO2(b0, 5) RORSC04(b1,1) 	_D2(4)	LO1 RORCLC2(b1) 	_D3(2)
     4a6:	88 ba       	out	0x18, r8	; 24
     4a8:	15 ff       	sbrs	r17, 5
     4aa:	38 bb       	out	0x18, r19	; 24
     4ac:	67 95       	ror	r22
     4ae:	88 94       	clc
     4b0:	71 fd       	sbrc	r23, 1
     4b2:	62 0f       	add	r22, r18
     4b4:	38 bb       	out	0x18, r19	; 24
     4b6:	67 95       	ror	r22
     4b8:	88 94       	clc
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:470
				HI1 _D1(1) QLO2(b0, 4) SCROR04(b1,2)	_D2(4)	LO1 SCALE02(b1,3)	_D3(2)
     4ba:	88 ba       	out	0x18, r8	; 24
     4bc:	14 ff       	sbrs	r17, 4
     4be:	38 bb       	out	0x18, r19	; 24
     4c0:	72 fd       	sbrc	r23, 2
     4c2:	62 0f       	add	r22, r18
     4c4:	67 95       	ror	r22
     4c6:	88 94       	clc
     4c8:	38 bb       	out	0x18, r19	; 24
     4ca:	73 fd       	sbrc	r23, 3
     4cc:	62 0f       	add	r22, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:471
				HI1 _D1(1) QLO2(b0, 3) RORSC04(b1,4) 	_D2(4)	LO1 RORCLC2(b1)  	_D3(2)
     4ce:	88 ba       	out	0x18, r8	; 24
     4d0:	13 ff       	sbrs	r17, 3
     4d2:	38 bb       	out	0x18, r19	; 24
     4d4:	67 95       	ror	r22
     4d6:	88 94       	clc
     4d8:	74 fd       	sbrc	r23, 4
     4da:	62 0f       	add	r22, r18
     4dc:	38 bb       	out	0x18, r19	; 24
     4de:	67 95       	ror	r22
     4e0:	88 94       	clc
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:472
				HI1 _D1(1) QLO2(b0, 2) SCROR04(b1,5) 	_D2(4)	LO1 SCALE02(b1,6)	_D3(2)
     4e2:	88 ba       	out	0x18, r8	; 24
     4e4:	12 ff       	sbrs	r17, 2
     4e6:	38 bb       	out	0x18, r19	; 24
     4e8:	75 fd       	sbrc	r23, 5
     4ea:	62 0f       	add	r22, r18
     4ec:	67 95       	ror	r22
     4ee:	88 94       	clc
     4f0:	38 bb       	out	0x18, r19	; 24
     4f2:	76 fd       	sbrc	r23, 6
     4f4:	62 0f       	add	r22, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:473
				HI1 _D1(1) QLO2(b0, 1) RORSC04(b1,7) 	_D2(4)	LO1 RORCLC2(b1) 	_D3(2)
     4f6:	88 ba       	out	0x18, r8	; 24
     4f8:	11 ff       	sbrs	r17, 1
     4fa:	38 bb       	out	0x18, r19	; 24
     4fc:	67 95       	ror	r22
     4fe:	88 94       	clc
     500:	77 fd       	sbrc	r23, 7
     502:	62 0f       	add	r22, r18
     504:	38 bb       	out	0x18, r19	; 24
     506:	67 95       	ror	r22
     508:	88 94       	clc
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:474
				HI1 _D1(1) QLO2(b0, 0)
     50a:	88 ba       	out	0x18, r8	; 24
     50c:	10 ff       	sbrs	r17, 0
     50e:	38 bb       	out	0x18, r19	; 24
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:481
					case 4: _D2(0) LO1 _D3(0) HI1 _D1(1) QLO2(b0,0)  /* fall through */
					case 3: _D2(0) LO1 _D3(0) HI1 _D1(1) QLO2(b0,0)  /* fall through */
					case 2: _D2(0) LO1 _D3(0) HI1 _D1(1) QLO2(b0,0)  /* fall through */
					case 1: _D2(0) LO1 _D3(0) HI1 _D1(1) QLO2(b0,0)
				}
				MOV_ADDDE04(b0,b1,d0,e0) _D2(4) LO1 _D3(5)
     510:	12 2f       	mov	r17, r18
     512:	71 11       	cpse	r23, r1
     514:	16 2f       	mov	r17, r22
     516:	8d 0d       	add	r24, r13
     518:	38 bb       	out	0x18, r19	; 24
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:482
				ENDLOOP5
     51a:	11 97       	sbiw	r26, 0x01	; 1
     51c:	09 f0       	breq	.+2      	; 0x520 <L_3386>
     51e:	13 cf       	rjmp	.-474    	; 0x346 <L_637+0x50>

00000520 <L_3386>:
_ZN15PixelControllerIL6EOrder66ELi1ELm4294967295EE4sizeEv():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:446
            }
        }

        /// Get the length of the LED strip
        /// @returns PixelController::mLen
        __attribute__((always_inline)) inline int size() { return mLen; }
     520:	ea 81       	ldd	r30, Y+2	; 0x02
     522:	fb 81       	ldd	r31, Y+3	; 0x03
_ZN19ClocklessControllerILh11ELi2ELi5ELi3EL6EOrder66ELi0ELb0ELi10EE10showPixelsER15PixelControllerILS0_66ELi1ELm4294967295EE():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:131
			showRGBInternal(pixels);
		}

		// Adjust the timer
#if (!defined(NO_CLOCK_CORRECTION) || (NO_CLOCK_CORRECTION == 0)) && (FASTLED_ALLOW_INTERRUPTS == 0)
        uint32_t microsTaken = (uint32_t)pixels.size() * (uint32_t)CLKS_TO_MICROS(24 * (T1 + T2 + T3));
     524:	20 ef       	ldi	r18, 0xF0	; 240
     526:	30 e0       	ldi	r19, 0x00	; 0
     528:	df 01       	movw	r26, r30
     52a:	a0 da       	rcall	.-2752   	; 0xfffffa6c <__eeprom_end+0xff7efa6c>
     52c:	6b 01       	movw	r12, r22
     52e:	7c 01       	movw	r14, r24
     530:	a3 e0       	ldi	r26, 0x03	; 3
     532:	f6 94       	lsr	r15
     534:	e7 94       	ror	r14
     536:	d7 94       	ror	r13
     538:	c7 94       	ror	r12
     53a:	aa 95       	dec	r26
     53c:	d1 f7       	brne	.-12     	; 0x532 <L_3386+0x12>
scale16by8():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/lib8tion/scale8.h:508
        "  adc %B[result], __zero_reg__        \n\t"

        : [result] "+r" (result)
        : [i] "r" (i), [scale] "r" (scale)
        : "r0", "r1"
    );
     53e:	30 e0       	ldi	r19, 0x00	; 0
     540:	20 e0       	ldi	r18, 0x00	; 0
     542:	a9 01       	movw	r20, r18
     544:	8a e9       	ldi	r24, 0x9A	; 154
     546:	e8 9f       	mul	r30, r24
     548:	0e 0e       	add	r0, r30
     54a:	41 1d       	adc	r20, r1
     54c:	f8 9f       	mul	r31, r24
     54e:	40 0d       	add	r20, r0
     550:	51 1d       	adc	r21, r1
     552:	11 24       	eor	r1, r1
     554:	4f 0f       	add	r20, r31
     556:	51 1d       	adc	r21, r1
_ZN19ClocklessControllerILh11ELi2ELi5ELi3EL6EOrder66ELi0ELb0ELi10EE10showPixelsER15PixelControllerILS0_66ELi1ELm4294967295EE():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:136

        // adust for approximate observed actal runtime (as of January 2015)
        // roughly 9.6 cycles per pixel, which is 0.6us/pixel at 16MHz
        // microsTaken += nLeds * 0.6 * CLKS_TO_MICROS(16);
        microsTaken += scale16by8(pixels.size(),(0.6 * 256) + 1) * CLKS_TO_MICROS(16);
     558:	ca 01       	movw	r24, r20
     55a:	b0 e0       	ldi	r27, 0x00	; 0
     55c:	a0 e0       	ldi	r26, 0x00	; 0
     55e:	88 0f       	add	r24, r24
     560:	99 1f       	adc	r25, r25
     562:	aa 1f       	adc	r26, r26
     564:	bb 1f       	adc	r27, r27
     566:	8c 0d       	add	r24, r12
     568:	9d 1d       	adc	r25, r13
     56a:	ae 1d       	adc	r26, r14
     56c:	bf 1d       	adc	r27, r15
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:144
        // this is because the ONE interrupt that might come in while interrupts
        // are disabled is queued up, and it will be serviced as soon as
        // interrupts are re-enabled.
        // This actually should technically also account for the runtime of the
        // interrupt handler itself, but we're just not going to worry about that.
        if( microsTaken > 1000) {
     56e:	89 3e       	cpi	r24, 0xE9	; 233
     570:	43 e0       	ldi	r20, 0x03	; 3
     572:	94 07       	cpc	r25, r20
     574:	a1 05       	cpc	r26, r1
     576:	b1 05       	cpc	r27, r1
     578:	08 f4       	brcc	.+2      	; 0x57c <L_3386+0x5c>
     57a:	34 c0       	rjmp	.+104    	; 0x5e4 <L_3386+0xc4>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:148

            // Since up to one timer tick will be queued, we don't need
            // to adjust the MS_COUNTER for that one.
            microsTaken -= 1000;
     57c:	88 5e       	subi	r24, 0xE8	; 232
     57e:	93 40       	sbci	r25, 0x03	; 3
     580:	a1 09       	sbc	r26, r1
     582:	b1 09       	sbc	r27, r1
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:153

            // Now convert microseconds to 256ths of a second, approximately like this:
            // 250ths = (us/4)
            // 256ths = 250ths * (263/256);
            uint16_t x256ths = microsTaken >> 2;
     584:	42 e0       	ldi	r20, 0x02	; 2
     586:	b6 95       	lsr	r27
     588:	a7 95       	ror	r26
     58a:	97 95       	ror	r25
     58c:	87 95       	ror	r24
     58e:	4a 95       	dec	r20
     590:	d1 f7       	brne	.-12     	; 0x586 <L_3386+0x66>
scale16by8():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/lib8tion/scale8.h:508
     592:	47 e0       	ldi	r20, 0x07	; 7
     594:	84 9f       	mul	r24, r20
     596:	08 0e       	add	r0, r24
     598:	21 1d       	adc	r18, r1
     59a:	94 9f       	mul	r25, r20
     59c:	20 0d       	add	r18, r0
     59e:	31 1d       	adc	r19, r1
     5a0:	11 24       	eor	r1, r1
     5a2:	29 0f       	add	r18, r25
     5a4:	31 1d       	adc	r19, r1
_ZN19ClocklessControllerILh11ELi2ELi5ELi3EL6EOrder66ELi0ELb0ELi10EE10showPixelsER15PixelControllerILS0_66ELi1ELm4294967295EE():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:156
            x256ths += scale16by8(x256ths,7);

            x256ths += gTimeErrorAccum256ths;
     5a6:	60 91 a6 00 	lds	r22, 0x00A6	; 0x8000a6 <__data_end>
     5aa:	70 e0       	ldi	r23, 0x00	; 0
     5ac:	86 0f       	add	r24, r22
     5ae:	97 1f       	adc	r25, r23
     5b0:	82 0f       	add	r24, r18
     5b2:	93 1f       	adc	r25, r19
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:157
            MS_COUNTER += (x256ths >> 8);
     5b4:	40 91 c8 00 	lds	r20, 0x00C8	; 0x8000c8 <timer0_millis>
     5b8:	50 91 c9 00 	lds	r21, 0x00C9	; 0x8000c9 <timer0_millis+0x1>
     5bc:	60 91 ca 00 	lds	r22, 0x00CA	; 0x8000ca <timer0_millis+0x2>
     5c0:	70 91 cb 00 	lds	r23, 0x00CB	; 0x8000cb <timer0_millis+0x3>
     5c4:	29 2f       	mov	r18, r25
     5c6:	33 27       	eor	r19, r19
     5c8:	42 0f       	add	r20, r18
     5ca:	53 1f       	adc	r21, r19
     5cc:	61 1d       	adc	r22, r1
     5ce:	71 1d       	adc	r23, r1
     5d0:	40 93 c8 00 	sts	0x00C8, r20	; 0x8000c8 <timer0_millis>
     5d4:	50 93 c9 00 	sts	0x00C9, r21	; 0x8000c9 <timer0_millis+0x1>
     5d8:	60 93 ca 00 	sts	0x00CA, r22	; 0x8000ca <timer0_millis+0x2>
     5dc:	70 93 cb 00 	sts	0x00CB, r23	; 0x8000cb <timer0_millis+0x3>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:158
            gTimeErrorAccum256ths = x256ths & 0xFF;
     5e0:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <__data_end>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:178
        MS_COUNTER += (microsTaken >> 10);
#endif

#endif

		sei();
     5e4:	78 94       	sei
mark():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/fastled_delay.h:33
	}

	/// Reset the timestamp that marks the start of the wait period
	void mark() { mLastMicros = micros() & 0xFFFF; }
     5e6:	a9 dd       	rcall	.-1198   	; 0x13a <micros>
     5e8:	f2 01       	movw	r30, r4
     5ea:	70 8b       	std	Z+16, r23	; 0x10
     5ec:	67 87       	std	Z+15, r22	; 0x0f
_ZN19ClocklessControllerILh11ELi2ELi5ELi3EL6EOrder66ELi0ELb0ELi10EE10showPixelsER15PixelControllerILS0_66ELi1ELm4294967295EE():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:180
		mWait.mark();
	}
     5ee:	df 91       	pop	r29
     5f0:	cf 91       	pop	r28
     5f2:	1f 91       	pop	r17
     5f4:	0f 91       	pop	r16
     5f6:	ff 90       	pop	r15
     5f8:	ef 90       	pop	r14
     5fa:	df 90       	pop	r13
     5fc:	cf 90       	pop	r12
     5fe:	bf 90       	pop	r11
     600:	af 90       	pop	r10
     602:	9f 90       	pop	r9
     604:	8f 90       	pop	r8
     606:	7f 90       	pop	r7
     608:	5f 90       	pop	r5
     60a:	4f 90       	pop	r4
     60c:	08 95       	ret

0000060e <CLEDController::lanes()>:
_ZN14CLEDController5lanesEv():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:169
    /// @returns CLEDController::m_nLeds
    virtual int size() { return m_nLeds; }

    /// How many Lanes does this controller manage?
    /// @returns 1 for a non-Parallel controller
    virtual int lanes() { return 1; }
     60e:	81 e0       	ldi	r24, 0x01	; 1
     610:	90 e0       	ldi	r25, 0x00	; 0
     612:	08 95       	ret

00000614 <ClocklessController<(unsigned char)11, 2, 5, 3, (EOrder)66, 0, false, 10>::init()>:
_ZN19ClocklessControllerILh11ELi2ELi5ELi3EL6EOrder66ELi0ELb0ELi10EE4initEv():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/fastpin_avr.h:22
template<uint8_t PIN, uint8_t _MASK, typename _PORT, typename _DDR, typename _PIN> class _AVRPIN {
public:
	typedef volatile uint8_t * port_ptr_t;
	typedef uint8_t port_t;

	inline static void setOutput() { _DDR::r() |= _MASK; }
     614:	bb 9a       	sbi	0x17, 3	; 23
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:115
	CMinWait<WAIT_TIME> mWait;

public:
	virtual void init() {
		FastPin<DATA_PIN>::setOutput();
	}
     616:	08 95       	ret

00000618 <CPixelLEDController<(EOrder)66, 1, 4294967295ul>::show(CRGB const*, int, CRGB)>:
_ZN19CPixelLEDControllerIL6EOrder66ELi1ELm4294967295EE4showEPK4CRGBiS2_():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:635

    /// Write the passed in RGB data out to the LEDs managed by this controller
    /// @param data the RGB data to write out to the strip
    /// @param nLeds the number of LEDs being written out
    /// @param scale the RGB scaling to apply to each LED before writing it out
    virtual void show(const struct CRGB *data, int nLeds, CRGB scale) {
     618:	6f 92       	push	r6
     61a:	7f 92       	push	r7
     61c:	8f 92       	push	r8
     61e:	cf 92       	push	r12
     620:	df 92       	push	r13
     622:	ef 92       	push	r14
     624:	ff 92       	push	r15
     626:	0f 93       	push	r16
     628:	1f 93       	push	r17
     62a:	cf 93       	push	r28
     62c:	df 93       	push	r29
     62e:	cd b7       	in	r28, 0x3d	; 61
     630:	de b7       	in	r29, 0x3e	; 62
     632:	62 97       	sbiw	r28, 0x12	; 18
     634:	0f b6       	in	r0, 0x3f	; 63
     636:	f8 94       	cli
     638:	de bf       	out	0x3e, r29	; 62
     63a:	0f be       	out	0x3f, r0	; 63
     63c:	cd bf       	out	0x3d, r28	; 61
     63e:	6c 01       	movw	r12, r24
     640:	7a 01       	movw	r14, r20
     642:	38 01       	movw	r6, r16
     644:	82 2e       	mov	r8, r18
     646:	dc 01       	movw	r26, r24
     648:	1c 96       	adiw	r26, 0x0c	; 12
     64a:	2c 91       	ld	r18, X
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:636
        PixelController<RGB_ORDER, LANES, MASK> pixels(data, nLeds < 0 ? -nLeds : nLeds, scale, getDither());
     64c:	ca 01       	movw	r24, r20
     64e:	57 ff       	sbrs	r21, 7
     650:	04 c0       	rjmp	.+8      	; 0x65a <CPixelLEDController<(EOrder)66, 1, 4294967295ul>::show(CRGB const*, int, CRGB)+0x42>
     652:	88 27       	eor	r24, r24
     654:	99 27       	eor	r25, r25
     656:	84 1b       	sub	r24, r20
     658:	95 0b       	sbc	r25, r21
__base_ctor ():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:314
        /// Constructor
        /// @param d pointer to LED data
        /// @param len length of the LED data
        /// @param s LED scale values, as CRGB struct
        /// @param dither dither setting for the LEDs
        PixelController(const CRGB *d, int len, CRGB & s, EDitherMode dither = BINARY_DITHER) : mData((const uint8_t*)d), mLen(len), mLenRemaining(len), mScale(s) {
     65a:	7a 83       	std	Y+2, r23	; 0x02
     65c:	69 83       	std	Y+1, r22	; 0x01
     65e:	9c 83       	std	Y+4, r25	; 0x04
     660:	8b 83       	std	Y+3, r24	; 0x03
     662:	9e 83       	std	Y+6, r25	; 0x06
     664:	8d 83       	std	Y+5, r24	; 0x05
     666:	6d 86       	std	Y+13, r6	; 0x0d
     668:	7e 86       	std	Y+14, r7	; 0x0e
     66a:	8f 86       	std	Y+15, r8	; 0x0f
enable_dithering():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:438
        /// If dithering is set to enabled, this will re-init the dithering values
        /// (init_binary_dithering()). Otherwise it will clear the stored dithering
        /// data.
        /// @param dither the dither setting
        void enable_dithering(EDitherMode dither) {
            switch(dither) {
     66c:	21 30       	cpi	r18, 0x01	; 1
     66e:	41 f5       	brne	.+80     	; 0x6c0 <CPixelLEDController<(EOrder)66, 1, 4294967295ul>::show(CRGB const*, int, CRGB)+0xa8>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:439
                case BINARY_DITHER: init_binary_dithering(); break;
     670:	ce 01       	movw	r24, r28
     672:	01 96       	adiw	r24, 0x01	; 1
     674:	b8 dd       	rcall	.-1168   	; 0x1e6 <PixelController<(EOrder)66, 1, 4294967295ul>::init_binary_dithering()>
__base_ctor ():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:316
        /// @param len length of the LED data
        /// @param s LED scale values, as CRGB struct
        /// @param dither dither setting for the LEDs
        PixelController(const CRGB *d, int len, CRGB & s, EDitherMode dither = BINARY_DITHER) : mData((const uint8_t*)d), mLen(len), mLenRemaining(len), mScale(s) {
            enable_dithering(dither);
            mAdvance = 3;
     676:	83 e0       	ldi	r24, 0x03	; 3
     678:	88 8b       	std	Y+16, r24	; 0x10
initOffsets():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:290
        /// Initialize the PixelController::mOffsets array based on the length of the strip
        /// @param len the number of LEDs in one lane of the strip
        void initOffsets(int len) {
          int nOffset = 0;
          for(int i = 0; i < LANES; ++i) {
            mOffsets[i] = nOffset;
     67a:	1a 8a       	std	Y+18, r1	; 0x12
     67c:	19 8a       	std	Y+17, r1	; 0x11
_ZN19CPixelLEDControllerIL6EOrder66ELi1ELm4294967295EE4showEPK4CRGBiS2_():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:637
    /// @param data the RGB data to write out to the strip
    /// @param nLeds the number of LEDs being written out
    /// @param scale the RGB scaling to apply to each LED before writing it out
    virtual void show(const struct CRGB *data, int nLeds, CRGB scale) {
        PixelController<RGB_ORDER, LANES, MASK> pixels(data, nLeds < 0 ? -nLeds : nLeds, scale, getDither());
        if(nLeds < 0) {
     67e:	f7 fe       	sbrs	r15, 7
     680:	02 c0       	rjmp	.+4      	; 0x686 <CPixelLEDController<(EOrder)66, 1, 4294967295ul>::show(CRGB const*, int, CRGB)+0x6e>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:639
            // nLeds < 0 implies that we want to show them in reverse
            pixels.mAdvance = -pixels.mAdvance;
     682:	8d ef       	ldi	r24, 0xFD	; 253
     684:	88 8b       	std	Y+16, r24	; 0x10
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:641
        }
        showPixels(pixels);
     686:	d6 01       	movw	r26, r12
     688:	ed 91       	ld	r30, X+
     68a:	fc 91       	ld	r31, X
     68c:	06 84       	ldd	r0, Z+14	; 0x0e
     68e:	f7 85       	ldd	r31, Z+15	; 0x0f
     690:	e0 2d       	mov	r30, r0
     692:	be 01       	movw	r22, r28
     694:	6f 5f       	subi	r22, 0xFF	; 255
     696:	7f 4f       	sbci	r23, 0xFF	; 255
     698:	c6 01       	movw	r24, r12
     69a:	09 95       	icall
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:642
    }
     69c:	62 96       	adiw	r28, 0x12	; 18
     69e:	0f b6       	in	r0, 0x3f	; 63
     6a0:	f8 94       	cli
     6a2:	de bf       	out	0x3e, r29	; 62
     6a4:	0f be       	out	0x3f, r0	; 63
     6a6:	cd bf       	out	0x3d, r28	; 61
     6a8:	df 91       	pop	r29
     6aa:	cf 91       	pop	r28
     6ac:	1f 91       	pop	r17
     6ae:	0f 91       	pop	r16
     6b0:	ff 90       	pop	r15
     6b2:	ef 90       	pop	r14
     6b4:	df 90       	pop	r13
     6b6:	cf 90       	pop	r12
     6b8:	8f 90       	pop	r8
     6ba:	7f 90       	pop	r7
     6bc:	6f 90       	pop	r6
     6be:	08 95       	ret
enable_dithering():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:440
        /// data.
        /// @param dither the dither setting
        void enable_dithering(EDitherMode dither) {
            switch(dither) {
                case BINARY_DITHER: init_binary_dithering(); break;
                default: d[0]=d[1]=d[2]=e[0]=e[1]=e[2]=0; break;
     6c0:	1c 86       	std	Y+12, r1	; 0x0c
     6c2:	1b 86       	std	Y+11, r1	; 0x0b
     6c4:	1a 86       	std	Y+10, r1	; 0x0a
     6c6:	19 86       	std	Y+9, r1	; 0x09
     6c8:	18 86       	std	Y+8, r1	; 0x08
     6ca:	1f 82       	std	Y+7, r1	; 0x07
     6cc:	d4 cf       	rjmp	.-88     	; 0x676 <CPixelLEDController<(EOrder)66, 1, 4294967295ul>::show(CRGB const*, int, CRGB)+0x5e>

000006ce <CPixelLEDController<(EOrder)66, 1, 4294967295ul>::showColor(CRGB const&, int, CRGB)>:
_ZN19CPixelLEDControllerIL6EOrder66ELi1ELm4294967295EE9showColorERK4CRGBiS2_():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:626

    /// Set all the LEDs on the controller to a given color
    /// @param data the CRGB color to set the LEDs to
    /// @param nLeds the number of LEDs to set to this color
    /// @param scale the RGB scaling value for outputting color
    virtual void showColor(const struct CRGB & data, int nLeds, CRGB scale) {
     6ce:	ef 92       	push	r14
     6d0:	ff 92       	push	r15
     6d2:	0f 93       	push	r16
     6d4:	1f 93       	push	r17
     6d6:	cf 93       	push	r28
     6d8:	df 93       	push	r29
     6da:	cd b7       	in	r28, 0x3d	; 61
     6dc:	de b7       	in	r29, 0x3e	; 62
     6de:	62 97       	sbiw	r28, 0x12	; 18
     6e0:	0f b6       	in	r0, 0x3f	; 63
     6e2:	f8 94       	cli
     6e4:	de bf       	out	0x3e, r29	; 62
     6e6:	0f be       	out	0x3f, r0	; 63
     6e8:	cd bf       	out	0x3d, r28	; 61
     6ea:	7c 01       	movw	r14, r24
     6ec:	dc 01       	movw	r26, r24
     6ee:	1c 96       	adiw	r26, 0x0c	; 12
     6f0:	8c 91       	ld	r24, X
__base_ctor ():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:325
        /// Constructor
        /// @param d pointer to LED data
        /// @param len length of the LED data
        /// @param s LED scale values, as CRGB struct
        /// @param dither dither setting for the LEDs
        PixelController(const CRGB &d, int len, CRGB & s, EDitherMode dither = BINARY_DITHER) : mData((const uint8_t*)&d), mLen(len), mLenRemaining(len), mScale(s) {
     6f2:	7a 83       	std	Y+2, r23	; 0x02
     6f4:	69 83       	std	Y+1, r22	; 0x01
     6f6:	5c 83       	std	Y+4, r21	; 0x04
     6f8:	4b 83       	std	Y+3, r20	; 0x03
     6fa:	5e 83       	std	Y+6, r21	; 0x06
     6fc:	4d 83       	std	Y+5, r20	; 0x05
     6fe:	0d 87       	std	Y+13, r16	; 0x0d
     700:	1e 87       	std	Y+14, r17	; 0x0e
     702:	2f 87       	std	Y+15, r18	; 0x0f
enable_dithering():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:438
        /// If dithering is set to enabled, this will re-init the dithering values
        /// (init_binary_dithering()). Otherwise it will clear the stored dithering
        /// data.
        /// @param dither the dither setting
        void enable_dithering(EDitherMode dither) {
            switch(dither) {
     704:	81 30       	cpi	r24, 0x01	; 1
     706:	f1 f4       	brne	.+60     	; 0x744 <CPixelLEDController<(EOrder)66, 1, 4294967295ul>::showColor(CRGB const&, int, CRGB)+0x76>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:439
                case BINARY_DITHER: init_binary_dithering(); break;
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	6c dd       	rcall	.-1320   	; 0x1e6 <PixelController<(EOrder)66, 1, 4294967295ul>::init_binary_dithering()>
__base_ctor ():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:327
        /// @param len length of the LED data
        /// @param s LED scale values, as CRGB struct
        /// @param dither dither setting for the LEDs
        PixelController(const CRGB &d, int len, CRGB & s, EDitherMode dither = BINARY_DITHER) : mData((const uint8_t*)&d), mLen(len), mLenRemaining(len), mScale(s) {
            enable_dithering(dither);
            mAdvance = 0;
     70e:	18 8a       	std	Y+16, r1	; 0x10
initOffsets():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:290
        /// Initialize the PixelController::mOffsets array based on the length of the strip
        /// @param len the number of LEDs in one lane of the strip
        void initOffsets(int len) {
          int nOffset = 0;
          for(int i = 0; i < LANES; ++i) {
            mOffsets[i] = nOffset;
     710:	1a 8a       	std	Y+18, r1	; 0x12
     712:	19 8a       	std	Y+17, r1	; 0x11
_ZN19CPixelLEDControllerIL6EOrder66ELi1ELm4294967295EE9showColorERK4CRGBiS2_():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:628
    /// @param data the CRGB color to set the LEDs to
    /// @param nLeds the number of LEDs to set to this color
    /// @param scale the RGB scaling value for outputting color
    virtual void showColor(const struct CRGB & data, int nLeds, CRGB scale) {
        PixelController<RGB_ORDER, LANES, MASK> pixels(data, nLeds, scale, getDither());
        showPixels(pixels);
     714:	d7 01       	movw	r26, r14
     716:	ed 91       	ld	r30, X+
     718:	fc 91       	ld	r31, X
     71a:	06 84       	ldd	r0, Z+14	; 0x0e
     71c:	f7 85       	ldd	r31, Z+15	; 0x0f
     71e:	e0 2d       	mov	r30, r0
     720:	be 01       	movw	r22, r28
     722:	6f 5f       	subi	r22, 0xFF	; 255
     724:	7f 4f       	sbci	r23, 0xFF	; 255
     726:	c7 01       	movw	r24, r14
     728:	09 95       	icall
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:629
    }
     72a:	62 96       	adiw	r28, 0x12	; 18
     72c:	0f b6       	in	r0, 0x3f	; 63
     72e:	f8 94       	cli
     730:	de bf       	out	0x3e, r29	; 62
     732:	0f be       	out	0x3f, r0	; 63
     734:	cd bf       	out	0x3d, r28	; 61
     736:	df 91       	pop	r29
     738:	cf 91       	pop	r28
     73a:	1f 91       	pop	r17
     73c:	0f 91       	pop	r16
     73e:	ff 90       	pop	r15
     740:	ef 90       	pop	r14
     742:	08 95       	ret
enable_dithering():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:440
        /// data.
        /// @param dither the dither setting
        void enable_dithering(EDitherMode dither) {
            switch(dither) {
                case BINARY_DITHER: init_binary_dithering(); break;
                default: d[0]=d[1]=d[2]=e[0]=e[1]=e[2]=0; break;
     744:	1c 86       	std	Y+12, r1	; 0x0c
     746:	1b 86       	std	Y+11, r1	; 0x0b
     748:	1a 86       	std	Y+10, r1	; 0x0a
     74a:	19 86       	std	Y+9, r1	; 0x09
     74c:	18 86       	std	Y+8, r1	; 0x08
     74e:	1f 82       	std	Y+7, r1	; 0x07
     750:	de cf       	rjmp	.-68     	; 0x70e <CPixelLEDController<(EOrder)66, 1, 4294967295ul>::showColor(CRGB const&, int, CRGB)+0x40>

00000752 <RampInit()>:
_Z8RampInitv():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:474
	}
}

void RampInit()	{
	uint8_t i;
	for(Vect[0] = 0, i=1; i < NUM_LEDS; i++)	{ Vect[i] = Vect[i-1]+255/NUM_LEDS;};
     752:	10 92 d8 00 	sts	0x00D8, r1	; 0x8000d8 <Vect>
     756:	e8 ed       	ldi	r30, 0xD8	; 216
     758:	f0 e0       	ldi	r31, 0x00	; 0
     75a:	81 91       	ld	r24, Z+
     75c:	87 5f       	subi	r24, 0xF7	; 247
     75e:	80 83       	st	Z, r24
     760:	80 e0       	ldi	r24, 0x00	; 0
     762:	e3 3f       	cpi	r30, 0xF3	; 243
     764:	f8 07       	cpc	r31, r24
     766:	c9 f7       	brne	.-14     	; 0x75a <RampInit()+0x8>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:475
}
     768:	08 95       	ret

0000076a <ColorLeds(CRGB)>:
_Z9ColorLeds4CRGB():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:465
		else if	(ColorSwitch == BlueDD)		{TempColor = CRGB(0, 0, Vect[TempIndex]);}
		leds[iLed] = TempColor;
	}
}

void ColorLeds(CRGB color)	{
     76a:	e4 ef       	ldi	r30, 0xF4	; 244
     76c:	f0 e0       	ldi	r31, 0x00	; 0
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:468
	uint8_t iLed;
	for (iLed=0; iLed<NUM_LEDS; iLed++) {
		leds[iLed] = color; 
     76e:	61 93       	st	Z+, r22
     770:	71 93       	st	Z+, r23
     772:	81 93       	st	Z+, r24
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:467
	}
}

void ColorLeds(CRGB color)	{
	uint8_t iLed;
	for (iLed=0; iLed<NUM_LEDS; iLed++) {
     774:	91 e0       	ldi	r25, 0x01	; 1
     776:	e8 34       	cpi	r30, 0x48	; 72
     778:	f9 07       	cpc	r31, r25
     77a:	c9 f7       	brne	.-14     	; 0x76e <ColorLeds(CRGB)+0x4>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:470
		leds[iLed] = color; 
	}
}
     77c:	08 95       	ret

0000077e <ShiftLed(unsigned char)>:
_Z8ShiftLedh():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:454
void ShiftLed(uint8_t ColorSwitch)	{
	uint8_t iLed;
	CRGB TempColor;
	uint8_t TempIndex;
	for (iLed=0; iLed<NUM_LEDS; iLed++) {
		TempIndex = iLed + iFrame;
     77e:	50 91 5c 01 	lds	r21, 0x015C	; 0x80015c <iFrame>
     782:	a4 ef       	ldi	r26, 0xF4	; 244
     784:	b0 e0       	ldi	r27, 0x00	; 0
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:453

void ShiftLed(uint8_t ColorSwitch)	{
	uint8_t iLed;
	CRGB TempColor;
	uint8_t TempIndex;
	for (iLed=0; iLed<NUM_LEDS; iLed++) {
     786:	20 e0       	ldi	r18, 0x00	; 0
     788:	e5 2f       	mov	r30, r21
     78a:	e2 0f       	add	r30, r18
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:455
		TempIndex = iLed + iFrame;
		while(TempIndex >= NUM_LEDS)	{ 
     78c:	ec 31       	cpi	r30, 0x1C	; 28
     78e:	10 f0       	brcs	.+4      	; 0x794 <ShiftLed(unsigned char)+0x16>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:456
			TempIndex = TempIndex - NUM_LEDS;
     790:	ec 51       	subi	r30, 0x1C	; 28
     792:	fc cf       	rjmp	.-8      	; 0x78c <ShiftLed(unsigned char)+0xe>
     794:	f0 e0       	ldi	r31, 0x00	; 0
     796:	e8 52       	subi	r30, 0x28	; 40
     798:	ff 4f       	sbci	r31, 0xFF	; 255
     79a:	90 81       	ld	r25, Z
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:458
		}
		if		(ColorSwitch == RedDD)		{TempColor = CRGB(Vect[TempIndex], 0, 0);}
     79c:	30 e0       	ldi	r19, 0x00	; 0
     79e:	40 e0       	ldi	r20, 0x00	; 0
     7a0:	88 23       	and	r24, r24
     7a2:	39 f0       	breq	.+14     	; 0x7b2 <ShiftLed(unsigned char)+0x34>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:460
		else if	(ColorSwitch == GreenDD)	{TempColor = CRGB(0, Vect[TempIndex], 0);}
		else if	(ColorSwitch == BlueDD)		{TempColor = CRGB(0, 0, Vect[TempIndex]);}
     7a4:	39 2f       	mov	r19, r25
     7a6:	40 e0       	ldi	r20, 0x00	; 0
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:459
		TempIndex = iLed + iFrame;
		while(TempIndex >= NUM_LEDS)	{ 
			TempIndex = TempIndex - NUM_LEDS;
		}
		if		(ColorSwitch == RedDD)		{TempColor = CRGB(Vect[TempIndex], 0, 0);}
		else if	(ColorSwitch == GreenDD)	{TempColor = CRGB(0, Vect[TempIndex], 0);}
     7a8:	81 30       	cpi	r24, 0x01	; 1
     7aa:	11 f4       	brne	.+4      	; 0x7b0 <ShiftLed(unsigned char)+0x32>
     7ac:	49 2f       	mov	r20, r25
     7ae:	30 e0       	ldi	r19, 0x00	; 0
     7b0:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:461
		else if	(ColorSwitch == BlueDD)		{TempColor = CRGB(0, 0, Vect[TempIndex]);}
		leds[iLed] = TempColor;
     7b2:	9c 93       	st	X, r25
     7b4:	11 96       	adiw	r26, 0x01	; 1
     7b6:	4c 93       	st	X, r20
     7b8:	11 97       	sbiw	r26, 0x01	; 1
     7ba:	12 96       	adiw	r26, 0x02	; 2
     7bc:	3c 93       	st	X, r19
     7be:	12 97       	sbiw	r26, 0x02	; 2
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:453

void ShiftLed(uint8_t ColorSwitch)	{
	uint8_t iLed;
	CRGB TempColor;
	uint8_t TempIndex;
	for (iLed=0; iLed<NUM_LEDS; iLed++) {
     7c0:	2f 5f       	subi	r18, 0xFF	; 255
     7c2:	13 96       	adiw	r26, 0x03	; 3
     7c4:	2c 31       	cpi	r18, 0x1C	; 28
     7c6:	01 f7       	brne	.-64     	; 0x788 <ShiftLed(unsigned char)+0xa>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:463
		if		(ColorSwitch == RedDD)		{TempColor = CRGB(Vect[TempIndex], 0, 0);}
		else if	(ColorSwitch == GreenDD)	{TempColor = CRGB(0, Vect[TempIndex], 0);}
		else if	(ColorSwitch == BlueDD)		{TempColor = CRGB(0, 0, Vect[TempIndex]);}
		leds[iLed] = TempColor;
	}
}
     7c8:	08 95       	ret

000007ca <CLEDController::getMaxRefreshRate() const>:
_ZNK14CLEDController17getMaxRefreshRateEv():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:249
      #endif
    }

    /// Gets the maximum possible refresh rate of the strip
    /// @returns the maximum refresh rate, in frames per second (FPS)
    virtual uint16_t getMaxRefreshRate() const { return 0; }
     7ca:	90 e0       	ldi	r25, 0x00	; 0
     7cc:	80 e0       	ldi	r24, 0x00	; 0
     7ce:	08 95       	ret

000007d0 <CLEDController::size()>:
_ZN14CLEDController4sizeEv():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:165
        }
    }

    /// How many LEDs does this controller manage?
    /// @returns CLEDController::m_nLeds
    virtual int size() { return m_nLeds; }
     7d0:	fc 01       	movw	r30, r24
     7d2:	85 85       	ldd	r24, Z+13	; 0x0d
     7d4:	96 85       	ldd	r25, Z+14	; 0x0e
     7d6:	08 95       	ret

000007d8 <CLEDController::clearLeds(int)>:
_ZN14CLEDController9clearLedsEi():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:99
    /// Initialize the LED controller
    virtual void init() = 0;

    /// Clear out/zero out the given number of LEDs.
    /// @param nLeds the number of LEDs to clear
    virtual void clearLeds(int nLeds) { showColor(CRGB::Black, nLeds, CRGB::Black); }
     7d8:	0f 93       	push	r16
     7da:	1f 93       	push	r17
     7dc:	cf 93       	push	r28
     7de:	df 93       	push	r29
     7e0:	00 d0       	rcall	.+0      	; 0x7e2 <CLEDController::clearLeds(int)+0xa>
     7e2:	1f 92       	push	r1
     7e4:	cd b7       	in	r28, 0x3d	; 61
     7e6:	de b7       	in	r29, 0x3e	; 62
     7e8:	ab 01       	movw	r20, r22
_ZN4CRGBC2Em():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:176
    }

    /// Allow construction from 32-bit (really 24-bit) bit 0xRRGGBB color code
    /// @param colorcode a packed 24 bit color code
    inline CRGB( uint32_t colorcode)  __attribute__((always_inline))
    : r((colorcode >> 16) & 0xFF), g((colorcode >> 8) & 0xFF), b((colorcode >> 0) & 0xFF)
     7ea:	19 82       	std	Y+1, r1	; 0x01
     7ec:	1a 82       	std	Y+2, r1	; 0x02
     7ee:	1b 82       	std	Y+3, r1	; 0x03
showColor():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:120
    /// @param data the CRGB color to set the LEDs to
    /// @param nLeds the number of LEDs in the data array
    /// @param brightness the brightness of the LEDs
    /// @see showColor(const struct CRGB&, int, CRGB)
    void showColor(const struct CRGB &data, int nLeds, uint8_t brightness) {
        showColor(data, nLeds, getAdjustment(brightness));
     7f0:	dc 01       	movw	r26, r24
     7f2:	ed 91       	ld	r30, X+
     7f4:	fc 91       	ld	r31, X
     7f6:	01 90       	ld	r0, Z+
     7f8:	f0 81       	ld	r31, Z
     7fa:	e0 2d       	mov	r30, r0
     7fc:	00 e0       	ldi	r16, 0x00	; 0
     7fe:	10 e0       	ldi	r17, 0x00	; 0
     800:	20 e0       	ldi	r18, 0x00	; 0
     802:	be 01       	movw	r22, r28
     804:	6f 5f       	subi	r22, 0xFF	; 255
     806:	7f 4f       	sbci	r23, 0xFF	; 255
     808:	09 95       	icall
_ZN14CLEDController9clearLedsEi():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:99
    /// Initialize the LED controller
    virtual void init() = 0;

    /// Clear out/zero out the given number of LEDs.
    /// @param nLeds the number of LEDs to clear
    virtual void clearLeds(int nLeds) { showColor(CRGB::Black, nLeds, CRGB::Black); }
     80a:	0f 90       	pop	r0
     80c:	0f 90       	pop	r0
     80e:	0f 90       	pop	r0
     810:	df 91       	pop	r29
     812:	cf 91       	pop	r28
     814:	1f 91       	pop	r17
     816:	0f 91       	pop	r16
     818:	08 95       	ret

0000081a <__cxa_pure_virtual>:
__cxa_pure_virtual():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/abi.cpp:26
extern "C" void __cxa_pure_virtual(void) __attribute__ ((__noreturn__));
extern "C" void __cxa_deleted_virtual(void) __attribute__ ((__noreturn__));

namespace std {
  [[gnu::weak, noreturn]] void terminate() {
    abort();
     81a:	48 d9       	rcall	.-3440   	; 0xfffffaac <__eeprom_end+0xff7efaac>

0000081c <__vector_9>:
__vector_9():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:159
#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)
ISR(TIM0_OVF_vect)
#else
ISR(TIMER0_OVF_vect)
#endif
{
     81c:	1f 92       	push	r1
     81e:	0f 92       	push	r0
     820:	0f b6       	in	r0, 0x3f	; 63
     822:	0f 92       	push	r0
     824:	11 24       	eor	r1, r1
     826:	2f 93       	push	r18
     828:	3f 93       	push	r19
     82a:	8f 93       	push	r24
     82c:	9f 93       	push	r25
     82e:	af 93       	push	r26
     830:	bf 93       	push	r27
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:167
  static unsigned char timer0_exact = 0;
#endif

  // copy these to local variables so they can be stored in registers
  // (volatile variables must be read from memory on every access, so this saves time)
  unsigned long m = timer0_millis;
     832:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <timer0_millis>
     836:	90 91 c9 00 	lds	r25, 0x00C9	; 0x8000c9 <timer0_millis+0x1>
     83a:	a0 91 ca 00 	lds	r26, 0x00CA	; 0x8000ca <timer0_millis+0x2>
     83e:	b0 91 cb 00 	lds	r27, 0x00CB	; 0x8000cb <timer0_millis+0x3>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:168
  unsigned char f = timer0_fract;
     842:	30 91 a8 00 	lds	r19, 0x00A8	; 0x8000a8 <timer0_fract>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:170

  f += FRACT_INC FRACT_INC_PLUS;
     846:	26 e0       	ldi	r18, 0x06	; 6
     848:	23 0f       	add	r18, r19
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:200
    ++f;
  }
#endif
#endif // CORRECT_EXACT_MILLIS

  if (f >= FRACT_MAX) {
     84a:	2d 37       	cpi	r18, 0x7D	; 125
     84c:	68 f1       	brcs	.+90     	; 0x8a8 <__vector_9+0x8c>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:201
    f -= FRACT_MAX;
     84e:	29 e8       	ldi	r18, 0x89	; 137
     850:	23 0f       	add	r18, r19
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:202
    m += MILLIS_INC + 1;
     852:	03 96       	adiw	r24, 0x03	; 3
     854:	a1 1d       	adc	r26, r1
     856:	b1 1d       	adc	r27, r1
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:208
  }
  else {
    m += MILLIS_INC;
  }

  timer0_fract = f;
     858:	20 93 a8 00 	sts	0x00A8, r18	; 0x8000a8 <timer0_fract>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:209
  timer0_millis = m;
     85c:	80 93 c8 00 	sts	0x00C8, r24	; 0x8000c8 <timer0_millis>
     860:	90 93 c9 00 	sts	0x00C9, r25	; 0x8000c9 <timer0_millis+0x1>
     864:	a0 93 ca 00 	sts	0x00CA, r26	; 0x8000ca <timer0_millis+0x2>
     868:	b0 93 cb 00 	sts	0x00CB, r27	; 0x8000cb <timer0_millis+0x3>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:211
#ifndef CORRECT_EXACT_MICROS
  timer0_overflow_count++;
     86c:	80 91 a9 00 	lds	r24, 0x00A9	; 0x8000a9 <timer0_overflow_count>
     870:	90 91 aa 00 	lds	r25, 0x00AA	; 0x8000aa <timer0_overflow_count+0x1>
     874:	a0 91 ab 00 	lds	r26, 0x00AB	; 0x8000ab <timer0_overflow_count+0x2>
     878:	b0 91 ac 00 	lds	r27, 0x00AC	; 0x8000ac <timer0_overflow_count+0x3>
     87c:	01 96       	adiw	r24, 0x01	; 1
     87e:	a1 1d       	adc	r26, r1
     880:	b1 1d       	adc	r27, r1
     882:	80 93 a9 00 	sts	0x00A9, r24	; 0x8000a9 <timer0_overflow_count>
     886:	90 93 aa 00 	sts	0x00AA, r25	; 0x8000aa <timer0_overflow_count+0x1>
     88a:	a0 93 ab 00 	sts	0x00AB, r26	; 0x8000ab <timer0_overflow_count+0x2>
     88e:	b0 93 ac 00 	sts	0x00AC, r27	; 0x8000ac <timer0_overflow_count+0x3>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:213
#endif
}
     892:	bf 91       	pop	r27
     894:	af 91       	pop	r26
     896:	9f 91       	pop	r25
     898:	8f 91       	pop	r24
     89a:	3f 91       	pop	r19
     89c:	2f 91       	pop	r18
     89e:	0f 90       	pop	r0
     8a0:	0f be       	out	0x3f, r0	; 63
     8a2:	0f 90       	pop	r0
     8a4:	1f 90       	pop	r1
     8a6:	18 95       	reti
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:205
  if (f >= FRACT_MAX) {
    f -= FRACT_MAX;
    m += MILLIS_INC + 1;
  }
  else {
    m += MILLIS_INC;
     8a8:	02 96       	adiw	r24, 0x02	; 2
     8aa:	a1 1d       	adc	r26, r1
     8ac:	b1 1d       	adc	r27, r1
     8ae:	d4 cf       	rjmp	.-88     	; 0x858 <__vector_9+0x3c>

000008b0 <main>:
main():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/main.cpp:34

//void setupUSB() __attribute__((weak));
//void setupUSB() { }

int main(void)
{
     8b0:	cf 93       	push	r28
     8b2:	df 93       	push	r29
     8b4:	cd b7       	in	r28, 0x3d	; 61
     8b6:	de b7       	in	r29, 0x3e	; 62
     8b8:	2a 97       	sbiw	r28, 0x0a	; 10
     8ba:	0f b6       	in	r0, 0x3f	; 63
     8bc:	f8 94       	cli
     8be:	de bf       	out	0x3e, r29	; 62
     8c0:	0f be       	out	0x3f, r0	; 63
     8c2:	cd bf       	out	0x3d, r28	; 61
init():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:945

void init()
{
  // this needs to be called before setup() or some functions won't
  // work there
  sei();
     8c4:	78 94       	sei
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:966
#if defined(__AVR_ATmega64__) || defined(__AVR_ATmega128__)
  // CPU specific: different values for the ATmega64/128
  TCCR0 |= _BV(WGM01) | _BV(WGM00) | _BV(CS02);
#elif defined(TCCR0) && defined(CS01) && defined(CS00)
  // This combination is for the ATmega8535, ATmega8, ATmega16, ATmega32, ATmega8515, ATmega162
  TCCR0 |= _BV(CS01) | _BV(CS00);
     8c6:	83 b7       	in	r24, 0x33	; 51
     8c8:	83 60       	ori	r24, 0x03	; 3
     8ca:	83 bf       	out	0x33, r24	; 51
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:982
  #error Timer 0 prescale factor 64 not set correctly
#endif

// Enable timer 0 overflow interrupt
#if defined(TIMSK) && defined(TOIE0)
  TIMSK |= _BV(TOIE0);
     8cc:	89 b7       	in	r24, 0x39	; 57
     8ce:	81 60       	ori	r24, 0x01	; 1
     8d0:	89 bf       	out	0x39, r24	; 57
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:995
// this is better for motors as it ensures an even waveform
// note, however, that fast pwm mode can achieve a frequency of up
// 8 MHz (with a 16 MHz clock) at 50% duty cycle

#if defined(TCCR1B) && defined(CS11) && defined(CS10)
  TCCR1B = _BV(CS11); // Set timer 1 prescale factor to 64
     8d2:	82 e0       	ldi	r24, 0x02	; 2
     8d4:	8e bd       	out	0x2e, r24	; 46
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:997
#if F_CPU >= 8000000L
  TCCR1B |= _BV(CS10);
     8d6:	8e b5       	in	r24, 0x2e	; 46
     8d8:	81 60       	ori	r24, 0x01	; 1
     8da:	8e bd       	out	0x2e, r24	; 46
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:1006
#if F_CPU >= 8000000L
  TCCR1 |= _BV(CS10);
#endif
#endif
#if defined(TCCR1A) && defined(WGM10)
  TCCR1A |= _BV(WGM10); // Put timer 1 in 8-bit phase correct pwm mode
     8dc:	8f b5       	in	r24, 0x2f	; 47
     8de:	81 60       	ori	r24, 0x01	; 1
     8e0:	8f bd       	out	0x2f, r24	; 47
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:1011
#endif

// Set timer 2 prescale factor to 64
#if defined(TCCR2) && defined(CS22)
  TCCR2 |= _BV(CS22);
     8e2:	85 b5       	in	r24, 0x25	; 37
     8e4:	84 60       	ori	r24, 0x04	; 4
     8e6:	85 bd       	out	0x25, r24	; 37
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:1020
  TCCR2A |= _BV(CS22);
#endif

// Configure timer 2 for phase correct pwm (8-bit)
#if defined(TCCR2) && defined(WGM20)
  TCCR2 |= _BV(WGM20);
     8e8:	85 b5       	in	r24, 0x25	; 37
     8ea:	80 64       	ori	r24, 0x40	; 64
     8ec:	85 bd       	out	0x25, r24	; 37
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:1052
#if defined(ADCSRA)
  // set a2d prescaler so we are inside the desired 50-200 KHz range.
  #if F_CPU >= 16000000 // 16 MHz / 128 = 125 KHz
    ADCSRA = _BV(ADPS2) | _BV(ADPS1) | _BV(ADPS0) | _BV(ADEN);
  #elif F_CPU >= 8000000 // 8 MHz / 64 = 125 KHz
    ADCSRA = _BV(ADPS2) | _BV(ADPS1) | _BV(ADEN);
     8ee:	86 e8       	ldi	r24, 0x86	; 134
     8f0:	86 b9       	out	0x06, r24	; 6
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:1068

  // The bootloader connects pins 0 and 1 to the USART; disconnect them
  // here so they can be used as normal digital i/o; they will be
  // reconnected in Serial.begin()
#if defined(UCSRB)
  UCSRB = 0;
     8f2:	1a b8       	out	0x0a, r1	; 10
pinMode():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:31
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
  uint8_t bit = digitalPinToBitMask(pin);
     8f4:	e9 e6       	ldi	r30, 0x69	; 105
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	24 91       	lpm	r18, Z
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:32
  uint8_t port = digitalPinToPort(pin);
     8fa:	e2 e5       	ldi	r30, 0x52	; 82
     8fc:	f0 e0       	ldi	r31, 0x00	; 0
     8fe:	84 91       	lpm	r24, Z
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:35
  volatile uint8_t *reg, *out;

  if (port == NOT_A_PIN) return;
     900:	88 23       	and	r24, r24
     902:	c9 f0       	breq	.+50     	; 0x936 <main+0x86>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:38

  // JWS: can I let the optimizer do this?
  reg = portModeRegister(port);
     904:	90 e0       	ldi	r25, 0x00	; 0
     906:	88 0f       	add	r24, r24
     908:	99 1f       	adc	r25, r25
     90a:	fc 01       	movw	r30, r24
     90c:	e0 5d       	subi	r30, 0xD0	; 208
     90e:	ff 4f       	sbci	r31, 0xFF	; 255
     910:	45 91       	lpm	r20, Z+
     912:	54 91       	lpm	r21, Z
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:39
  out = portOutputRegister(port);
     914:	fc 01       	movw	r30, r24
     916:	ea 5d       	subi	r30, 0xDA	; 218
     918:	ff 4f       	sbci	r31, 0xFF	; 255
     91a:	a5 91       	lpm	r26, Z+
     91c:	b4 91       	lpm	r27, Z
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:48
    cli();
    *reg &= ~bit;
    *out &= ~bit;
    SREG = oldSREG;
  } else if (mode == INPUT_PULLUP) {
    uint8_t oldSREG = SREG;
     91e:	9f b7       	in	r25, 0x3f	; 63
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:49
    cli();
     920:	f8 94       	cli
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:50
    *reg &= ~bit;
     922:	fa 01       	movw	r30, r20
     924:	30 81       	ld	r19, Z
     926:	82 2f       	mov	r24, r18
     928:	80 95       	com	r24
     92a:	83 23       	and	r24, r19
     92c:	80 83       	st	Z, r24
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:51
    *out |= bit;
     92e:	ec 91       	ld	r30, X
     930:	e2 2b       	or	r30, r18
     932:	ec 93       	st	X, r30
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:52
    SREG = oldSREG;
     934:	9f bf       	out	0x3f, r25	; 63
addLeds():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.h:352
	/// @{

	/// Add a clockless based CLEDController instance to the world.
	template<template<uint8_t DATA_PIN, EOrder RGB_ORDER> class CHIPSET, uint8_t DATA_PIN, EOrder RGB_ORDER>
	static CLEDController &addLeds(struct CRGB *data, int nLedsOrOffset, int nLedsIfOffset = 0) {
		static CHIPSET<DATA_PIN, RGB_ORDER> c;
     936:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <guard variable for CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c>
     93a:	81 11       	cpse	r24, r1
     93c:	45 c0       	rjmp	.+138    	; 0x9c8 <main+0x118>
__base_ctor ():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:87
    /// @param scale the rgb scaling to apply to each led before writing it out
    virtual void show(const struct CRGB *data, int nLeds, CRGB scale) = 0;

public:
    /// Create an led controller object, add it to the chain of controllers
    CLEDController() : m_Data(NULL), m_ColorCorrection(UncorrectedColor), m_ColorTemperature(UncorrectedTemperature), m_DitherMode(BINARY_DITHER), m_nLeds(0) {
     93e:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0x3>
     942:	10 92 b1 00 	sts	0x00B1, r1	; 0x8000b1 <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0x2>
_ZN4CRGBC2E18LEDColorCorrection():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:183
    }

    /// Allow construction from a LEDColorCorrection enum
    /// @param colorcode an LEDColorCorrect enumeration value
    inline CRGB( LEDColorCorrection colorcode) __attribute__((always_inline))
    : r((colorcode >> 16) & 0xFF), g((colorcode >> 8) & 0xFF), b((colorcode >> 0) & 0xFF)
     946:	8f ef       	ldi	r24, 0xFF	; 255
     948:	80 93 b5 00 	sts	0x00B5, r24	; 0x8000b5 <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0x6>
     94c:	80 93 b6 00 	sts	0x00B6, r24	; 0x8000b6 <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0x7>
     950:	80 93 b7 00 	sts	0x00B7, r24	; 0x8000b7 <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0x8>
_ZN4CRGBC2E16ColorTemperature():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:191
    }

    /// Allow construction from a ColorTemperature enum
    /// @param colorcode an ColorTemperature enumeration value
    inline CRGB( ColorTemperature colorcode) __attribute__((always_inline))
    : r((colorcode >> 16) & 0xFF), g((colorcode >> 8) & 0xFF), b((colorcode >> 0) & 0xFF)
     954:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0x9>
     958:	80 93 b9 00 	sts	0x00B9, r24	; 0x8000b9 <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0xa>
     95c:	80 93 ba 00 	sts	0x00BA, r24	; 0x8000ba <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0xb>
__base_ctor ():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:87
     960:	81 e0       	ldi	r24, 0x01	; 1
     962:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0xc>
     966:	10 92 bd 00 	sts	0x00BD, r1	; 0x8000bd <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0xe>
     96a:	10 92 bc 00 	sts	0x00BC, r1	; 0x8000bc <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0xd>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:88
        m_pNext = NULL;
     96e:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0x5>
     972:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0x4>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:89
        if(m_pHead==NULL) { m_pHead = this; }
     976:	80 91 d2 00 	lds	r24, 0x00D2	; 0x8000d2 <CLEDController::m_pHead>
     97a:	90 91 d3 00 	lds	r25, 0x00D3	; 0x8000d3 <CLEDController::m_pHead+0x1>
     97e:	89 2b       	or	r24, r25
     980:	31 f4       	brne	.+12     	; 0x98e <main+0xde>
     982:	8f ea       	ldi	r24, 0xAF	; 175
     984:	90 e0       	ldi	r25, 0x00	; 0
     986:	90 93 d3 00 	sts	0x00D3, r25	; 0x8000d3 <CLEDController::m_pHead+0x1>
     98a:	80 93 d2 00 	sts	0x00D2, r24	; 0x8000d2 <CLEDController::m_pHead>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:90
        if(m_pTail != NULL) { m_pTail->m_pNext = this; }
     98e:	e0 91 ad 00 	lds	r30, 0x00AD	; 0x8000ad <CLEDController::m_pTail>
     992:	f0 91 ae 00 	lds	r31, 0x00AE	; 0x8000ae <CLEDController::m_pTail+0x1>
     996:	30 97       	sbiw	r30, 0x00	; 0
     998:	21 f0       	breq	.+8      	; 0x9a2 <main+0xf2>
     99a:	8f ea       	ldi	r24, 0xAF	; 175
     99c:	90 e0       	ldi	r25, 0x00	; 0
     99e:	95 83       	std	Z+5, r25	; 0x05
     9a0:	84 83       	std	Z+4, r24	; 0x04
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:91
        m_pTail = this;
     9a2:	8f ea       	ldi	r24, 0xAF	; 175
     9a4:	90 e0       	ldi	r25, 0x00	; 0
     9a6:	90 93 ae 00 	sts	0x00AE, r25	; 0x8000ae <CLEDController::m_pTail+0x1>
     9aa:	80 93 ad 00 	sts	0x00AD, r24	; 0x8000ad <CLEDController::m_pTail>
_ZN8CMinWaitILi10EEC2Ev():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/fastled_delay.h:22
	/// Timestamp of the last time this was run, in microseconds
	uint16_t mLastMicros;

public:
	/// Constructor
	CMinWait() { mLastMicros = 0; }
     9ae:	10 92 bf 00 	sts	0x00BF, r1	; 0x8000bf <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0x10>
     9b2:	10 92 be 00 	sts	0x00BE, r1	; 0x8000be <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0xf>
__base_ctor ():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.h:132
template<uint8_t DATA_PIN, EOrder RGB_ORDER> class UCS1903B : public UCS1903BController800Khz<DATA_PIN, RGB_ORDER> {};           ///< @copydoc UCS1903BController800Khz
template<uint8_t DATA_PIN, EOrder RGB_ORDER> class UCS1904 : public UCS1904Controller800Khz<DATA_PIN, RGB_ORDER> {};             ///< @copydoc UCS1904Controller800Khz
template<uint8_t DATA_PIN, EOrder RGB_ORDER> class UCS2903 : public UCS2903Controller<DATA_PIN, RGB_ORDER> {};                   ///< @copydoc UCS2903Controller
template<uint8_t DATA_PIN, EOrder RGB_ORDER> class WS2812 : public WS2812Controller800Khz<DATA_PIN, RGB_ORDER> {};               ///< @copydoc WS2812Controller800Khz
template<uint8_t DATA_PIN, EOrder RGB_ORDER> class WS2852 : public WS2812Controller800Khz<DATA_PIN, RGB_ORDER> {};               ///< WS2852 controller class. @copydetails WS2812Controller800Khz
template<uint8_t DATA_PIN, EOrder RGB_ORDER> class WS2812B : public WS2812Controller800Khz<DATA_PIN, RGB_ORDER> {};              ///< WS2812B controller class. @copydetails WS2812Controller800Khz
     9b6:	8a e7       	ldi	r24, 0x7A	; 122
     9b8:	90 e0       	ldi	r25, 0x00	; 0
     9ba:	90 93 b0 00 	sts	0x00B0, r25	; 0x8000b0 <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0x1>
     9be:	80 93 af 00 	sts	0x00AF, r24	; 0x8000af <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c>
addLeds():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.h:352
	/// @{

	/// Add a clockless based CLEDController instance to the world.
	template<template<uint8_t DATA_PIN, EOrder RGB_ORDER> class CHIPSET, uint8_t DATA_PIN, EOrder RGB_ORDER>
	static CLEDController &addLeds(struct CRGB *data, int nLedsOrOffset, int nLedsIfOffset = 0) {
		static CHIPSET<DATA_PIN, RGB_ORDER> c;
     9c2:	81 e0       	ldi	r24, 0x01	; 1
     9c4:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <guard variable for CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c>
setOutput():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/fastpin_avr.h:22
     9c8:	bb 9a       	sbi	0x17, 3	; 23
_ZN14CLEDController7setLedsEP4CRGBi():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:151

    /// Set the default array of LEDs to be used by this controller
    /// @param data pointer to the LED data
    /// @param nLeds the number of LEDs in the LED data
    CLEDController & setLeds(CRGB *data, int nLeds) {
        m_Data = data;
     9ca:	84 ef       	ldi	r24, 0xF4	; 244
     9cc:	90 e0       	ldi	r25, 0x00	; 0
     9ce:	90 93 b2 00 	sts	0x00B2, r25	; 0x8000b2 <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0x3>
     9d2:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0x2>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:152
        m_nLeds = nLeds;
     9d6:	8c e1       	ldi	r24, 0x1C	; 28
     9d8:	90 e0       	ldi	r25, 0x00	; 0
     9da:	90 93 bd 00 	sts	0x00BD, r25	; 0x8000bd <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0xe>
     9de:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0xd>
setMaxRefreshRate():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:242
void CFastLED::setMaxRefreshRate(uint16_t refresh, bool constrain) {
	if(constrain) {
		// if we're constraining, the new value of m_nMinMicros _must_ be higher than previously (because we're only
		// allowed to slow things down if constraining)
		if(refresh > 0) {
			m_nMinMicros = ((1000000 / refresh) > m_nMinMicros) ? (1000000 / refresh) : m_nMinMicros;
     9e2:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <FastLED+0x3>
     9e6:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <FastLED+0x4>
     9ea:	a0 91 52 01 	lds	r26, 0x0152	; 0x800152 <FastLED+0x5>
     9ee:	b0 91 53 01 	lds	r27, 0x0153	; 0x800153 <FastLED+0x6>
     9f2:	84 3c       	cpi	r24, 0xC4	; 196
     9f4:	f9 e0       	ldi	r31, 0x09	; 9
     9f6:	9f 07       	cpc	r25, r31
     9f8:	a1 05       	cpc	r26, r1
     9fa:	b1 05       	cpc	r27, r1
     9fc:	20 f4       	brcc	.+8      	; 0xa06 <main+0x156>
     9fe:	84 ec       	ldi	r24, 0xC4	; 196
     a00:	99 e0       	ldi	r25, 0x09	; 9
     a02:	a0 e0       	ldi	r26, 0x00	; 0
     a04:	b0 e0       	ldi	r27, 0x00	; 0
     a06:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <FastLED+0x3>
     a0a:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <FastLED+0x4>
     a0e:	a0 93 52 01 	sts	0x0152, r26	; 0x800152 <FastLED+0x5>
     a12:	b0 93 53 01 	sts	0x0153, r27	; 0x800153 <FastLED+0x6>
_ZN8CFastLED13setBrightnessEh():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.h:553
	/// @} Adding parallel output controllers
#endif

	/// Set the global brightness scaling
	/// @param scale a 0-255 value for how much to scale all leds before writing them out
	void setBrightness(uint8_t scale) { m_Scale = scale; }
     a16:	82 e3       	ldi	r24, 0x32	; 50
     a18:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <FastLED>
setup():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:37
	//FastLED.setMaxPowerInVoltsAndMilliamps(VOLTS,MAX_AMPS);
	FastLED.setBrightness(BRIGHTNESS);
	//FastLED.clear();
	//FastLED.show(); 

	EEAR = 0x00;
     a1c:	1f ba       	out	0x1f, r1	; 31
     a1e:	1e ba       	out	0x1e, r1	; 30
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:39
	//asm volatile ("sbi EECR,EERE");		//Start read.
	asm volatile ("sbi 0x1C,0");			//Write enable on;
     a20:	e0 9a       	sbi	0x1c, 0	; 28
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:40
	Status = EEDR;
     a22:	8d b3       	in	r24, 0x1d	; 29
     a24:	80 93 5d 01 	sts	0x015D, r24	; 0x80015d <Status>
     a28:	0c e1       	ldi	r16, 0x1C	; 28
     a2a:	20 2e       	mov	r2, r16
     a2c:	31 2c       	mov	r3, r1
random():
long random(long howbig)
{
  if (howbig == 0) {
    return 0;
  }
  return random() % howbig;
     a2e:	8c e1       	ldi	r24, 0x1C	; 28
     a30:	48 2e       	mov	r4, r24
     a32:	51 2c       	mov	r5, r1
     a34:	61 2c       	mov	r6, r1
     a36:	71 2c       	mov	r7, r1
     a38:	81 2c       	mov	r8, r1
     a3a:	91 2c       	mov	r9, r1
     a3c:	54 01       	movw	r10, r8
     a3e:	8a 94       	dec	r8
main():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:51
	uint8_t i;
	uint8_t iLed;
	uint8_t ResetStatus = 0;


	for(i = 0; i < FrameDelay; i++)	{
     a40:	10 e0       	ldi	r17, 0x00	; 0
loop():
     a42:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <FrameDelay>
     a46:	18 17       	cp	r17, r24
     a48:	08 f0       	brcs	.+2      	; 0xa4c <main+0x19c>
     a4a:	82 c0       	rjmp	.+260    	; 0xb50 <main+0x2a0>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:52
		if(digitalRead(BUTTON_PIN) == 0) {
     a4c:	45 db       	rcall	.-2422   	; 0xd8 <digitalRead.constprop.10>
     a4e:	89 2b       	or	r24, r25
     a50:	09 f0       	breq	.+2      	; 0xa54 <main+0x1a4>
     a52:	77 c0       	rjmp	.+238    	; 0xb42 <main+0x292>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:53
			delay(30);											//Debounce.
     a54:	6e e1       	ldi	r22, 0x1E	; 30
     a56:	70 e0       	ldi	r23, 0x00	; 0
     a58:	80 e0       	ldi	r24, 0x00	; 0
     a5a:	90 e0       	ldi	r25, 0x00	; 0
     a5c:	94 db       	rcall	.-2264   	; 0x186 <delay>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:54
			if(digitalRead(BUTTON_PIN) == 0)	{
     a5e:	3c db       	rcall	.-2440   	; 0xd8 <digitalRead.constprop.10>
     a60:	89 2b       	or	r24, r25
     a62:	09 f0       	breq	.+2      	; 0xa66 <main+0x1b6>
     a64:	6e c0       	rjmp	.+220    	; 0xb42 <main+0x292>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:55
				Status += 1;
     a66:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <Status>
     a6a:	8f 5f       	subi	r24, 0xFF	; 255
     a6c:	80 93 5d 01 	sts	0x015D, r24	; 0x80015d <Status>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:56
				iFrame = 0;
     a70:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <iFrame>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:57
				xFrame = 0;
     a74:	10 92 5b 01 	sts	0x015B, r1	; 0x80015b <xFrame>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:58
				CountDir = CountUp;
     a78:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <CountDir>
_ZN8CFastLED13setBrightnessEh():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.h:553
     a7c:	82 e3       	ldi	r24, 0x32	; 50
     a7e:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <FastLED>
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:61
				FastLED.setBrightness(BRIGHTNESS);
				ResetStatus = 1;
				WriteStatusRom = 1;
     a82:	81 e0       	ldi	r24, 0x01	; 1
     a84:	80 93 4c 01 	sts	0x014C, r24	; 0x80014c <WriteStatusRom>
millis():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:218
}

unsigned long millis()
{
  unsigned long m;
  uint8_t oldSREG = SREG;
     a88:	2f b7       	in	r18, 0x3f	; 63
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:222

  // disable interrupts while we read timer0_millis or we might get an
  // inconsistent value (e.g. in the middle of a write to timer0_millis)
  cli();
     a8a:	f8 94       	cli
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:223
  m = timer0_millis;
     a8c:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <timer0_millis>
     a90:	90 91 c9 00 	lds	r25, 0x00C9	; 0x8000c9 <timer0_millis+0x1>
     a94:	a0 91 ca 00 	lds	r26, 0x00CA	; 0x8000ca <timer0_millis+0x2>
     a98:	b0 91 cb 00 	lds	r27, 0x00CB	; 0x8000cb <timer0_millis+0x3>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:224
  SREG = oldSREG;
     a9c:	2f bf       	out	0x3f, r18	; 63
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:62
				ResetTimeStamp = millis();
     a9e:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <ResetTimeStamp>
     aa2:	90 93 49 01 	sts	0x0149, r25	; 0x800149 <ResetTimeStamp+0x1>
     aa6:	a0 93 4a 01 	sts	0x014A, r26	; 0x80014a <ResetTimeStamp+0x2>
     aaa:	b0 93 4b 01 	sts	0x014B, r27	; 0x80014b <ResetTimeStamp+0x3>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:63
				while(digitalRead(BUTTON_PIN) == 0)	{}		//Wait button release.
     aae:	14 db       	rcall	.-2520   	; 0xd8 <digitalRead.constprop.10>
     ab0:	89 2b       	or	r24, r25
     ab2:	e9 f3       	breq	.-6      	; 0xaae <main+0x1fe>
main():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:60
				Status += 1;
				iFrame = 0;
				xFrame = 0;
				CountDir = CountUp;
				FastLED.setBrightness(BRIGHTNESS);
				ResetStatus = 1;
     ab4:	91 e0       	ldi	r25, 0x01	; 1
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:69
				break;
			}
		}
		delay(5);
	}
	if(WriteStatusRom == 1)	{
     ab6:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <WriteStatusRom>
     aba:	81 30       	cpi	r24, 0x01	; 1
     abc:	29 f5       	brne	.+74     	; 0xb08 <main+0x258>
millis():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:218
}

unsigned long millis()
{
  unsigned long m;
  uint8_t oldSREG = SREG;
     abe:	8f b7       	in	r24, 0x3f	; 63
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:222

  // disable interrupts while we read timer0_millis or we might get an
  // inconsistent value (e.g. in the middle of a write to timer0_millis)
  cli();
     ac0:	f8 94       	cli
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:223
  m = timer0_millis;
     ac2:	40 91 c8 00 	lds	r20, 0x00C8	; 0x8000c8 <timer0_millis>
     ac6:	50 91 c9 00 	lds	r21, 0x00C9	; 0x8000c9 <timer0_millis+0x1>
     aca:	60 91 ca 00 	lds	r22, 0x00CA	; 0x8000ca <timer0_millis+0x2>
     ace:	70 91 cb 00 	lds	r23, 0x00CB	; 0x8000cb <timer0_millis+0x3>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:224
  SREG = oldSREG;
     ad2:	8f bf       	out	0x3f, r24	; 63
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:70
		if(millis()-ResetTimeStamp >= 30000)	{
     ad4:	00 91 48 01 	lds	r16, 0x0148	; 0x800148 <ResetTimeStamp>
     ad8:	10 91 49 01 	lds	r17, 0x0149	; 0x800149 <ResetTimeStamp+0x1>
     adc:	20 91 4a 01 	lds	r18, 0x014A	; 0x80014a <ResetTimeStamp+0x2>
     ae0:	30 91 4b 01 	lds	r19, 0x014B	; 0x80014b <ResetTimeStamp+0x3>
     ae4:	40 1b       	sub	r20, r16
     ae6:	51 0b       	sbc	r21, r17
     ae8:	62 0b       	sbc	r22, r18
     aea:	73 0b       	sbc	r23, r19
     aec:	40 33       	cpi	r20, 0x30	; 48
     aee:	55 47       	sbci	r21, 0x75	; 117
     af0:	61 05       	cpc	r22, r1
     af2:	71 05       	cpc	r23, r1
     af4:	48 f0       	brcs	.+18     	; 0xb08 <main+0x258>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:72
			//Write status to rom
			EEAR = 0x00;
     af6:	1f ba       	out	0x1f, r1	; 31
     af8:	1e ba       	out	0x1e, r1	; 30
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:73
			EEDR = Status;
     afa:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <Status>
     afe:	8d bb       	out	0x1d, r24	; 29
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:75
			//asm volatile ("sbi EECR,EEMWE");			//Write enable on;
			asm volatile ("sbi 0x1C,2");			//Write enable on;
     b00:	e2 9a       	sbi	0x1c, 2	; 28
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:77
			//asm volatile ("sbi EECR,EEWE");			//Start write;
			asm volatile ("sbi 0x1C,1");			//Start write;
     b02:	e1 9a       	sbi	0x1c, 1	; 28
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:78
			WriteStatusRom = 0;	
     b04:	10 92 4c 01 	sts	0x014C, r1	; 0x80014c <WriteStatusRom>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:84
		}
	}


	//////////////////// STATUS 0, 1, 2, 3 ///////////////////////
	if((Status == 0x00) || (Status == 0x01) || (Status == 0x02) || (Status == 0x03))	{
     b08:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <Status>
     b0c:	84 30       	cpi	r24, 0x04	; 4
     b0e:	88 f5       	brcc	.+98     	; 0xb72 <main+0x2c2>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:85
		if		(Status == 0)	{ColorLeds(CRGB::Red);}
     b10:	6f ef       	ldi	r22, 0xFF	; 255
     b12:	70 e0       	ldi	r23, 0x00	; 0
     b14:	88 23       	and	r24, r24
     b16:	29 f0       	breq	.+10     	; 0xb22 <main+0x272>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:86
		else if	(Status == 1)	{ColorLeds(CRGB::Green);}
     b18:	81 30       	cpi	r24, 0x01	; 1
     b1a:	e1 f4       	brne	.+56     	; 0xb54 <main+0x2a4>
     b1c:	60 e0       	ldi	r22, 0x00	; 0
     b1e:	70 e8       	ldi	r23, 0x80	; 128
     b20:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:88
		else if	(Status == 2)	{ColorLeds(CRGB::Blue);}
		else 					{ColorLeds(CRGB::Purple);}
     b22:	23 de       	rcall	.-954    	; 0x76a <ColorLeds(CRGB)>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:89
		FastLED.setBrightness(iFrame);
     b24:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <iFrame>
_ZN8CFastLED13setBrightnessEh():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.h:553
     b28:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <FastLED>
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:90
		if		(iFrame == BRIGHTNESS)		{ CountDir = CountDown;}
     b2c:	82 33       	cpi	r24, 0x32	; 50
     b2e:	e1 f4       	brne	.+56     	; 0xb68 <main+0x2b8>
     b30:	91 e0       	ldi	r25, 0x01	; 1
     b32:	90 93 5a 01 	sts	0x015A, r25	; 0x80015a <CountDir>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:92
		else if	(iFrame == 0)             	{ CountDir = CountUp;}
		if		(CountDir == CountUp)		{ iFrame ++;}
     b36:	90 91 5a 01 	lds	r25, 0x015A	; 0x80015a <CountDir>
     b3a:	91 11       	cpse	r25, r1
     b3c:	d5 c2       	rjmp	.+1450   	; 0x10e8 <L_5282+0x370>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:199
			}
		}
		else if(CountDir == CountUp)	{
			for (iLed=0; iLed < iFrame; iLed++) { leds[iLed] = CRGB::Blue;	}
			leds[iFrame] = CRGB::Yellow;	
			iFrame++;
     b3e:	8f 5f       	subi	r24, 0xFF	; 255
     b40:	d4 c2       	rjmp	.+1448   	; 0x10ea <L_5282+0x372>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:67
				ResetTimeStamp = millis();
				while(digitalRead(BUTTON_PIN) == 0)	{}		//Wait button release.
				break;
			}
		}
		delay(5);
     b42:	65 e0       	ldi	r22, 0x05	; 5
     b44:	70 e0       	ldi	r23, 0x00	; 0
     b46:	80 e0       	ldi	r24, 0x00	; 0
     b48:	90 e0       	ldi	r25, 0x00	; 0
     b4a:	1d db       	rcall	.-2502   	; 0x186 <delay>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:51
	uint8_t i;
	uint8_t iLed;
	uint8_t ResetStatus = 0;


	for(i = 0; i < FrameDelay; i++)	{
     b4c:	1f 5f       	subi	r17, 0xFF	; 255
     b4e:	79 cf       	rjmp	.-270    	; 0xa42 <main+0x192>
main():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:48
}

void loop() {
	uint8_t i;
	uint8_t iLed;
	uint8_t ResetStatus = 0;
     b50:	90 e0       	ldi	r25, 0x00	; 0
     b52:	b1 cf       	rjmp	.-158    	; 0xab6 <main+0x206>
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:87

	//////////////////// STATUS 0, 1, 2, 3 ///////////////////////
	if((Status == 0x00) || (Status == 0x01) || (Status == 0x02) || (Status == 0x03))	{
		if		(Status == 0)	{ColorLeds(CRGB::Red);}
		else if	(Status == 1)	{ColorLeds(CRGB::Green);}
		else if	(Status == 2)	{ColorLeds(CRGB::Blue);}
     b54:	82 30       	cpi	r24, 0x02	; 2
     b56:	21 f4       	brne	.+8      	; 0xb60 <main+0x2b0>
     b58:	60 e0       	ldi	r22, 0x00	; 0
     b5a:	70 e0       	ldi	r23, 0x00	; 0
     b5c:	8f ef       	ldi	r24, 0xFF	; 255
     b5e:	e1 cf       	rjmp	.-62     	; 0xb22 <main+0x272>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:88
		else 					{ColorLeds(CRGB::Purple);}
     b60:	60 e8       	ldi	r22, 0x80	; 128
     b62:	70 e0       	ldi	r23, 0x00	; 0
     b64:	80 e8       	ldi	r24, 0x80	; 128
     b66:	dd cf       	rjmp	.-70     	; 0xb22 <main+0x272>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:91
		FastLED.setBrightness(iFrame);
		if		(iFrame == BRIGHTNESS)		{ CountDir = CountDown;}
		else if	(iFrame == 0)             	{ CountDir = CountUp;}
     b68:	81 11       	cpse	r24, r1
     b6a:	e5 cf       	rjmp	.-54     	; 0xb36 <main+0x286>
     b6c:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <CountDir>
     b70:	e2 cf       	rjmp	.-60     	; 0xb36 <main+0x286>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:98
		else								{ iFrame --;}
		FrameDelay = 5;
	}
	//////////////////// STATUS 4 ///////////////////////
	else if(Status == 4)	{
		ColorLeds(CRGB::Red);
     b72:	6f ef       	ldi	r22, 0xFF	; 255
     b74:	70 e0       	ldi	r23, 0x00	; 0
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:97
		if		(CountDir == CountUp)		{ iFrame ++;}
		else								{ iFrame --;}
		FrameDelay = 5;
	}
	//////////////////// STATUS 4 ///////////////////////
	else if(Status == 4)	{
     b76:	84 30       	cpi	r24, 0x04	; 4
     b78:	29 f0       	breq	.+10     	; 0xb84 <main+0x2d4>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:102
		ColorLeds(CRGB::Red);
		FrameDelay = 255;
	}
	//////////////////// STATUS 5 ///////////////////////
	else if(Status == 5)	{
     b7a:	85 30       	cpi	r24, 0x05	; 5
     b7c:	09 f0       	breq	.+2      	; 0xb80 <main+0x2d0>
     b7e:	b9 c0       	rjmp	.+370    	; 0xcf2 <main+0x442>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:103
		ColorLeds(CRGB::Green);
     b80:	60 e0       	ldi	r22, 0x00	; 0
     b82:	70 e8       	ldi	r23, 0x80	; 128
     b84:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:113
		ColorLeds(CRGB::Blue);
		FrameDelay = 255;
	}
	//////////////////// STATUS 7 ///////////////////////
	else if(Status == 7)	{
		ColorLeds(CRGB::Purple);
     b86:	f1 dd       	rcall	.-1054   	; 0x76a <ColorLeds(CRGB)>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:114
		FrameDelay = 255;
     b88:	8f ef       	ldi	r24, 0xFF	; 255
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:418
		ShiftLed(GreenDD);
		if		(iFrame == NUM_LEDS - 4)	{ CountDir = CountDown;}
		else if	(iFrame == 0)             	{ CountDir = CountUp;}
		if		(CountDir == CountUp)		{ iFrame ++;}
		else								{ iFrame --;}
		FrameDelay = 8;
     b8a:	80 93 5e 01 	sts	0x015E, r24	; 0x80015e <FrameDelay>
show():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.h:573
	/// Update all our controllers with the current led colors, using the passed in brightness
	/// @param scale the brightness value to use in place of the stored value
	void show(uint8_t scale);

	/// Update all our controllers with the current led colors
	void show() { show(m_Scale); }
     b8e:	d0 90 4d 01 	lds	r13, 0x014D	; 0x80014d <FastLED>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:56
	return *pLed;
}

void CFastLED::show(uint8_t scale) {
	// guard against showing too rapidly
	while(m_nMinMicros && ((micros()-lastshow) < m_nMinMicros));
     b92:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <FastLED+0x3>
     b96:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <FastLED+0x4>
     b9a:	a0 91 52 01 	lds	r26, 0x0152	; 0x800152 <FastLED+0x5>
     b9e:	b0 91 53 01 	lds	r27, 0x0153	; 0x800153 <FastLED+0x6>
     ba2:	89 2b       	or	r24, r25
     ba4:	8a 2b       	or	r24, r26
     ba6:	8b 2b       	or	r24, r27
     ba8:	d1 f0       	breq	.+52     	; 0xbde <main+0x32e>
     baa:	c7 da       	rcall	.-2674   	; 0x13a <micros>
     bac:	00 91 d4 00 	lds	r16, 0x00D4	; 0x8000d4 <lastshow>
     bb0:	10 91 d5 00 	lds	r17, 0x00D5	; 0x8000d5 <lastshow+0x1>
     bb4:	20 91 d6 00 	lds	r18, 0x00D6	; 0x8000d6 <lastshow+0x2>
     bb8:	30 91 d7 00 	lds	r19, 0x00D7	; 0x8000d7 <lastshow+0x3>
     bbc:	60 1b       	sub	r22, r16
     bbe:	71 0b       	sbc	r23, r17
     bc0:	82 0b       	sbc	r24, r18
     bc2:	93 0b       	sbc	r25, r19
     bc4:	00 91 50 01 	lds	r16, 0x0150	; 0x800150 <FastLED+0x3>
     bc8:	10 91 51 01 	lds	r17, 0x0151	; 0x800151 <FastLED+0x4>
     bcc:	20 91 52 01 	lds	r18, 0x0152	; 0x800152 <FastLED+0x5>
     bd0:	30 91 53 01 	lds	r19, 0x0153	; 0x800153 <FastLED+0x6>
     bd4:	60 17       	cp	r22, r16
     bd6:	71 07       	cpc	r23, r17
     bd8:	82 07       	cpc	r24, r18
     bda:	93 07       	cpc	r25, r19
     bdc:	d0 f2       	brcs	.-76     	; 0xb92 <main+0x2e2>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:57
	lastshow = micros();
     bde:	ad da       	rcall	.-2726   	; 0x13a <micros>
     be0:	60 93 d4 00 	sts	0x00D4, r22	; 0x8000d4 <lastshow>
     be4:	70 93 d5 00 	sts	0x00D5, r23	; 0x8000d5 <lastshow+0x1>
     be8:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <lastshow+0x2>
     bec:	90 93 d7 00 	sts	0x00D7, r25	; 0x8000d7 <lastshow+0x3>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:60

	// If we have a function for computing power, use it!
	if(m_pPowerFunc) {
     bf0:	e0 91 58 01 	lds	r30, 0x0158	; 0x800158 <FastLED+0xb>
     bf4:	f0 91 59 01 	lds	r31, 0x0159	; 0x800159 <FastLED+0xc>
     bf8:	30 97       	sbiw	r30, 0x00	; 0
     bfa:	59 f0       	breq	.+22     	; 0xc12 <main+0x362>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:61
		scale = (*m_pPowerFunc)(scale, m_nPowerData);
     bfc:	40 91 54 01 	lds	r20, 0x0154	; 0x800154 <FastLED+0x7>
     c00:	50 91 55 01 	lds	r21, 0x0155	; 0x800155 <FastLED+0x8>
     c04:	60 91 56 01 	lds	r22, 0x0156	; 0x800156 <FastLED+0x9>
     c08:	70 91 57 01 	lds	r23, 0x0157	; 0x800157 <FastLED+0xa>
     c0c:	8d 2d       	mov	r24, r13
     c0e:	09 95       	icall
     c10:	d8 2e       	mov	r13, r24
_ZN14CLEDController4headEv():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:141
        showColor(data, m_nLeds, getAdjustment(brightness));
    }

    /// Get the first LED controller in the linked list of controllers
    /// @returns CLEDController::m_pHead
    static CLEDController *head() { return m_pHead; }
     c12:	e0 90 d2 00 	lds	r14, 0x00D2	; 0x8000d2 <CLEDController::m_pHead>
     c16:	f0 90 d3 00 	lds	r15, 0x00D3	; 0x8000d3 <CLEDController::m_pHead+0x1>
computeAdjustment():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:236
              if(scale > 0) {
                  for(uint8_t i = 0; i < 3; ++i) {
                      uint8_t cc = colorCorrection.raw[i];
                      uint8_t ct = colorTemperature.raw[i];
                      if(cc > 0 && ct > 0) {
                          uint32_t work = (((uint32_t)cc)+1) * (((uint32_t)ct)+1) * scale;
     c1a:	8d 2d       	mov	r24, r13
     c1c:	90 e0       	ldi	r25, 0x00	; 0
     c1e:	b0 e0       	ldi	r27, 0x00	; 0
     c20:	a0 e0       	ldi	r26, 0x00	; 0
     c22:	8f 83       	std	Y+7, r24	; 0x07
     c24:	98 87       	std	Y+8, r25	; 0x08
     c26:	a9 87       	std	Y+9, r26	; 0x09
     c28:	ba 87       	std	Y+10, r27	; 0x0a
show():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:65
	}

	CLEDController *pCur = CLEDController::head();
	while(pCur) {
     c2a:	e1 14       	cp	r14, r1
     c2c:	f1 04       	cpc	r15, r1
     c2e:	09 f4       	brne	.+2      	; 0xc32 <main+0x382>
     c30:	93 c5       	rjmp	.+2854   	; 0x1758 <L_5282+0x9e0>
     c32:	d7 01       	movw	r26, r14
     c34:	1c 96       	adiw	r26, 0x0c	; 12
     c36:	bc 91       	ld	r27, X
     c38:	bc 83       	std	Y+4, r27	; 0x04
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:67
		uint8_t d = pCur->getDither();
		if(m_nFPS < 100) { pCur->setDither(0); }
     c3a:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <FastLED+0x1>
     c3e:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <FastLED+0x2>
     c42:	84 36       	cpi	r24, 0x64	; 100
     c44:	91 05       	cpc	r25, r1
     c46:	10 f4       	brcc	.+4      	; 0xc4c <main+0x39c>
_ZN14CLEDController9setDitherEh():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:183
    CRGB &operator[](int x) { return m_Data[x]; }

    /// Set the dithering mode for this controller to use
    /// @param ditherMode the dithering mode to set
    /// @returns a reference to the controller
    inline CLEDController & setDither(uint8_t ditherMode = BINARY_DITHER) { m_DitherMode = ditherMode; return *this; }
     c48:	f7 01       	movw	r30, r14
     c4a:	14 86       	std	Z+12, r1	; 0x0c
showLeds():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:127

    /// Write the data to the LEDs managed by this controller
    /// @param brightness the brightness of the LEDs
    /// @see show(const struct CRGB*, int, uint8_t)
    void showLeds(uint8_t brightness=255) {
        show(m_Data, m_nLeds, getAdjustment(brightness));
     c4c:	d7 01       	movw	r26, r14
     c4e:	ed 91       	ld	r30, X+
     c50:	fc 91       	ld	r31, X
     c52:	22 81       	ldd	r18, Z+2	; 0x02
     c54:	33 81       	ldd	r19, Z+3	; 0x03
     c56:	3e 83       	std	Y+6, r19	; 0x06
     c58:	2d 83       	std	Y+5, r18	; 0x05
_ZN4CRGBC2Ehhh():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:169
    /// Allow construction from red, green, and blue
    /// @param ir input red value
    /// @param ig input green value
    /// @param ib input blue value
    inline CRGB( uint8_t ir, uint8_t ig, uint8_t ib)  __attribute__((always_inline))
        : r(ir), g(ig), b(ib)
     c5a:	19 82       	std	Y+1, r1	; 0x01
     c5c:	1a 82       	std	Y+2, r1	; 0x02
     c5e:	1b 82       	std	Y+3, r1	; 0x03
computeAdjustment():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:231
      #if defined(NO_CORRECTION) && (NO_CORRECTION==1)
              return CRGB(scale,scale,scale);
      #else
              CRGB adj(0,0,0);

              if(scale > 0) {
     c60:	dd 20       	and	r13, r13
     c62:	91 f1       	breq	.+100    	; 0xcc8 <main+0x418>
     c64:	87 01       	movw	r16, r14
     c66:	0a 5f       	subi	r16, 0xFA	; 250
     c68:	1f 4f       	sbci	r17, 0xFF	; 255
     c6a:	f0 e0       	ldi	r31, 0x00	; 0
     c6c:	e0 e0       	ldi	r30, 0x00	; 0
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:233
                  for(uint8_t i = 0; i < 3; ++i) {
                      uint8_t cc = colorCorrection.raw[i];
     c6e:	d8 01       	movw	r26, r16
     c70:	2d 91       	ld	r18, X+
     c72:	8d 01       	movw	r16, r26
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:235
                      uint8_t ct = colorTemperature.raw[i];
                      if(cc > 0 && ct > 0) {
     c74:	22 23       	and	r18, r18
     c76:	21 f1       	breq	.+72     	; 0xcc0 <main+0x410>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:234
              CRGB adj(0,0,0);

              if(scale > 0) {
                  for(uint8_t i = 0; i < 3; ++i) {
                      uint8_t cc = colorCorrection.raw[i];
                      uint8_t ct = colorTemperature.raw[i];
     c78:	12 96       	adiw	r26, 0x02	; 2
     c7a:	cc 90       	ld	r12, X
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:235
                      if(cc > 0 && ct > 0) {
     c7c:	cc 20       	and	r12, r12
     c7e:	01 f1       	breq	.+64     	; 0xcc0 <main+0x410>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:236
                          uint32_t work = (((uint32_t)cc)+1) * (((uint32_t)ct)+1) * scale;
     c80:	30 e0       	ldi	r19, 0x00	; 0
     c82:	50 e0       	ldi	r21, 0x00	; 0
     c84:	40 e0       	ldi	r20, 0x00	; 0
     c86:	2f 5f       	subi	r18, 0xFF	; 255
     c88:	3f 4f       	sbci	r19, 0xFF	; 255
     c8a:	4f 4f       	sbci	r20, 0xFF	; 255
     c8c:	5f 4f       	sbci	r21, 0xFF	; 255
     c8e:	6f 81       	ldd	r22, Y+7	; 0x07
     c90:	78 85       	ldd	r23, Y+8	; 0x08
     c92:	89 85       	ldd	r24, Y+9	; 0x09
     c94:	9a 85       	ldd	r25, Y+10	; 0x0a
     c96:	c8 d6       	rcall	.+3472   	; 0x1a28 <__mulsi3>
     c98:	9b 01       	movw	r18, r22
     c9a:	ac 01       	movw	r20, r24
     c9c:	8c 2d       	mov	r24, r12
     c9e:	90 e0       	ldi	r25, 0x00	; 0
     ca0:	b0 e0       	ldi	r27, 0x00	; 0
     ca2:	a0 e0       	ldi	r26, 0x00	; 0
     ca4:	bc 01       	movw	r22, r24
     ca6:	cd 01       	movw	r24, r26
     ca8:	6f 5f       	subi	r22, 0xFF	; 255
     caa:	7f 4f       	sbci	r23, 0xFF	; 255
     cac:	8f 4f       	sbci	r24, 0xFF	; 255
     cae:	9f 4f       	sbci	r25, 0xFF	; 255
     cb0:	bb d6       	rcall	.+3446   	; 0x1a28 <__mulsi3>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:238
                          work /= 0x10000L;
                          adj.raw[i] = work & 0xFF;
     cb2:	a1 e0       	ldi	r26, 0x01	; 1
     cb4:	b0 e0       	ldi	r27, 0x00	; 0
     cb6:	ac 0f       	add	r26, r28
     cb8:	bd 1f       	adc	r27, r29
     cba:	ae 0f       	add	r26, r30
     cbc:	bf 1f       	adc	r27, r31
     cbe:	8c 93       	st	X, r24
     cc0:	31 96       	adiw	r30, 0x01	; 1
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:232
              return CRGB(scale,scale,scale);
      #else
              CRGB adj(0,0,0);

              if(scale > 0) {
                  for(uint8_t i = 0; i < 3; ++i) {
     cc2:	e3 30       	cpi	r30, 0x03	; 3
     cc4:	f1 05       	cpc	r31, r1
     cc6:	99 f6       	brne	.-90     	; 0xc6e <main+0x3be>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:243
                          adj.raw[i] = work & 0xFF;
                      }
                  }
              }

              return adj;
     cc8:	09 81       	ldd	r16, Y+1	; 0x01
     cca:	1a 81       	ldd	r17, Y+2	; 0x02
     ccc:	2b 81       	ldd	r18, Y+3	; 0x03
showLeds():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:127

    /// Write the data to the LEDs managed by this controller
    /// @param brightness the brightness of the LEDs
    /// @see show(const struct CRGB*, int, uint8_t)
    void showLeds(uint8_t brightness=255) {
        show(m_Data, m_nLeds, getAdjustment(brightness));
     cce:	f7 01       	movw	r30, r14
     cd0:	45 85       	ldd	r20, Z+13	; 0x0d
     cd2:	56 85       	ldd	r21, Z+14	; 0x0e
     cd4:	62 81       	ldd	r22, Z+2	; 0x02
     cd6:	73 81       	ldd	r23, Z+3	; 0x03
     cd8:	c7 01       	movw	r24, r14
     cda:	ed 81       	ldd	r30, Y+5	; 0x05
     cdc:	fe 81       	ldd	r31, Y+6	; 0x06
     cde:	09 95       	icall
_ZN14CLEDController9setDitherEh():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:183
    CRGB &operator[](int x) { return m_Data[x]; }

    /// Set the dithering mode for this controller to use
    /// @param ditherMode the dithering mode to set
    /// @returns a reference to the controller
    inline CLEDController & setDither(uint8_t ditherMode = BINARY_DITHER) { m_DitherMode = ditherMode; return *this; }
     ce0:	ec 81       	ldd	r30, Y+4	; 0x04
     ce2:	d7 01       	movw	r26, r14
     ce4:	1c 96       	adiw	r26, 0x0c	; 12
     ce6:	ec 93       	st	X, r30
     ce8:	1c 97       	sbiw	r26, 0x0c	; 12
     cea:	14 96       	adiw	r26, 0x04	; 4
     cec:	ed 90       	ld	r14, X+
     cee:	fc 90       	ld	r15, X
     cf0:	9c cf       	rjmp	.-200    	; 0xc2a <main+0x37a>
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:107
	else if(Status == 5)	{
		ColorLeds(CRGB::Green);
		FrameDelay = 255;
	}
	//////////////////// STATUS 6 ///////////////////////
	else if(Status == 6)	{
     cf2:	86 30       	cpi	r24, 0x06	; 6
     cf4:	21 f4       	brne	.+8      	; 0xcfe <main+0x44e>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:108
		ColorLeds(CRGB::Blue);
     cf6:	60 e0       	ldi	r22, 0x00	; 0
     cf8:	70 e0       	ldi	r23, 0x00	; 0
     cfa:	8f ef       	ldi	r24, 0xFF	; 255
     cfc:	44 cf       	rjmp	.-376    	; 0xb86 <main+0x2d6>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:112
		FrameDelay = 255;
	}
	//////////////////// STATUS 7 ///////////////////////
	else if(Status == 7)	{
     cfe:	87 30       	cpi	r24, 0x07	; 7
     d00:	21 f4       	brne	.+8      	; 0xd0a <main+0x45a>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:113
		ColorLeds(CRGB::Purple);
     d02:	60 e8       	ldi	r22, 0x80	; 128
     d04:	70 e0       	ldi	r23, 0x00	; 0
     d06:	80 e8       	ldi	r24, 0x80	; 128
     d08:	3e cf       	rjmp	.-388    	; 0xb86 <main+0x2d6>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:117
		FrameDelay = 255;
	}
	//////////////////// STATUS 8 ///////////////////////
  	else if(Status == 8)  {
     d0a:	88 30       	cpi	r24, 0x08	; 8
     d0c:	09 f0       	breq	.+2      	; 0xd10 <main+0x460>
     d0e:	8d c0       	rjmp	.+282    	; 0xe2a <L_5282+0xb2>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:118
		fill_rainbow_circular(leds,NUM_LEDS,iFrame);
     d10:	60 91 5c 01 	lds	r22, 0x015C	; 0x80015c <iFrame>
     d14:	e4 ef       	ldi	r30, 0xF4	; 244
     d16:	f0 e0       	ldi	r31, 0x00	; 0
fill_rainbow_circular():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/colorutils.cpp:73
void fill_rainbow_circular(struct CRGB* targetArray, int numToFill, uint8_t initialhue, bool reversed)
{
    if (numToFill == 0) return;  // avoiding div/0

    CHSV hsv;
    hsv.hue = initialhue;
     d18:	26 2f       	mov	r18, r22
main():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/colorutils.cpp:78
    hsv.val = 255;
    hsv.sat = 240;

    const uint16_t hueChange = 65535 / (uint16_t)numToFill;  // hue change for each LED, * 256 for precision (256 * 256 - 1)
    uint16_t hueOffset = 0;  // offset for hue value, with precision (*256)
     d1a:	50 e0       	ldi	r21, 0x00	; 0
     d1c:	40 e0       	ldi	r20, 0x00	; 0
scale8():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/lib8tion/scale8.h:93
        "clr __zero_reg__    \n\t"

        : "+a" (i)      /* writes to i */
        : "a"  (scale)  /* uses scale */
        : "r0", "r1"    /* clobbers r0, r1 */
    );
     d1e:	b5 e5       	ldi	r27, 0x55	; 85
     d20:	fb 2e       	mov	r15, r27
     d22:	0a ea       	ldi	r16, 0xAA	; 170
scale8_video():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/lib8tion/scale8.h:133
        "  subi %[j], 0xFF\n\t"
        "L_%=: \n\t"
        : [j] "+a" (j)
        : [i] "a" (i), [scale] "a" (scale)
        : "r0", "r1"
    );
     d24:	1f e0       	ldi	r17, 0x0F	; 15
     d26:	e1 2e       	mov	r14, r17
hsv2rgb_rainbow():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:289
        // It's much faster and smaller to just do three single-bit shifts
        // So this business is to force that.
        offset8 <<= 1;
        asm volatile("");
        offset8 <<= 1;
        asm volatile("");
     d28:	92 2f       	mov	r25, r18
     d2a:	99 0f       	add	r25, r25
     d2c:	99 0f       	add	r25, r25
     d2e:	99 0f       	add	r25, r25
scale8():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/lib8tion/scale8.h:93
        "clr __zero_reg__    \n\t"

        : "+a" (i)      /* writes to i */
        : "a"  (scale)  /* uses scale */
        : "r0", "r1"    /* clobbers r0, r1 */
    );
     d30:	39 2f       	mov	r19, r25
     d32:	7f 2d       	mov	r23, r15
     d34:	37 9f       	mul	r19, r23
     d36:	03 0e       	add	r0, r19
     d38:	30 e0       	ldi	r19, 0x00	; 0
     d3a:	31 1d       	adc	r19, r1
     d3c:	11 24       	eor	r1, r1
     d3e:	83 2f       	mov	r24, r19
     d40:	b2 2f       	mov	r27, r18
     d42:	b0 74       	andi	r27, 0x40	; 64
     d44:	a2 2f       	mov	r26, r18
     d46:	a0 72       	andi	r26, 0x20	; 32
hsv2rgb_rainbow():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:301
    
    uint8_t third = scale8( offset8, (256 / 3)); // max = 85
    
    uint8_t r, g, b;
    
    if( ! (hue & 0x80) ) {
     d48:	27 fd       	sbrc	r18, 7
     d4a:	4f c0       	rjmp	.+158    	; 0xdea <L_5282+0x72>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:303
        // 0XX
        if( ! (hue & 0x40) ) {
     d4c:	b1 11       	cpse	r27, r1
     d4e:	3b c0       	rjmp	.+118    	; 0xdc6 <L_5282+0x4e>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:306
            // 00X
            //section 0-1
            if( ! (hue & 0x20) ) {
     d50:	a1 11       	cpse	r26, r1
     d52:	05 c0       	rjmp	.+10     	; 0xd5e <main+0x4ae>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:309
                // 000
                //case 0: // R -> O
                r = K255 - third;
     d54:	93 2f       	mov	r25, r19
     d56:	90 95       	com	r25
main():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:340
                // 010
                //case 2: // Y -> G
                if( Y1 ) {
                    //uint8_t twothirds = (third << 1);
                    uint8_t twothirds = scale8( offset8, ((256 * 2) / 3)); // max=170
                    r = K171 - twothirds;
     d58:	89 2f       	mov	r24, r25
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:342
                    g = K170 + third;
                    b = 0;
     d5a:	90 e0       	ldi	r25, 0x00	; 0
     d5c:	04 c0       	rjmp	.+8      	; 0xd66 <main+0x4b6>
hsv2rgb_rainbow():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:318
            } else {
                // 001
                //case 1: // O -> Y
                if( Y1 ) {
                    r = K171;
                    g = K85 + third ;
     d5e:	35 e5       	ldi	r19, 0x55	; 85
     d60:	38 0f       	add	r19, r24
main():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:319
                    b = 0;
     d62:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:317
                FORCE_REFERENCE(b);
            } else {
                // 001
                //case 1: // O -> Y
                if( Y1 ) {
                    r = K171;
     d64:	8b ea       	ldi	r24, 0xAB	; 171
scale8_video():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/lib8tion/scale8.h:133
        "  subi %[j], 0xFF\n\t"
        "L_%=: \n\t"
        : [j] "+a" (j)
        : [i] "a" (i), [scale] "a" (scale)
        : "r0", "r1"
    );
     d66:	20 e0       	ldi	r18, 0x00	; 0
     d68:	1e 2d       	mov	r17, r14
     d6a:	11 23       	and	r17, r17
     d6c:	29 f0       	breq	.+10     	; 0xd78 <L_5282>
     d6e:	11 9f       	mul	r17, r17
     d70:	21 2d       	mov	r18, r1
     d72:	11 24       	eor	r1, r1
     d74:	11 11       	cpse	r17, r1
     d76:	2f 5f       	subi	r18, 0xFF	; 255

00000d78 <L_5282>:
hsv2rgb_rainbow():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:419
            r = 255; b = 255; g = 255;
        } else {
            uint8_t desat = 255 - sat;
            desat = scale8_video( desat, desat);

            uint8_t satscale = 255 - desat;
     d78:	a2 2f       	mov	r26, r18
     d7a:	a0 95       	com	r26
scale8_LEAVING_R1_DIRTY():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/lib8tion/scale8.h:199
        /* R1 IS LEFT DIRTY HERE; YOU MUST ZERO IT OUT YOURSELF  */
        /* "clr __zero_reg__    \n\t" */
        : "+a" (i)      /* writes to i */
        : "a"  (scale)  /* uses scale */
        : "r0", "r1"    /* clobbers r0, r1 */
    );
     d7c:	78 2f       	mov	r23, r24
     d7e:	1a 2f       	mov	r17, r26
     d80:	71 9f       	mul	r23, r17
     d82:	07 0e       	add	r0, r23
     d84:	70 e0       	ldi	r23, 0x00	; 0
     d86:	71 1d       	adc	r23, r1
     d88:	87 2f       	mov	r24, r23
     d8a:	31 9f       	mul	r19, r17
     d8c:	03 0e       	add	r0, r19
     d8e:	30 e0       	ldi	r19, 0x00	; 0
     d90:	31 1d       	adc	r19, r1
     d92:	79 2f       	mov	r23, r25
     d94:	71 9f       	mul	r23, r17
     d96:	07 0e       	add	r0, r23
     d98:	70 e0       	ldi	r23, 0x00	; 0
     d9a:	71 1d       	adc	r23, r1
cleanup_R1():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/lib8tion/scale8.h:340
/// @ingroup ScalingDirty
LIB8STATIC_ALWAYS_INLINE void cleanup_R1()
{
#if CLEANUP_R1_AVRASM == 1
    // Restore r1 to "0"; it's expected to always be that
    asm volatile( "clr __zero_reg__  \n\t" : : : "r1" );
     d9c:	11 24       	eor	r1, r1
hsv2rgb_rainbow():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:434
            if( r ) r = scale8( r, satscale) + 1;
            if( g ) g = scale8( g, satscale) + 1;
            if( b ) b = scale8( b, satscale) + 1;
#endif
            uint8_t brightness_floor = desat;
            r += brightness_floor;
     d9e:	82 0f       	add	r24, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:467
    // It turns out that fixing it winds up costing more than
    // not fixing it.
    // To paraphrase Dr Bronner, profile! profile! profile!
    //asm volatile(  ""  :  :  : "r26", "r27" );
    //asm volatile (" movw r30, r26 \n" : : : "r30", "r31");
    rgb.r = r;
     da0:	80 83       	st	Z, r24
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:435
            if( g ) g = scale8( g, satscale) + 1;
            if( b ) b = scale8( b, satscale) + 1;
#endif
            uint8_t brightness_floor = desat;
            r += brightness_floor;
            g += brightness_floor;
     da2:	32 0f       	add	r19, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:468
    // not fixing it.
    // To paraphrase Dr Bronner, profile! profile! profile!
    //asm volatile(  ""  :  :  : "r26", "r27" );
    //asm volatile (" movw r30, r26 \n" : : : "r30", "r31");
    rgb.r = r;
    rgb.g = g;
     da4:	31 83       	std	Z+1, r19	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:436
            if( b ) b = scale8( b, satscale) + 1;
#endif
            uint8_t brightness_floor = desat;
            r += brightness_floor;
            g += brightness_floor;
            b += brightness_floor;
     da6:	27 0f       	add	r18, r23
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:469
    // To paraphrase Dr Bronner, profile! profile! profile!
    //asm volatile(  ""  :  :  : "r26", "r27" );
    //asm volatile (" movw r30, r26 \n" : : : "r30", "r31");
    rgb.r = r;
    rgb.g = g;
    rgb.b = b;
     da8:	22 83       	std	Z+2, r18	; 0x02
fill_rainbow_circular():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/colorutils.cpp:83

    for (int i = 0; i < numToFill; ++i) {
        targetArray[i] = hsv;
        if (reversed) hueOffset -= hueChange;
        else hueOffset += hueChange;
     daa:	4c 5d       	subi	r20, 0xDC	; 220
     dac:	56 4f       	sbci	r21, 0xF6	; 246
     dae:	33 96       	adiw	r30, 0x03	; 3
C:\Users\user\Documents\Arduino\libraries\FastLED\src/colorutils.cpp:84
        hsv.hue = initialhue + (uint8_t)(hueOffset >> 8);  // assign new hue with precise offset (as 8-bit)
     db0:	26 2f       	mov	r18, r22
     db2:	25 0f       	add	r18, r21
C:\Users\user\Documents\Arduino\libraries\FastLED\src/colorutils.cpp:80
    hsv.sat = 240;

    const uint16_t hueChange = 65535 / (uint16_t)numToFill;  // hue change for each LED, * 256 for precision (256 * 256 - 1)
    uint16_t hueOffset = 0;  // offset for hue value, with precision (*256)

    for (int i = 0; i < numToFill; ++i) {
     db4:	40 3f       	cpi	r20, 0xF0	; 240
     db6:	8f ef       	ldi	r24, 0xFF	; 255
     db8:	58 07       	cpc	r21, r24
     dba:	09 f0       	breq	.+2      	; 0xdbe <L_5282+0x46>
     dbc:	b5 cf       	rjmp	.-150    	; 0xd28 <main+0x478>
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:120
		//FastLED.setBrightness(BRIGHTNESS);
		iFrame += 10;
     dbe:	66 5f       	subi	r22, 0xF6	; 246
     dc0:	60 93 5c 01 	sts	0x015C, r22	; 0x80015c <iFrame>
     dc4:	94 c1       	rjmp	.+808    	; 0x10ee <L_5282+0x376>
hsv2rgb_rainbow():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:334
                }
            }
        } else {
            //01X
            // section 2-3
            if( !  (hue & 0x20) ) {
     dc6:	a1 11       	cpse	r26, r1
     dc8:	0b c0       	rjmp	.+22     	; 0xde0 <L_5282+0x68>
scale8():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/lib8tion/scale8.h:93
        "clr __zero_reg__    \n\t"

        : "+a" (i)      /* writes to i */
        : "a"  (scale)  /* uses scale */
        : "r0", "r1"    /* clobbers r0, r1 */
    );
     dca:	29 2f       	mov	r18, r25
     dcc:	20 9f       	mul	r18, r16
     dce:	02 0e       	add	r0, r18
     dd0:	20 e0       	ldi	r18, 0x00	; 0
     dd2:	21 1d       	adc	r18, r1
     dd4:	11 24       	eor	r1, r1
hsv2rgb_rainbow():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:340
                // 010
                //case 2: // Y -> G
                if( Y1 ) {
                    //uint8_t twothirds = (third << 1);
                    uint8_t twothirds = scale8( offset8, ((256 * 2) / 3)); // max=170
                    r = K171 - twothirds;
     dd6:	9b ea       	ldi	r25, 0xAB	; 171
     dd8:	92 1b       	sub	r25, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:341
                    g = K170 + third;
     dda:	3a ea       	ldi	r19, 0xAA	; 170
     ddc:	38 0f       	add	r19, r24
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:343
                    b = 0;
                    FORCE_REFERENCE(b);
     dde:	bc cf       	rjmp	.-136    	; 0xd58 <main+0x4a8>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:355
                }
            } else {
                // 011
                // case 3: // G -> A
                r = 0;
                FORCE_REFERENCE(r);
     de0:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:356
                g = K255 - third;
     de2:	30 95       	com	r19
main():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:357
                b = third;
     de4:	98 2f       	mov	r25, r24
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:368
        if( ! (hue & 0x40) ) {
            // 10X
            if( ! ( hue & 0x20) ) {
                // 100
                //case 4: // A -> B
                r = 0;
     de6:	80 e0       	ldi	r24, 0x00	; 0
     de8:	be cf       	rjmp	.-132    	; 0xd66 <main+0x4b6>
hsv2rgb_rainbow():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:363
            }
        }
    } else {
        // section 4-7
        // 1XX
        if( ! (hue & 0x40) ) {
     dea:	b1 11       	cpse	r27, r1
     dec:	11 c0       	rjmp	.+34     	; 0xe10 <L_5282+0x98>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:365
            // 10X
            if( ! ( hue & 0x20) ) {
     dee:	a1 11       	cpse	r26, r1
     df0:	0b c0       	rjmp	.+22     	; 0xe08 <L_5282+0x90>
scale8():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/lib8tion/scale8.h:93
     df2:	29 2f       	mov	r18, r25
     df4:	20 9f       	mul	r18, r16
     df6:	02 0e       	add	r0, r18
     df8:	20 e0       	ldi	r18, 0x00	; 0
     dfa:	21 1d       	adc	r18, r1
     dfc:	11 24       	eor	r1, r1
hsv2rgb_rainbow():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:372
                //case 4: // A -> B
                r = 0;
                FORCE_REFERENCE(r);
                //uint8_t twothirds = (third << 1);
                uint8_t twothirds = scale8( offset8, ((256 * 2) / 3)); // max=170
                g = K171 - twothirds; //K170?
     dfe:	3b ea       	ldi	r19, 0xAB	; 171
     e00:	32 1b       	sub	r19, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:373
                b = K85  + twothirds;
     e02:	95 e5       	ldi	r25, 0x55	; 85
     e04:	92 0f       	add	r25, r18
     e06:	ef cf       	rjmp	.-34     	; 0xde6 <L_5282+0x6e>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:381
                // 101
                //case 5: // B -> P
                r = third;
                g = 0;
                FORCE_REFERENCE(g);
                b = K255 - third;
     e08:	93 2f       	mov	r25, r19
     e0a:	90 95       	com	r25
main():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:397
                
            } else {
                // 111
                //case 7: // K -> R
                r = K170 + third;
                g = 0;
     e0c:	30 e0       	ldi	r19, 0x00	; 0
     e0e:	ab cf       	rjmp	.-170    	; 0xd66 <main+0x4b6>
hsv2rgb_rainbow():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:385
                FORCE_REFERENCE(g);
                b = K255 - third;
                
            }
        } else {
            if( !  (hue & 0x20)  ) {
     e10:	a1 11       	cpse	r26, r1
     e12:	06 c0       	rjmp	.+12     	; 0xe20 <L_5282+0xa8>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:388
                // 110
                //case 6: // P -- K
                r = K85 + third;
     e14:	25 e5       	ldi	r18, 0x55	; 85
     e16:	23 0f       	add	r18, r19
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:391
                g = 0;
                FORCE_REFERENCE(g);
                b = K171 - third;
     e18:	9b ea       	ldi	r25, 0xAB	; 171
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:399
                // 111
                //case 7: // K -> R
                r = K170 + third;
                g = 0;
                FORCE_REFERENCE(g);
                b = K85 - third;
     e1a:	98 1b       	sub	r25, r24
main():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:396
                b = K171 - third;
                
            } else {
                // 111
                //case 7: // K -> R
                r = K170 + third;
     e1c:	82 2f       	mov	r24, r18
     e1e:	f6 cf       	rjmp	.-20     	; 0xe0c <L_5282+0x94>
hsv2rgb_rainbow():
     e20:	2a ea       	ldi	r18, 0xAA	; 170
     e22:	23 0f       	add	r18, r19
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:398
                g = 0;
                FORCE_REFERENCE(g);
     e24:	a0 e0       	ldi	r26, 0x00	; 0
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:399
                b = K85 - third;
     e26:	9f 2d       	mov	r25, r15
     e28:	f8 cf       	rjmp	.-16     	; 0xe1a <L_5282+0xa2>
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:124
		FrameDelay = 5;
	}
  	//////////////////// STATUS 9 ///////////////////////
  	else if(Status == 9)  {
     e2a:	89 30       	cpi	r24, 0x09	; 9
     e2c:	71 f5       	brne	.+92     	; 0xe8a <L_5282+0x112>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:125
		ColorLeds(CRGB::Blue);
     e2e:	60 e0       	ldi	r22, 0x00	; 0
     e30:	70 e0       	ldi	r23, 0x00	; 0
     e32:	8f ef       	ldi	r24, 0xFF	; 255
     e34:	9a dc       	rcall	.-1740   	; 0x76a <ColorLeds(CRGB)>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:126
		for (iLed = iFrame; iLed < (iFrame + 5); iLed++) {
     e36:	20 91 5c 01 	lds	r18, 0x015C	; 0x80015c <iFrame>
     e3a:	82 2f       	mov	r24, r18
     e3c:	90 e0       	ldi	r25, 0x00	; 0
     e3e:	04 96       	adiw	r24, 0x04	; 4
     e40:	32 2f       	mov	r19, r18
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212

    /// Allow assignment from 32-bit (really 24-bit) 0xRRGGBB color code
    /// @param colorcode a packed 24 bit color code
    inline CRGB& operator= (const uint32_t colorcode) __attribute__((always_inline))
    {
        r = (colorcode >> 16) & 0xFF;
     e42:	4f ef       	ldi	r20, 0xFF	; 255
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:126
     e44:	e3 2f       	mov	r30, r19
     e46:	f0 e0       	ldi	r31, 0x00	; 0
     e48:	8e 17       	cp	r24, r30
     e4a:	9f 07       	cpc	r25, r31
     e4c:	a4 f0       	brlt	.+40     	; 0xe76 <L_5282+0xfe>
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212
     e4e:	bf 01       	movw	r22, r30
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:127
			if(iLed < NUM_LEDS) {leds[iLed] = CRGB::Yellow;}
     e50:	3c 31       	cpi	r19, 0x1C	; 28
     e52:	58 f4       	brcc	.+22     	; 0xe6a <L_5282+0xf2>
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212
     e54:	66 0f       	add	r22, r22
     e56:	77 1f       	adc	r23, r23
     e58:	e6 0f       	add	r30, r22
     e5a:	f7 1f       	adc	r31, r23
     e5c:	ec 50       	subi	r30, 0x0C	; 12
     e5e:	ff 4f       	sbci	r31, 0xFF	; 255
     e60:	40 83       	st	Z, r20
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:213
        g = (colorcode >>  8) & 0xFF;
     e62:	41 83       	std	Z+1, r20	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
        b = (colorcode >>  0) & 0xFF;
     e64:	12 82       	std	Z+2, r1	; 0x02
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:126
		FrameDelay = 5;
	}
  	//////////////////// STATUS 9 ///////////////////////
  	else if(Status == 9)  {
		ColorLeds(CRGB::Blue);
		for (iLed = iFrame; iLed < (iFrame + 5); iLed++) {
     e66:	3f 5f       	subi	r19, 0xFF	; 255
     e68:	ed cf       	rjmp	.-38     	; 0xe44 <L_5282+0xcc>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:128
			if(iLed < NUM_LEDS) {leds[iLed] = CRGB::Yellow;}
			else                {leds[iLed - NUM_LEDS] = CRGB::Yellow;}
     e6a:	6c 51       	subi	r22, 0x1C	; 28
     e6c:	71 09       	sbc	r23, r1
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212

    /// Allow assignment from 32-bit (really 24-bit) 0xRRGGBB color code
    /// @param colorcode a packed 24 bit color code
    inline CRGB& operator= (const uint32_t colorcode) __attribute__((always_inline))
    {
        r = (colorcode >> 16) & 0xFF;
     e6e:	fb 01       	movw	r30, r22
     e70:	ee 0f       	add	r30, r30
     e72:	ff 1f       	adc	r31, r31
     e74:	f1 cf       	rjmp	.-30     	; 0xe58 <L_5282+0xe0>
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:130
		}
		if  (iFrame == NUM_LEDS)        { iFrame = 0;}
     e76:	2c 31       	cpi	r18, 0x1C	; 28
     e78:	19 f4       	brne	.+6      	; 0xe80 <L_5282+0x108>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:238
			ResetStatus = 0;
		}
		if(xFrame == 0)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) { leds[iLed] = CRGB(0,255,0); }
			xFrame++;
			iFrame = 0;
     e7a:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <iFrame>
     e7e:	03 c0       	rjmp	.+6      	; 0xe86 <L_5282+0x10e>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:131
		for (iLed = iFrame; iLed < (iFrame + 5); iLed++) {
			if(iLed < NUM_LEDS) {leds[iLed] = CRGB::Yellow;}
			else                {leds[iLed - NUM_LEDS] = CRGB::Yellow;}
		}
		if  (iFrame == NUM_LEDS)        { iFrame = 0;}
		else                            { iFrame++; }
     e80:	2f 5f       	subi	r18, 0xFF	; 255
     e82:	20 93 5c 01 	sts	0x015C, r18	; 0x80015c <iFrame>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:132
		FrameDelay = 15;
     e86:	8f e0       	ldi	r24, 0x0F	; 15
     e88:	80 ce       	rjmp	.-768    	; 0xb8a <main+0x2da>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:135
  	}	
  	//////////////////// STATUS 10 ///////////////////////
  	else if(Status == 10)  {
     e8a:	8a 30       	cpi	r24, 0x0A	; 10
     e8c:	11 f5       	brne	.+68     	; 0xed2 <L_5282+0x15a>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:136
    	if(iFrame == 0) {
     e8e:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <iFrame>
     e92:	81 11       	cpse	r24, r1
     e94:	03 c0       	rjmp	.+6      	; 0xe9c <L_5282+0x124>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:137
			ColorLeds(CRGB::Black);
     e96:	60 e0       	ldi	r22, 0x00	; 0
     e98:	70 e0       	ldi	r23, 0x00	; 0
     e9a:	67 dc       	rcall	.-1842   	; 0x76a <ColorLeds(CRGB)>
random():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/WMath.cpp:40
     e9c:	16 d5       	rcall	.+2604   	; 0x18ca <random>
     e9e:	6b 01       	movw	r12, r22
     ea0:	7c 01       	movw	r14, r24
     ea2:	13 d5       	rcall	.+2598   	; 0x18ca <random>
     ea4:	a3 01       	movw	r20, r6
     ea6:	92 01       	movw	r18, r4
     ea8:	65 d5       	rcall	.+2762   	; 0x1974 <__divmodsi4>
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:148
  	else if(Status == 11)  {
    	if(iFrame == 0) {
			ColorLeds(CRGB::Black);
		}
		iFrame = 1;
		leds[random(NUM_LEDS)] = CRGB(0, 0, random(255)); 
     eaa:	8b 01       	movw	r16, r22
     eac:	00 0f       	add	r16, r16
     eae:	11 1f       	adc	r17, r17
     eb0:	06 0f       	add	r16, r22
     eb2:	17 1f       	adc	r17, r23
     eb4:	0c 50       	subi	r16, 0x0C	; 12
     eb6:	1f 4f       	sbci	r17, 0xFF	; 255
     eb8:	d8 01       	movw	r26, r16
     eba:	1c 92       	st	X, r1
     ebc:	11 96       	adiw	r26, 0x01	; 1
     ebe:	1c 92       	st	X, r1
random():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/WMath.cpp:40
     ec0:	c7 01       	movw	r24, r14
     ec2:	b6 01       	movw	r22, r12
     ec4:	a5 01       	movw	r20, r10
     ec6:	94 01       	movw	r18, r8
     ec8:	55 d5       	rcall	.+2730   	; 0x1974 <__divmodsi4>
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:148
     eca:	f8 01       	movw	r30, r16
     ecc:	62 83       	std	Z+2, r22	; 0x02
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:149
		FrameDelay = 10;
     ece:	8a e0       	ldi	r24, 0x0A	; 10
     ed0:	5c ce       	rjmp	.-840    	; 0xb8a <main+0x2da>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:143
		}
		leds[random(NUM_LEDS)] = CRGB(0, 0, random(255)); 
		FrameDelay = 10;
  	}
  	//////////////////// STATUS 11 ///////////////////////
  	else if(Status == 11)  {
     ed2:	8b 30       	cpi	r24, 0x0B	; 11
     ed4:	59 f4       	brne	.+22     	; 0xeec <L_5282+0x174>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:144
    	if(iFrame == 0) {
     ed6:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <iFrame>
     eda:	81 11       	cpse	r24, r1
     edc:	03 c0       	rjmp	.+6      	; 0xee4 <L_5282+0x16c>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:145
			ColorLeds(CRGB::Black);
     ede:	60 e0       	ldi	r22, 0x00	; 0
     ee0:	70 e0       	ldi	r23, 0x00	; 0
     ee2:	43 dc       	rcall	.-1914   	; 0x76a <ColorLeds(CRGB)>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:147
		}
		iFrame = 1;
     ee4:	81 e0       	ldi	r24, 0x01	; 1
     ee6:	80 93 5c 01 	sts	0x015C, r24	; 0x80015c <iFrame>
     eea:	d8 cf       	rjmp	.-80     	; 0xe9c <L_5282+0x124>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:152
		leds[random(NUM_LEDS)] = CRGB(0, 0, random(255)); 
		FrameDelay = 10;
  	}
	//////////////////// STATUS 12 ///////////////////////
	else if(Status == 12)  {
     eec:	8c 30       	cpi	r24, 0x0C	; 12
     eee:	09 f0       	breq	.+2      	; 0xef2 <L_5282+0x17a>
     ef0:	52 c0       	rjmp	.+164    	; 0xf96 <L_5282+0x21e>
     ef2:	e4 ef       	ldi	r30, 0xF4	; 244
     ef4:	f0 e0       	ldi	r31, 0x00	; 0
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212
     ef6:	10 82       	st	Z, r1
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:213
        g = (colorcode >>  8) & 0xFF;
     ef8:	11 82       	std	Z+1, r1	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
        b = (colorcode >>  0) & 0xFF;
     efa:	12 82       	std	Z+2, r1	; 0x02
     efc:	33 96       	adiw	r30, 0x03	; 3
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:153
		for (iLed = 0; iLed<NUM_LEDS; iLed++) { leds[iLed] = CRGB::Black; }
     efe:	11 e0       	ldi	r17, 0x01	; 1
     f00:	e8 34       	cpi	r30, 0x48	; 72
     f02:	f1 07       	cpc	r31, r17
     f04:	c1 f7       	brne	.-16     	; 0xef6 <L_5282+0x17e>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:154
		for (iLed = iFrame; iLed < (iFrame + 2); iLed++) { leds[iLed] = CRGB::Blue;}
     f06:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <iFrame>
     f0a:	98 2f       	mov	r25, r24
     f0c:	28 2f       	mov	r18, r24
     f0e:	30 e0       	ldi	r19, 0x00	; 0
     f10:	a9 01       	movw	r20, r18
     f12:	4f 5f       	subi	r20, 0xFF	; 255
     f14:	5f 4f       	sbci	r21, 0xFF	; 255
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
     f16:	af ef       	ldi	r26, 0xFF	; 255
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:154
     f18:	69 2f       	mov	r22, r25
     f1a:	70 e0       	ldi	r23, 0x00	; 0
     f1c:	46 17       	cp	r20, r22
     f1e:	57 07       	cpc	r21, r23
     f20:	64 f0       	brlt	.+24     	; 0xf3a <L_5282+0x1c2>
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212

    /// Allow assignment from 32-bit (really 24-bit) 0xRRGGBB color code
    /// @param colorcode a packed 24 bit color code
    inline CRGB& operator= (const uint32_t colorcode) __attribute__((always_inline))
    {
        r = (colorcode >> 16) & 0xFF;
     f22:	fb 01       	movw	r30, r22
     f24:	ee 0f       	add	r30, r30
     f26:	ff 1f       	adc	r31, r31
     f28:	e6 0f       	add	r30, r22
     f2a:	f7 1f       	adc	r31, r23
     f2c:	ec 50       	subi	r30, 0x0C	; 12
     f2e:	ff 4f       	sbci	r31, 0xFF	; 255
     f30:	10 82       	st	Z, r1
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:213
        g = (colorcode >>  8) & 0xFF;
     f32:	11 82       	std	Z+1, r1	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
        b = (colorcode >>  0) & 0xFF;
     f34:	a2 83       	std	Z+2, r26	; 0x02
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:154
     f36:	9f 5f       	subi	r25, 0xFF	; 255
     f38:	ef cf       	rjmp	.-34     	; 0xf18 <L_5282+0x1a0>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:155
		for (iLed = NUM_LEDS - 1 - iFrame; iLed > (NUM_LEDS - 3 - iFrame); iLed--) { leds[iLed] = CRGB::Blue;}
     f3a:	9b e1       	ldi	r25, 0x1B	; 27
     f3c:	98 1b       	sub	r25, r24
     f3e:	49 e1       	ldi	r20, 0x19	; 25
     f40:	50 e0       	ldi	r21, 0x00	; 0
     f42:	42 1b       	sub	r20, r18
     f44:	53 0b       	sbc	r21, r19
     f46:	9a 01       	movw	r18, r20
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
     f48:	6f ef       	ldi	r22, 0xFF	; 255
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:155
     f4a:	49 2f       	mov	r20, r25
     f4c:	50 e0       	ldi	r21, 0x00	; 0
     f4e:	24 17       	cp	r18, r20
     f50:	35 07       	cpc	r19, r21
     f52:	64 f4       	brge	.+24     	; 0xf6c <L_5282+0x1f4>
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212

    /// Allow assignment from 32-bit (really 24-bit) 0xRRGGBB color code
    /// @param colorcode a packed 24 bit color code
    inline CRGB& operator= (const uint32_t colorcode) __attribute__((always_inline))
    {
        r = (colorcode >> 16) & 0xFF;
     f54:	fa 01       	movw	r30, r20
     f56:	ee 0f       	add	r30, r30
     f58:	ff 1f       	adc	r31, r31
     f5a:	e4 0f       	add	r30, r20
     f5c:	f5 1f       	adc	r31, r21
     f5e:	ec 50       	subi	r30, 0x0C	; 12
     f60:	ff 4f       	sbci	r31, 0xFF	; 255
     f62:	10 82       	st	Z, r1
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:213
        g = (colorcode >>  8) & 0xFF;
     f64:	11 82       	std	Z+1, r1	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
        b = (colorcode >>  0) & 0xFF;
     f66:	62 83       	std	Z+2, r22	; 0x02
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:155
     f68:	91 50       	subi	r25, 0x01	; 1
     f6a:	ef cf       	rjmp	.-34     	; 0xf4a <L_5282+0x1d2>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:156
		if		(iFrame + 2 == NUM_LEDS/2)	{CountDir = CountDown;}
     f6c:	8c 30       	cpi	r24, 0x0C	; 12
     f6e:	61 f4       	brne	.+24     	; 0xf88 <L_5282+0x210>
     f70:	91 e0       	ldi	r25, 0x01	; 1
     f72:	90 93 5a 01 	sts	0x015A, r25	; 0x80015a <CountDir>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:158
		else if	(iFrame == 0)				{CountDir = CountUp;}
		if		(CountDir == CountUp)		{ iFrame ++;}
     f76:	90 91 5a 01 	lds	r25, 0x015A	; 0x80015a <CountDir>
     f7a:	91 11       	cpse	r25, r1
     f7c:	0a c0       	rjmp	.+20     	; 0xf92 <L_5282+0x21a>
     f7e:	8f 5f       	subi	r24, 0xFF	; 255
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:159
		else								{ iFrame --;}
     f80:	80 93 5c 01 	sts	0x015C, r24	; 0x80015c <iFrame>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:160
		FrameDelay = 20;
     f84:	84 e1       	ldi	r24, 0x14	; 20
     f86:	01 ce       	rjmp	.-1022   	; 0xb8a <main+0x2da>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:157
	else if(Status == 12)  {
		for (iLed = 0; iLed<NUM_LEDS; iLed++) { leds[iLed] = CRGB::Black; }
		for (iLed = iFrame; iLed < (iFrame + 2); iLed++) { leds[iLed] = CRGB::Blue;}
		for (iLed = NUM_LEDS - 1 - iFrame; iLed > (NUM_LEDS - 3 - iFrame); iLed--) { leds[iLed] = CRGB::Blue;}
		if		(iFrame + 2 == NUM_LEDS/2)	{CountDir = CountDown;}
		else if	(iFrame == 0)				{CountDir = CountUp;}
     f88:	81 11       	cpse	r24, r1
     f8a:	f5 cf       	rjmp	.-22     	; 0xf76 <L_5282+0x1fe>
     f8c:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <CountDir>
     f90:	f2 cf       	rjmp	.-28     	; 0xf76 <L_5282+0x1fe>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:159
		if		(CountDir == CountUp)		{ iFrame ++;}
		else								{ iFrame --;}
     f92:	81 50       	subi	r24, 0x01	; 1
     f94:	f5 cf       	rjmp	.-22     	; 0xf80 <L_5282+0x208>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:163
		FrameDelay = 20;
  	}
	//////////////////// STATUS 13 ///////////////////////
	else if(Status == 13)  {
     f96:	8d 30       	cpi	r24, 0x0D	; 13
     f98:	09 f0       	breq	.+2      	; 0xf9c <L_5282+0x224>
     f9a:	ab c0       	rjmp	.+342    	; 0x10f2 <L_5282+0x37a>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:164
		if(ResetStatus == 1) {	
     f9c:	91 30       	cpi	r25, 0x01	; 1
     f9e:	59 f4       	brne	.+22     	; 0xfb6 <L_5282+0x23e>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:165
			ColorLeds(CRGB::Blue);
     fa0:	60 e0       	ldi	r22, 0x00	; 0
     fa2:	70 e0       	ldi	r23, 0x00	; 0
     fa4:	8f ef       	ldi	r24, 0xFF	; 255
     fa6:	e1 db       	rcall	.-2110   	; 0x76a <ColorLeds(CRGB)>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:166
			xFrame = NUM_LEDS;
     fa8:	8c e1       	ldi	r24, 0x1C	; 28
     faa:	80 93 5b 01 	sts	0x015B, r24	; 0x80015b <xFrame>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:167
			iFrame = 0;
     fae:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <iFrame>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:168
			CountDir = CountUp;
     fb2:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <CountDir>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:171
			ResetStatus = 0;
		}
		if(xFrame == 255)	{
     fb6:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <xFrame>
     fba:	9f 3f       	cpi	r25, 0xFF	; 255
     fbc:	91 f4       	brne	.+36     	; 0xfe2 <L_5282+0x26a>
     fbe:	e4 ef       	ldi	r30, 0xF4	; 244
     fc0:	f0 e0       	ldi	r31, 0x00	; 0
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212

    /// Allow assignment from 32-bit (really 24-bit) 0xRRGGBB color code
    /// @param colorcode a packed 24 bit color code
    inline CRGB& operator= (const uint32_t colorcode) __attribute__((always_inline))
    {
        r = (colorcode >> 16) & 0xFF;
     fc2:	8f ef       	ldi	r24, 0xFF	; 255
     fc4:	80 83       	st	Z, r24
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:213
        g = (colorcode >>  8) & 0xFF;
     fc6:	81 83       	std	Z+1, r24	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
        b = (colorcode >>  0) & 0xFF;
     fc8:	12 82       	std	Z+2, r1	; 0x02
     fca:	33 96       	adiw	r30, 0x03	; 3
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:172
			for (iLed=0; iLed < NUM_LEDS; iLed++) 	{ leds[iLed] = CRGB::Yellow;}
     fcc:	51 e0       	ldi	r21, 0x01	; 1
     fce:	e8 34       	cpi	r30, 0x48	; 72
     fd0:	f5 07       	cpc	r31, r21
     fd2:	c1 f7       	brne	.-16     	; 0xfc4 <L_5282+0x24c>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:173
			CountDir = CountDown;
     fd4:	81 e0       	ldi	r24, 0x01	; 1
     fd6:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <CountDir>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:174
			xFrame = 0;
     fda:	10 92 5b 01 	sts	0x015B, r1	; 0x80015b <xFrame>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:193
				iFrame = 0;
			}
			else{
				leds[iFrame] = CRGB::Blue;
				xFrame = xFrame + 1;
				iFrame = NUM_LEDS - 1;
     fde:	8b e1       	ldi	r24, 0x1B	; 27
     fe0:	84 c0       	rjmp	.+264    	; 0x10ea <L_5282+0x372>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:177
			for (iLed=0; iLed < NUM_LEDS; iLed++) 	{ leds[iLed] = CRGB::Yellow;}
			CountDir = CountDown;
			xFrame = 0;
			iFrame = NUM_LEDS - 1;
		}
		else if(xFrame == NUM_LEDS)	{
     fe2:	9c 31       	cpi	r25, 0x1C	; 28
     fe4:	a1 f4       	brne	.+40     	; 0x100e <L_5282+0x296>
     fe6:	e4 ef       	ldi	r30, 0xF4	; 244
     fe8:	f0 e0       	ldi	r31, 0x00	; 0
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
     fea:	8f ef       	ldi	r24, 0xFF	; 255
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212

    /// Allow assignment from 32-bit (really 24-bit) 0xRRGGBB color code
    /// @param colorcode a packed 24 bit color code
    inline CRGB& operator= (const uint32_t colorcode) __attribute__((always_inline))
    {
        r = (colorcode >> 16) & 0xFF;
     fec:	10 82       	st	Z, r1
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:213
        g = (colorcode >>  8) & 0xFF;
     fee:	11 82       	std	Z+1, r1	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
        b = (colorcode >>  0) & 0xFF;
     ff0:	82 83       	std	Z+2, r24	; 0x02
     ff2:	33 96       	adiw	r30, 0x03	; 3
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:178
			for (iLed=0; iLed < NUM_LEDS; iLed++) 	{ leds[iLed] = CRGB::Blue;}
     ff4:	a8 e4       	ldi	r26, 0x48	; 72
     ff6:	b1 e0       	ldi	r27, 0x01	; 1
     ff8:	ae 17       	cp	r26, r30
     ffa:	bf 07       	cpc	r27, r31
     ffc:	b9 f7       	brne	.-18     	; 0xfec <L_5282+0x274>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:179
			CountDir = CountUp;
     ffe:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <CountDir>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:180
			xFrame = NUM_LEDS - 1;
    1002:	8b e1       	ldi	r24, 0x1B	; 27
    1004:	80 93 5b 01 	sts	0x015B, r24	; 0x80015b <xFrame>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:188
		else if(iFrame == xFrame)	{
			for (iLed=0; iLed < iFrame; iLed++) 	{ leds[iLed] = CRGB::Blue;}
			for (; iLed < NUM_LEDS; iLed++) 		{ leds[iLed] = CRGB::Yellow;}	
			if(CountDir == CountUp)	{
				xFrame = xFrame - 1;
				iFrame = 0;
    1008:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <iFrame>
    100c:	70 c0       	rjmp	.+224    	; 0x10ee <L_5282+0x376>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:183
			for (iLed=0; iLed < NUM_LEDS; iLed++) 	{ leds[iLed] = CRGB::Blue;}
			CountDir = CountUp;
			xFrame = NUM_LEDS - 1;
			iFrame = 0;
		}	
		else if(iFrame == xFrame)	{
    100e:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <iFrame>
    1012:	20 91 5a 01 	lds	r18, 0x015A	; 0x80015a <CountDir>
    1016:	98 13       	cpse	r25, r24
    1018:	33 c0       	rjmp	.+102    	; 0x1080 <L_5282+0x308>
    101a:	e4 ef       	ldi	r30, 0xF4	; 244
    101c:	f0 e0       	ldi	r31, 0x00	; 0
main():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:184
			for (iLed=0; iLed < iFrame; iLed++) 	{ leds[iLed] = CRGB::Blue;}
    101e:	90 e0       	ldi	r25, 0x00	; 0
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
    1020:	3f ef       	ldi	r19, 0xFF	; 255
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:184
    1022:	89 13       	cpse	r24, r25
    1024:	10 c0       	rjmp	.+32     	; 0x1046 <L_5282+0x2ce>
    1026:	b3 e0       	ldi	r27, 0x03	; 3
    1028:	8b 9f       	mul	r24, r27
    102a:	f0 01       	movw	r30, r0
    102c:	11 24       	eor	r1, r1
    102e:	ec 50       	subi	r30, 0x0C	; 12
    1030:	ff 4f       	sbci	r31, 0xFF	; 255
    1032:	38 2f       	mov	r19, r24
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212

    /// Allow assignment from 32-bit (really 24-bit) 0xRRGGBB color code
    /// @param colorcode a packed 24 bit color code
    inline CRGB& operator= (const uint32_t colorcode) __attribute__((always_inline))
    {
        r = (colorcode >> 16) & 0xFF;
    1034:	4f ef       	ldi	r20, 0xFF	; 255
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:185
			for (; iLed < NUM_LEDS; iLed++) 		{ leds[iLed] = CRGB::Yellow;}	
    1036:	3c 31       	cpi	r19, 0x1C	; 28
    1038:	61 f0       	breq	.+24     	; 0x1052 <L_5282+0x2da>
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212
    103a:	40 83       	st	Z, r20
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:213
        g = (colorcode >>  8) & 0xFF;
    103c:	41 83       	std	Z+1, r20	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
        b = (colorcode >>  0) & 0xFF;
    103e:	12 82       	std	Z+2, r1	; 0x02
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:185
    1040:	3f 5f       	subi	r19, 0xFF	; 255
    1042:	33 96       	adiw	r30, 0x03	; 3
    1044:	f8 cf       	rjmp	.-16     	; 0x1036 <L_5282+0x2be>
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212

    /// Allow assignment from 32-bit (really 24-bit) 0xRRGGBB color code
    /// @param colorcode a packed 24 bit color code
    inline CRGB& operator= (const uint32_t colorcode) __attribute__((always_inline))
    {
        r = (colorcode >> 16) & 0xFF;
    1046:	10 82       	st	Z, r1
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:213
        g = (colorcode >>  8) & 0xFF;
    1048:	11 82       	std	Z+1, r1	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
        b = (colorcode >>  0) & 0xFF;
    104a:	32 83       	std	Z+2, r19	; 0x02
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:184
			CountDir = CountUp;
			xFrame = NUM_LEDS - 1;
			iFrame = 0;
		}	
		else if(iFrame == xFrame)	{
			for (iLed=0; iLed < iFrame; iLed++) 	{ leds[iLed] = CRGB::Blue;}
    104c:	9f 5f       	subi	r25, 0xFF	; 255
    104e:	33 96       	adiw	r30, 0x03	; 3
    1050:	e8 cf       	rjmp	.-48     	; 0x1022 <L_5282+0x2aa>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:186
			for (; iLed < NUM_LEDS; iLed++) 		{ leds[iLed] = CRGB::Yellow;}	
			if(CountDir == CountUp)	{
    1052:	21 11       	cpse	r18, r1
    1054:	04 c0       	rjmp	.+8      	; 0x105e <L_5282+0x2e6>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:187
				xFrame = xFrame - 1;
    1056:	91 50       	subi	r25, 0x01	; 1
    1058:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <xFrame>
    105c:	d5 cf       	rjmp	.-86     	; 0x1008 <L_5282+0x290>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:191
				iFrame = 0;
			}
			else{
				leds[iFrame] = CRGB::Blue;
    105e:	28 2f       	mov	r18, r24
    1060:	30 e0       	ldi	r19, 0x00	; 0
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212

    /// Allow assignment from 32-bit (really 24-bit) 0xRRGGBB color code
    /// @param colorcode a packed 24 bit color code
    inline CRGB& operator= (const uint32_t colorcode) __attribute__((always_inline))
    {
        r = (colorcode >> 16) & 0xFF;
    1062:	f9 01       	movw	r30, r18
    1064:	ee 0f       	add	r30, r30
    1066:	ff 1f       	adc	r31, r31
    1068:	e2 0f       	add	r30, r18
    106a:	f3 1f       	adc	r31, r19
    106c:	ec 50       	subi	r30, 0x0C	; 12
    106e:	ff 4f       	sbci	r31, 0xFF	; 255
    1070:	10 82       	st	Z, r1
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:213
        g = (colorcode >>  8) & 0xFF;
    1072:	11 82       	std	Z+1, r1	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
        b = (colorcode >>  0) & 0xFF;
    1074:	8f ef       	ldi	r24, 0xFF	; 255
    1076:	82 83       	std	Z+2, r24	; 0x02
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:192
				xFrame = xFrame + 1;
    1078:	9f 5f       	subi	r25, 0xFF	; 255
    107a:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <xFrame>
    107e:	af cf       	rjmp	.-162    	; 0xfde <L_5282+0x266>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:196
				iFrame = NUM_LEDS - 1;
			}
		}
		else if(CountDir == CountUp)	{
    1080:	22 23       	and	r18, r18
    1082:	61 f0       	breq	.+24     	; 0x109c <L_5282+0x324>
    1084:	e5 e4       	ldi	r30, 0x45	; 69
    1086:	f1 e0       	ldi	r31, 0x01	; 1
main():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:202
			for (iLed=0; iLed < iFrame; iLed++) { leds[iLed] = CRGB::Blue;	}
			leds[iFrame] = CRGB::Yellow;	
			iFrame++;
		}
		else	{
			for (iLed=NUM_LEDS - 1; iLed > iFrame; iLed--) { leds[iLed] = CRGB::Yellow; }
    1088:	9b e1       	ldi	r25, 0x1B	; 27
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212

    /// Allow assignment from 32-bit (really 24-bit) 0xRRGGBB color code
    /// @param colorcode a packed 24 bit color code
    inline CRGB& operator= (const uint32_t colorcode) __attribute__((always_inline))
    {
        r = (colorcode >> 16) & 0xFF;
    108a:	2f ef       	ldi	r18, 0xFF	; 255
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:202
    108c:	89 17       	cp	r24, r25
    108e:	f8 f4       	brcc	.+62     	; 0x10ce <L_5282+0x356>
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212
    1090:	20 83       	st	Z, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:213
        g = (colorcode >>  8) & 0xFF;
    1092:	21 83       	std	Z+1, r18	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
        b = (colorcode >>  0) & 0xFF;
    1094:	12 82       	std	Z+2, r1	; 0x02
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:202
    1096:	91 50       	subi	r25, 0x01	; 1
    1098:	33 97       	sbiw	r30, 0x03	; 3
    109a:	f8 cf       	rjmp	.-16     	; 0x108c <L_5282+0x314>
    109c:	e4 ef       	ldi	r30, 0xF4	; 244
    109e:	f0 e0       	ldi	r31, 0x00	; 0
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
    10a0:	9f ef       	ldi	r25, 0xFF	; 255
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:197
				xFrame = xFrame + 1;
				iFrame = NUM_LEDS - 1;
			}
		}
		else if(CountDir == CountUp)	{
			for (iLed=0; iLed < iFrame; iLed++) { leds[iLed] = CRGB::Blue;	}
    10a2:	82 17       	cp	r24, r18
    10a4:	31 f0       	breq	.+12     	; 0x10b2 <L_5282+0x33a>
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212

    /// Allow assignment from 32-bit (really 24-bit) 0xRRGGBB color code
    /// @param colorcode a packed 24 bit color code
    inline CRGB& operator= (const uint32_t colorcode) __attribute__((always_inline))
    {
        r = (colorcode >> 16) & 0xFF;
    10a6:	10 82       	st	Z, r1
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:213
        g = (colorcode >>  8) & 0xFF;
    10a8:	11 82       	std	Z+1, r1	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
        b = (colorcode >>  0) & 0xFF;
    10aa:	92 83       	std	Z+2, r25	; 0x02
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:197
    10ac:	2f 5f       	subi	r18, 0xFF	; 255
    10ae:	33 96       	adiw	r30, 0x03	; 3
    10b0:	f8 cf       	rjmp	.-16     	; 0x10a2 <L_5282+0x32a>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:198
			leds[iFrame] = CRGB::Yellow;	
    10b2:	28 2f       	mov	r18, r24
    10b4:	30 e0       	ldi	r19, 0x00	; 0
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212

    /// Allow assignment from 32-bit (really 24-bit) 0xRRGGBB color code
    /// @param colorcode a packed 24 bit color code
    inline CRGB& operator= (const uint32_t colorcode) __attribute__((always_inline))
    {
        r = (colorcode >> 16) & 0xFF;
    10b6:	f9 01       	movw	r30, r18
    10b8:	ee 0f       	add	r30, r30
    10ba:	ff 1f       	adc	r31, r31
    10bc:	e2 0f       	add	r30, r18
    10be:	f3 1f       	adc	r31, r19
    10c0:	ec 50       	subi	r30, 0x0C	; 12
    10c2:	ff 4f       	sbci	r31, 0xFF	; 255
    10c4:	9f ef       	ldi	r25, 0xFF	; 255
    10c6:	90 83       	st	Z, r25
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:213
        g = (colorcode >>  8) & 0xFF;
    10c8:	91 83       	std	Z+1, r25	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
        b = (colorcode >>  0) & 0xFF;
    10ca:	12 82       	std	Z+2, r1	; 0x02
    10cc:	38 cd       	rjmp	.-1424   	; 0xb3e <main+0x28e>
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:203
			iFrame++;
		}
		else	{
			for (iLed=NUM_LEDS - 1; iLed > iFrame; iLed--) { leds[iLed] = CRGB::Yellow; }
			leds[iFrame] = CRGB::Blue;
    10ce:	28 2f       	mov	r18, r24
    10d0:	30 e0       	ldi	r19, 0x00	; 0
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212

    /// Allow assignment from 32-bit (really 24-bit) 0xRRGGBB color code
    /// @param colorcode a packed 24 bit color code
    inline CRGB& operator= (const uint32_t colorcode) __attribute__((always_inline))
    {
        r = (colorcode >> 16) & 0xFF;
    10d2:	f9 01       	movw	r30, r18
    10d4:	ee 0f       	add	r30, r30
    10d6:	ff 1f       	adc	r31, r31
    10d8:	e2 0f       	add	r30, r18
    10da:	f3 1f       	adc	r31, r19
    10dc:	ec 50       	subi	r30, 0x0C	; 12
    10de:	ff 4f       	sbci	r31, 0xFF	; 255
    10e0:	10 82       	st	Z, r1
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:213
        g = (colorcode >>  8) & 0xFF;
    10e2:	11 82       	std	Z+1, r1	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
        b = (colorcode >>  0) & 0xFF;
    10e4:	9f ef       	ldi	r25, 0xFF	; 255
    10e6:	92 83       	std	Z+2, r25	; 0x02
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:93
		else 					{ColorLeds(CRGB::Purple);}
		FastLED.setBrightness(iFrame);
		if		(iFrame == BRIGHTNESS)		{ CountDir = CountDown;}
		else if	(iFrame == 0)             	{ CountDir = CountUp;}
		if		(CountDir == CountUp)		{ iFrame ++;}
		else								{ iFrame --;}
    10e8:	81 50       	subi	r24, 0x01	; 1
    10ea:	80 93 5c 01 	sts	0x015C, r24	; 0x80015c <iFrame>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:121
	//////////////////// STATUS 8 ///////////////////////
  	else if(Status == 8)  {
		fill_rainbow_circular(leds,NUM_LEDS,iFrame);
		//FastLED.setBrightness(BRIGHTNESS);
		iFrame += 10;
		FrameDelay = 5;
    10ee:	85 e0       	ldi	r24, 0x05	; 5
    10f0:	4c cd       	rjmp	.-1384   	; 0xb8a <main+0x2da>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:209
			iFrame--;
		}
		FrameDelay = 5;
  	}	
  	//////////////////// STATUS 14 ///////////////////////
  	else if(Status == 14)  {
    10f2:	8e 30       	cpi	r24, 0x0E	; 14
    10f4:	29 f5       	brne	.+74     	; 0x1140 <L_5282+0x3c8>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:211
		for (iLed=0; iLed<NUM_LEDS; iLed++) {
			if(iLed + iFrame >= NUM_LEDS)	{ leds[iLed] = CRGB(0, 0, Tri[iLed + iFrame - NUM_LEDS]);}
    10f6:	60 91 5c 01 	lds	r22, 0x015C	; 0x80015c <iFrame>
    10fa:	e4 ef       	ldi	r30, 0xF4	; 244
    10fc:	f0 e0       	ldi	r31, 0x00	; 0
    10fe:	30 e0       	ldi	r19, 0x00	; 0
    1100:	20 e0       	ldi	r18, 0x00	; 0
    1102:	46 2f       	mov	r20, r22
    1104:	50 e0       	ldi	r21, 0x00	; 0
    1106:	ca 01       	movw	r24, r20
    1108:	82 0f       	add	r24, r18
    110a:	93 1f       	adc	r25, r19
    110c:	8c 31       	cpi	r24, 0x1C	; 28
    110e:	91 05       	cpc	r25, r1
    1110:	a0 f0       	brcs	.+40     	; 0x113a <L_5282+0x3c2>
    1112:	82 59       	subi	r24, 0x92	; 146
    1114:	9f 4f       	sbci	r25, 0xFF	; 255
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:212
			else									{ leds[iLed] = CRGB(0, 0, Tri[iLed + iFrame]);} 
    1116:	dc 01       	movw	r26, r24
    1118:	8c 91       	ld	r24, X
    111a:	10 82       	st	Z, r1
    111c:	11 82       	std	Z+1, r1	; 0x01
    111e:	82 83       	std	Z+2, r24	; 0x02
    1120:	2f 5f       	subi	r18, 0xFF	; 255
    1122:	3f 4f       	sbci	r19, 0xFF	; 255
    1124:	33 96       	adiw	r30, 0x03	; 3
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:210
		}
		FrameDelay = 5;
  	}	
  	//////////////////// STATUS 14 ///////////////////////
  	else if(Status == 14)  {
		for (iLed=0; iLed<NUM_LEDS; iLed++) {
    1126:	2c 31       	cpi	r18, 0x1C	; 28
    1128:	31 05       	cpc	r19, r1
    112a:	69 f7       	brne	.-38     	; 0x1106 <L_5282+0x38e>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:214
			if(iLed + iFrame >= NUM_LEDS)	{ leds[iLed] = CRGB(0, 0, Tri[iLed + iFrame - NUM_LEDS]);}
			else									{ leds[iLed] = CRGB(0, 0, Tri[iLed + iFrame]);} 
		}
		if  (iFrame == NUM_LEDS - 1)    { iFrame = 0;}
    112c:	6b 31       	cpi	r22, 0x1B	; 27
    112e:	09 f4       	brne	.+2      	; 0x1132 <L_5282+0x3ba>
    1130:	a4 ce       	rjmp	.-696    	; 0xe7a <L_5282+0x102>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:215
		else                            { iFrame++; }
    1132:	6f 5f       	subi	r22, 0xFF	; 255
    1134:	60 93 5c 01 	sts	0x015C, r22	; 0x80015c <iFrame>
    1138:	a6 ce       	rjmp	.-692    	; 0xe86 <L_5282+0x10e>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:212
  	}	
  	//////////////////// STATUS 14 ///////////////////////
  	else if(Status == 14)  {
		for (iLed=0; iLed<NUM_LEDS; iLed++) {
			if(iLed + iFrame >= NUM_LEDS)	{ leds[iLed] = CRGB(0, 0, Tri[iLed + iFrame - NUM_LEDS]);}
			else									{ leds[iLed] = CRGB(0, 0, Tri[iLed + iFrame]);} 
    113a:	86 57       	subi	r24, 0x76	; 118
    113c:	9f 4f       	sbci	r25, 0xFF	; 255
    113e:	eb cf       	rjmp	.-42     	; 0x1116 <L_5282+0x39e>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:219
		if  (iFrame == NUM_LEDS - 1)    { iFrame = 0;}
		else                            { iFrame++; }
		FrameDelay = 15;
  	}
  	//////////////////// STATUS 15 ///////////////////////
  	else if(Status == 15)  {
    1140:	8f 30       	cpi	r24, 0x0F	; 15
    1142:	69 f4       	brne	.+26     	; 0x115e <L_5282+0x3e6>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:220
		if(ResetStatus)	{
    1144:	91 11       	cpse	r25, r1
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:221
			RampInit();
    1146:	05 db       	rcall	.-2550   	; 0x752 <RampInit()>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:401
		Vect[3] = 255;
		Vect[NUM_LEDS/2] = 255;
		Vect[NUM_LEDS/2 + 1] = 255;
		Vect[NUM_LEDS/2 + 2] = 255;
		Vect[NUM_LEDS/2 + 3] = 255;
		ShiftLed(BlueDD);
    1148:	82 e0       	ldi	r24, 0x02	; 2
    114a:	19 db       	rcall	.-2510   	; 0x77e <ShiftLed(unsigned char)>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:402
		if  (iFrame == NUM_LEDS - 1)    { iFrame = 0;}
    114c:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <iFrame>
    1150:	8b 31       	cpi	r24, 0x1B	; 27
    1152:	09 f4       	brne	.+2      	; 0x1156 <L_5282+0x3de>
    1154:	92 ce       	rjmp	.-732    	; 0xe7a <L_5282+0x102>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:403
		else                            { iFrame++; }
    1156:	8f 5f       	subi	r24, 0xFF	; 255
    1158:	80 93 5c 01 	sts	0x015C, r24	; 0x80015c <iFrame>
    115c:	94 ce       	rjmp	.-728    	; 0xe86 <L_5282+0x10e>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:230
		if  (iFrame == NUM_LEDS - 1)    { iFrame = 0;}
		else                            { iFrame++; }
		FrameDelay = 15;
  	}
  	//////////////////// STATUS 16 ///////////////////////
  	else if(Status == 16)  {
    115e:	80 31       	cpi	r24, 0x10	; 16
    1160:	09 f0       	breq	.+2      	; 0x1164 <L_5282+0x3ec>
    1162:	47 c2       	rjmp	.+1166   	; 0x15f2 <L_5282+0x87a>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:231
		if(ResetStatus)	{
    1164:	91 11       	cpse	r25, r1
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:232
			RampInit();
    1166:	f5 da       	rcall	.-2582   	; 0x752 <RampInit()>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:235
			ResetStatus = 0;
		}
		if(xFrame == 0)	{
    1168:	80 91 5b 01 	lds	r24, 0x015B	; 0x80015b <xFrame>
    116c:	81 11       	cpse	r24, r1
    116e:	12 c0       	rjmp	.+36     	; 0x1194 <L_5282+0x41c>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:236
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) { leds[iLed] = CRGB(0,255,0); }
    1170:	20 91 5c 01 	lds	r18, 0x015C	; 0x80015c <iFrame>
    1174:	e5 e4       	ldi	r30, 0x45	; 69
    1176:	f1 e0       	ldi	r31, 0x01	; 1
main():
    1178:	8b e1       	ldi	r24, 0x1B	; 27
loop():
    117a:	9f ef       	ldi	r25, 0xFF	; 255
    117c:	28 17       	cp	r18, r24
    117e:	30 f4       	brcc	.+12     	; 0x118c <L_5282+0x414>
    1180:	10 82       	st	Z, r1
    1182:	91 83       	std	Z+1, r25	; 0x01
    1184:	12 82       	std	Z+2, r1	; 0x02
    1186:	81 50       	subi	r24, 0x01	; 1
    1188:	33 97       	sbiw	r30, 0x03	; 3
    118a:	f8 cf       	rjmp	.-16     	; 0x117c <L_5282+0x404>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:237
			xFrame++;
    118c:	81 e0       	ldi	r24, 0x01	; 1
    118e:	80 93 5b 01 	sts	0x015B, r24	; 0x80015b <xFrame>
    1192:	73 ce       	rjmp	.-794    	; 0xe7a <L_5282+0x102>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:241
			iFrame = 0;
		}
		//Fade Blue
		else if(xFrame ==1)	{
    1194:	81 30       	cpi	r24, 0x01	; 1
    1196:	79 f5       	brne	.+94     	; 0x11f6 <L_5282+0x47e>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:242
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    1198:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <iFrame>
    119c:	e5 e4       	ldi	r30, 0x45	; 69
    119e:	f1 e0       	ldi	r31, 0x01	; 1
main():
    11a0:	9b e1       	ldi	r25, 0x1B	; 27
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:243
				leds[iLed] = CRGB(0,255,0);
    11a2:	2f ef       	ldi	r18, 0xFF	; 255
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:242
			xFrame++;
			iFrame = 0;
		}
		//Fade Blue
		else if(xFrame ==1)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    11a4:	89 17       	cp	r24, r25
    11a6:	08 f1       	brcs	.+66     	; 0x11ea <L_5282+0x472>
    11a8:	98 2f       	mov	r25, r24
    11aa:	8c 31       	cpi	r24, 0x1C	; 28
    11ac:	08 f0       	brcs	.+2      	; 0x11b0 <L_5282+0x438>
    11ae:	9b e1       	ldi	r25, 0x1B	; 27
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:246
				leds[iLed] = CRGB(0,255,0);
			}		
			for (;iLed != 255; iLed--) {
				leds[iLed] = CRGB(0, 255, Vect[iFrame - iLed]);
    11b0:	28 2f       	mov	r18, r24
    11b2:	30 e0       	ldi	r19, 0x00	; 0
    11b4:	53 e0       	ldi	r21, 0x03	; 3
    11b6:	4f ef       	ldi	r20, 0xFF	; 255
    11b8:	f9 01       	movw	r30, r18
    11ba:	e9 1b       	sub	r30, r25
    11bc:	f1 09       	sbc	r31, r1
    11be:	e8 52       	subi	r30, 0x28	; 40
    11c0:	ff 4f       	sbci	r31, 0xFF	; 255
    11c2:	60 81       	ld	r22, Z
    11c4:	95 9f       	mul	r25, r21
    11c6:	f0 01       	movw	r30, r0
    11c8:	11 24       	eor	r1, r1
    11ca:	ec 50       	subi	r30, 0x0C	; 12
    11cc:	ff 4f       	sbci	r31, 0xFF	; 255
    11ce:	10 82       	st	Z, r1
    11d0:	41 83       	std	Z+1, r20	; 0x01
    11d2:	62 83       	std	Z+2, r22	; 0x02
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:245
		//Fade Blue
		else if(xFrame ==1)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(0,255,0);
			}		
			for (;iLed != 255; iLed--) {
    11d4:	91 50       	subi	r25, 0x01	; 1
    11d6:	80 f7       	brcc	.-32     	; 0x11b8 <L_5282+0x440>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:248
				leds[iLed] = CRGB(0, 255, Vect[iFrame - iLed]);
			}			
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
    11d8:	8b 31       	cpi	r24, 0x1B	; 27
    11da:	09 f0       	breq	.+2      	; 0x11de <L_5282+0x466>
    11dc:	bc cf       	rjmp	.-136    	; 0x1156 <L_5282+0x3de>
    11de:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <iFrame>
    11e2:	82 e0       	ldi	r24, 0x02	; 2
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:369
				leds[iLed] = CRGB(Vect[iLed - iFrame], 255, 0);
			}
			for (;iLed != 255; iLed--) {
				leds[iLed] = CRGB(0, 255, 0);
			}
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame = 1;}
    11e4:	80 93 5b 01 	sts	0x015B, r24	; 0x80015b <xFrame>
    11e8:	4e ce       	rjmp	.-868    	; 0xe86 <L_5282+0x10e>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:243
			iFrame = 0;
		}
		//Fade Blue
		else if(xFrame ==1)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(0,255,0);
    11ea:	10 82       	st	Z, r1
    11ec:	21 83       	std	Z+1, r18	; 0x01
    11ee:	12 82       	std	Z+2, r1	; 0x02
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:242
			xFrame++;
			iFrame = 0;
		}
		//Fade Blue
		else if(xFrame ==1)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    11f0:	91 50       	subi	r25, 0x01	; 1
    11f2:	33 97       	sbiw	r30, 0x03	; 3
    11f4:	d7 cf       	rjmp	.-82     	; 0x11a4 <L_5282+0x42c>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:252
			}			
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Fill Blue
		else if(xFrame == 2)	{
    11f6:	82 30       	cpi	r24, 0x02	; 2
    11f8:	59 f5       	brne	.+86     	; 0x1250 <L_5282+0x4d8>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:253
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    11fa:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <iFrame>
    11fe:	a8 2f       	mov	r26, r24
    1200:	b0 e0       	ldi	r27, 0x00	; 0
    1202:	a8 52       	subi	r26, 0x28	; 40
    1204:	bf 4f       	sbci	r27, 0xFF	; 255
    1206:	e5 e4       	ldi	r30, 0x45	; 69
    1208:	f1 e0       	ldi	r31, 0x01	; 1
main():
    120a:	9b e1       	ldi	r25, 0x1B	; 27
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:254
				leds[iLed] = CRGB(0, 255, Vect[NUM_LEDS - 1 - iLed + iFrame]);
    120c:	3f ef       	ldi	r19, 0xFF	; 255
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:253
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Fill Blue
		else if(xFrame == 2)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    120e:	89 17       	cp	r24, r25
    1210:	38 f4       	brcc	.+14     	; 0x1220 <L_5282+0x4a8>
    1212:	91 50       	subi	r25, 0x01	; 1
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:254
				leds[iLed] = CRGB(0, 255, Vect[NUM_LEDS - 1 - iLed + iFrame]);
    1214:	2d 91       	ld	r18, X+
    1216:	10 82       	st	Z, r1
    1218:	31 83       	std	Z+1, r19	; 0x01
    121a:	22 83       	std	Z+2, r18	; 0x02
    121c:	33 97       	sbiw	r30, 0x03	; 3
    121e:	f7 cf       	rjmp	.-18     	; 0x120e <L_5282+0x496>
    1220:	98 2f       	mov	r25, r24
    1222:	8c 31       	cpi	r24, 0x1C	; 28
    1224:	08 f0       	brcs	.+2      	; 0x1228 <L_5282+0x4b0>
    1226:	9b e1       	ldi	r25, 0x1B	; 27
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:257
			}
			for (;iLed != 255; iLed--) {
				leds[iLed] = CRGB(0, 255, 255);
    1228:	23 e0       	ldi	r18, 0x03	; 3
    122a:	3f ef       	ldi	r19, 0xFF	; 255
    122c:	92 9f       	mul	r25, r18
    122e:	f0 01       	movw	r30, r0
    1230:	11 24       	eor	r1, r1
    1232:	ec 50       	subi	r30, 0x0C	; 12
    1234:	ff 4f       	sbci	r31, 0xFF	; 255
    1236:	10 82       	st	Z, r1
    1238:	31 83       	std	Z+1, r19	; 0x01
    123a:	32 83       	std	Z+2, r19	; 0x02
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:256
		//Fill Blue
		else if(xFrame == 2)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(0, 255, Vect[NUM_LEDS - 1 - iLed + iFrame]);
			}
			for (;iLed != 255; iLed--) {
    123c:	91 50       	subi	r25, 0x01	; 1
    123e:	b0 f7       	brcc	.-20     	; 0x122c <L_5282+0x4b4>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:259
				leds[iLed] = CRGB(0, 255, 255);
			}
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
    1240:	8b 31       	cpi	r24, 0x1B	; 27
    1242:	09 f0       	breq	.+2      	; 0x1246 <L_5282+0x4ce>
    1244:	88 cf       	rjmp	.-240    	; 0x1156 <L_5282+0x3de>
    1246:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <iFrame>
    124a:	20 93 5b 01 	sts	0x015B, r18	; 0x80015b <xFrame>
    124e:	1b ce       	rjmp	.-970    	; 0xe86 <L_5282+0x10e>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:263
			else						{iFrame++;}		
		}
		//Fade Green out
		else if(xFrame == 3)	{
    1250:	83 30       	cpi	r24, 0x03	; 3
    1252:	79 f5       	brne	.+94     	; 0x12b2 <L_5282+0x53a>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:264
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    1254:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <iFrame>
    1258:	e5 e4       	ldi	r30, 0x45	; 69
    125a:	f1 e0       	ldi	r31, 0x01	; 1
main():
    125c:	9b e1       	ldi	r25, 0x1B	; 27
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:265
				leds[iLed] = CRGB(0, 255, 255);
    125e:	2f ef       	ldi	r18, 0xFF	; 255
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:264
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Fade Green out
		else if(xFrame == 3)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    1260:	89 17       	cp	r24, r25
    1262:	08 f1       	brcs	.+66     	; 0x12a6 <L_5282+0x52e>
    1264:	98 2f       	mov	r25, r24
    1266:	8c 31       	cpi	r24, 0x1C	; 28
    1268:	08 f0       	brcs	.+2      	; 0x126c <L_5282+0x4f4>
    126a:	9b e1       	ldi	r25, 0x1B	; 27
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:268
				leds[iLed] = CRGB(0, 255, 255);
			}
			for (;iLed != 255; iLed--) {
				leds[iLed] = CRGB(0, Vect[NUM_LEDS - 1 - iFrame + iLed], 255);
    126c:	2b e1       	ldi	r18, 0x1B	; 27
    126e:	30 e0       	ldi	r19, 0x00	; 0
    1270:	28 1b       	sub	r18, r24
    1272:	31 09       	sbc	r19, r1
    1274:	28 52       	subi	r18, 0x28	; 40
    1276:	3f 4f       	sbci	r19, 0xFF	; 255
    1278:	63 e0       	ldi	r22, 0x03	; 3
    127a:	4f ef       	ldi	r20, 0xFF	; 255
    127c:	f9 01       	movw	r30, r18
    127e:	e9 0f       	add	r30, r25
    1280:	f1 1d       	adc	r31, r1
    1282:	50 81       	ld	r21, Z
    1284:	96 9f       	mul	r25, r22
    1286:	f0 01       	movw	r30, r0
    1288:	11 24       	eor	r1, r1
    128a:	ec 50       	subi	r30, 0x0C	; 12
    128c:	ff 4f       	sbci	r31, 0xFF	; 255
    128e:	10 82       	st	Z, r1
    1290:	51 83       	std	Z+1, r21	; 0x01
    1292:	42 83       	std	Z+2, r20	; 0x02
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:267
		//Fade Green out
		else if(xFrame == 3)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(0, 255, 255);
			}
			for (;iLed != 255; iLed--) {
    1294:	91 50       	subi	r25, 0x01	; 1
    1296:	90 f7       	brcc	.-28     	; 0x127c <L_5282+0x504>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:270
				leds[iLed] = CRGB(0, Vect[NUM_LEDS - 1 - iFrame + iLed], 255);
			}
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
    1298:	8b 31       	cpi	r24, 0x1B	; 27
    129a:	09 f0       	breq	.+2      	; 0x129e <L_5282+0x526>
    129c:	5c cf       	rjmp	.-328    	; 0x1156 <L_5282+0x3de>
    129e:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <iFrame>
    12a2:	84 e0       	ldi	r24, 0x04	; 4
    12a4:	9f cf       	rjmp	.-194    	; 0x11e4 <L_5282+0x46c>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:265
			else						{iFrame++;}		
		}
		//Fade Green out
		else if(xFrame == 3)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(0, 255, 255);
    12a6:	10 82       	st	Z, r1
    12a8:	21 83       	std	Z+1, r18	; 0x01
    12aa:	22 83       	std	Z+2, r18	; 0x02
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:264
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Fade Green out
		else if(xFrame == 3)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    12ac:	91 50       	subi	r25, 0x01	; 1
    12ae:	33 97       	sbiw	r30, 0x03	; 3
    12b0:	d7 cf       	rjmp	.-82     	; 0x1260 <L_5282+0x4e8>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:274
			}
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Turn off green
		else if(xFrame == 4)	{
    12b2:	84 30       	cpi	r24, 0x04	; 4
    12b4:	59 f5       	brne	.+86     	; 0x130c <L_5282+0x594>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:275
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    12b6:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <iFrame>
    12ba:	d1 01       	movw	r26, r2
    12bc:	a8 1b       	sub	r26, r24
    12be:	b1 09       	sbc	r27, r1
    12c0:	a8 52       	subi	r26, 0x28	; 40
    12c2:	bf 4f       	sbci	r27, 0xFF	; 255
    12c4:	e5 e4       	ldi	r30, 0x45	; 69
    12c6:	f1 e0       	ldi	r31, 0x01	; 1
    12c8:	9b e1       	ldi	r25, 0x1B	; 27
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:276
				leds[iLed] = CRGB(0, Vect[iLed - iFrame], 255);
    12ca:	2f ef       	ldi	r18, 0xFF	; 255
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:275
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Turn off green
		else if(xFrame == 4)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    12cc:	89 17       	cp	r24, r25
    12ce:	38 f4       	brcc	.+14     	; 0x12de <L_5282+0x566>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:276
				leds[iLed] = CRGB(0, Vect[iLed - iFrame], 255);
    12d0:	3e 91       	ld	r19, -X
    12d2:	10 82       	st	Z, r1
    12d4:	31 83       	std	Z+1, r19	; 0x01
    12d6:	22 83       	std	Z+2, r18	; 0x02
    12d8:	91 50       	subi	r25, 0x01	; 1
    12da:	33 97       	sbiw	r30, 0x03	; 3
    12dc:	f7 cf       	rjmp	.-18     	; 0x12cc <L_5282+0x554>
    12de:	98 2f       	mov	r25, r24
    12e0:	8c 31       	cpi	r24, 0x1C	; 28
    12e2:	08 f0       	brcs	.+2      	; 0x12e6 <L_5282+0x56e>
    12e4:	9b e1       	ldi	r25, 0x1B	; 27
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:279
			}
			for (;iLed != 255; iLed--) {
				leds[iLed] = CRGB(0, 0, 255);
    12e6:	33 e0       	ldi	r19, 0x03	; 3
    12e8:	2f ef       	ldi	r18, 0xFF	; 255
    12ea:	93 9f       	mul	r25, r19
    12ec:	f0 01       	movw	r30, r0
    12ee:	11 24       	eor	r1, r1
    12f0:	ec 50       	subi	r30, 0x0C	; 12
    12f2:	ff 4f       	sbci	r31, 0xFF	; 255
    12f4:	10 82       	st	Z, r1
    12f6:	11 82       	std	Z+1, r1	; 0x01
    12f8:	22 83       	std	Z+2, r18	; 0x02
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:278
		//Turn off green
		else if(xFrame == 4)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(0, Vect[iLed - iFrame], 255);
			}
			for (;iLed != 255; iLed--) {
    12fa:	91 50       	subi	r25, 0x01	; 1
    12fc:	b0 f7       	brcc	.-20     	; 0x12ea <L_5282+0x572>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:281
				leds[iLed] = CRGB(0, 0, 255);
			}
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
    12fe:	8b 31       	cpi	r24, 0x1B	; 27
    1300:	09 f0       	breq	.+2      	; 0x1304 <L_5282+0x58c>
    1302:	29 cf       	rjmp	.-430    	; 0x1156 <L_5282+0x3de>
    1304:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <iFrame>
    1308:	85 e0       	ldi	r24, 0x05	; 5
    130a:	6c cf       	rjmp	.-296    	; 0x11e4 <L_5282+0x46c>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:285
			else						{iFrame++;}		
		}	
		//Fade red
		else if(xFrame == 5)	{
    130c:	85 30       	cpi	r24, 0x05	; 5
    130e:	69 f5       	brne	.+90     	; 0x136a <L_5282+0x5f2>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:286
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    1310:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <iFrame>
    1314:	e5 e4       	ldi	r30, 0x45	; 69
    1316:	f1 e0       	ldi	r31, 0x01	; 1
main():
    1318:	9b e1       	ldi	r25, 0x1B	; 27
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:287
				leds[iLed] = CRGB(0,0,255);
    131a:	2f ef       	ldi	r18, 0xFF	; 255
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:286
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}	
		//Fade red
		else if(xFrame == 5)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    131c:	89 17       	cp	r24, r25
    131e:	f8 f0       	brcs	.+62     	; 0x135e <L_5282+0x5e6>
    1320:	98 2f       	mov	r25, r24
    1322:	8c 31       	cpi	r24, 0x1C	; 28
    1324:	08 f0       	brcs	.+2      	; 0x1328 <L_5282+0x5b0>
    1326:	9b e1       	ldi	r25, 0x1B	; 27
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:290
				leds[iLed] = CRGB(0,0,255);
			}		
			for (;iLed != 255; iLed--) {
				leds[iLed] = CRGB(Vect[iFrame - iLed], 0, 255);
    1328:	63 e0       	ldi	r22, 0x03	; 3
    132a:	48 2f       	mov	r20, r24
    132c:	50 e0       	ldi	r21, 0x00	; 0
    132e:	2f ef       	ldi	r18, 0xFF	; 255
    1330:	96 9f       	mul	r25, r22
    1332:	f0 01       	movw	r30, r0
    1334:	11 24       	eor	r1, r1
    1336:	ec 50       	subi	r30, 0x0C	; 12
    1338:	ff 4f       	sbci	r31, 0xFF	; 255
    133a:	da 01       	movw	r26, r20
    133c:	a9 1b       	sub	r26, r25
    133e:	b1 09       	sbc	r27, r1
    1340:	a8 52       	subi	r26, 0x28	; 40
    1342:	bf 4f       	sbci	r27, 0xFF	; 255
    1344:	3c 91       	ld	r19, X
    1346:	30 83       	st	Z, r19
    1348:	11 82       	std	Z+1, r1	; 0x01
    134a:	22 83       	std	Z+2, r18	; 0x02
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:289
		//Fade red
		else if(xFrame == 5)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(0,0,255);
			}		
			for (;iLed != 255; iLed--) {
    134c:	91 50       	subi	r25, 0x01	; 1
    134e:	80 f7       	brcc	.-32     	; 0x1330 <L_5282+0x5b8>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:292
				leds[iLed] = CRGB(Vect[iFrame - iLed], 0, 255);
			}			
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
    1350:	8b 31       	cpi	r24, 0x1B	; 27
    1352:	09 f0       	breq	.+2      	; 0x1356 <L_5282+0x5de>
    1354:	00 cf       	rjmp	.-512    	; 0x1156 <L_5282+0x3de>
    1356:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <iFrame>
    135a:	86 e0       	ldi	r24, 0x06	; 6
    135c:	43 cf       	rjmp	.-378    	; 0x11e4 <L_5282+0x46c>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:287
			else						{iFrame++;}		
		}	
		//Fade red
		else if(xFrame == 5)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(0,0,255);
    135e:	10 82       	st	Z, r1
    1360:	11 82       	std	Z+1, r1	; 0x01
    1362:	22 83       	std	Z+2, r18	; 0x02
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:286
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}	
		//Fade red
		else if(xFrame == 5)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    1364:	91 50       	subi	r25, 0x01	; 1
    1366:	33 97       	sbiw	r30, 0x03	; 3
    1368:	d9 cf       	rjmp	.-78     	; 0x131c <L_5282+0x5a4>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:296
			}			
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Fill red
		else if(xFrame == 6)	{
    136a:	86 30       	cpi	r24, 0x06	; 6
    136c:	51 f5       	brne	.+84     	; 0x13c2 <L_5282+0x64a>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:297
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    136e:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <iFrame>
    1372:	a8 2f       	mov	r26, r24
    1374:	b0 e0       	ldi	r27, 0x00	; 0
    1376:	a8 52       	subi	r26, 0x28	; 40
    1378:	bf 4f       	sbci	r27, 0xFF	; 255
    137a:	e5 e4       	ldi	r30, 0x45	; 69
    137c:	f1 e0       	ldi	r31, 0x01	; 1
    137e:	9b e1       	ldi	r25, 0x1B	; 27
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:298
				leds[iLed] = CRGB(Vect[NUM_LEDS - 1 - iLed + iFrame], 0, 255);
    1380:	2f ef       	ldi	r18, 0xFF	; 255
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:297
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Fill red
		else if(xFrame == 6)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    1382:	89 17       	cp	r24, r25
    1384:	38 f4       	brcc	.+14     	; 0x1394 <L_5282+0x61c>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:298
				leds[iLed] = CRGB(Vect[NUM_LEDS - 1 - iLed + iFrame], 0, 255);
    1386:	3d 91       	ld	r19, X+
    1388:	30 83       	st	Z, r19
    138a:	11 82       	std	Z+1, r1	; 0x01
    138c:	22 83       	std	Z+2, r18	; 0x02
    138e:	91 50       	subi	r25, 0x01	; 1
    1390:	33 97       	sbiw	r30, 0x03	; 3
    1392:	f7 cf       	rjmp	.-18     	; 0x1382 <L_5282+0x60a>
    1394:	98 2f       	mov	r25, r24
    1396:	8c 31       	cpi	r24, 0x1C	; 28
    1398:	08 f0       	brcs	.+2      	; 0x139c <L_5282+0x624>
    139a:	9b e1       	ldi	r25, 0x1B	; 27
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:301
			}
			for (;iLed != 255; iLed--) {
				leds[iLed] = CRGB(255, 0, 255);
    139c:	33 e0       	ldi	r19, 0x03	; 3
    139e:	2f ef       	ldi	r18, 0xFF	; 255
    13a0:	93 9f       	mul	r25, r19
    13a2:	f0 01       	movw	r30, r0
    13a4:	11 24       	eor	r1, r1
    13a6:	ec 50       	subi	r30, 0x0C	; 12
    13a8:	ff 4f       	sbci	r31, 0xFF	; 255
    13aa:	20 83       	st	Z, r18
    13ac:	11 82       	std	Z+1, r1	; 0x01
    13ae:	22 83       	std	Z+2, r18	; 0x02
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:300
		//Fill red
		else if(xFrame == 6)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(Vect[NUM_LEDS - 1 - iLed + iFrame], 0, 255);
			}
			for (;iLed != 255; iLed--) {
    13b0:	91 50       	subi	r25, 0x01	; 1
    13b2:	b0 f7       	brcc	.-20     	; 0x13a0 <L_5282+0x628>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:303
				leds[iLed] = CRGB(255, 0, 255);
			}
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
    13b4:	8b 31       	cpi	r24, 0x1B	; 27
    13b6:	09 f0       	breq	.+2      	; 0x13ba <L_5282+0x642>
    13b8:	ce ce       	rjmp	.-612    	; 0x1156 <L_5282+0x3de>
    13ba:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <iFrame>
    13be:	87 e0       	ldi	r24, 0x07	; 7
    13c0:	11 cf       	rjmp	.-478    	; 0x11e4 <L_5282+0x46c>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:307
			else						{iFrame++;}		
		}
		//Fade blue out		
		else if(xFrame == 7)	{
    13c2:	87 30       	cpi	r24, 0x07	; 7
    13c4:	79 f5       	brne	.+94     	; 0x1424 <L_5282+0x6ac>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:308
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    13c6:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <iFrame>
    13ca:	e5 e4       	ldi	r30, 0x45	; 69
    13cc:	f1 e0       	ldi	r31, 0x01	; 1
main():
    13ce:	9b e1       	ldi	r25, 0x1B	; 27
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:309
				leds[iLed] = CRGB(255, 0, 255);
    13d0:	2f ef       	ldi	r18, 0xFF	; 255
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:308
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Fade blue out		
		else if(xFrame == 7)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    13d2:	89 17       	cp	r24, r25
    13d4:	08 f1       	brcs	.+66     	; 0x1418 <L_5282+0x6a0>
    13d6:	98 2f       	mov	r25, r24
    13d8:	8c 31       	cpi	r24, 0x1C	; 28
    13da:	08 f0       	brcs	.+2      	; 0x13de <L_5282+0x666>
    13dc:	9b e1       	ldi	r25, 0x1B	; 27
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:312
				leds[iLed] = CRGB(255, 0, 255);
			}
			for (;iLed != 255; iLed--) {
				leds[iLed] = CRGB(255, 0, Vect[NUM_LEDS - 1 - iFrame + iLed]);
    13de:	2b e1       	ldi	r18, 0x1B	; 27
    13e0:	30 e0       	ldi	r19, 0x00	; 0
    13e2:	28 1b       	sub	r18, r24
    13e4:	31 09       	sbc	r19, r1
    13e6:	28 52       	subi	r18, 0x28	; 40
    13e8:	3f 4f       	sbci	r19, 0xFF	; 255
    13ea:	63 e0       	ldi	r22, 0x03	; 3
    13ec:	5f ef       	ldi	r21, 0xFF	; 255
    13ee:	f9 01       	movw	r30, r18
    13f0:	e9 0f       	add	r30, r25
    13f2:	f1 1d       	adc	r31, r1
    13f4:	40 81       	ld	r20, Z
    13f6:	96 9f       	mul	r25, r22
    13f8:	f0 01       	movw	r30, r0
    13fa:	11 24       	eor	r1, r1
    13fc:	ec 50       	subi	r30, 0x0C	; 12
    13fe:	ff 4f       	sbci	r31, 0xFF	; 255
    1400:	50 83       	st	Z, r21
    1402:	11 82       	std	Z+1, r1	; 0x01
    1404:	42 83       	std	Z+2, r20	; 0x02
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:311
		//Fade blue out		
		else if(xFrame == 7)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(255, 0, 255);
			}
			for (;iLed != 255; iLed--) {
    1406:	91 50       	subi	r25, 0x01	; 1
    1408:	90 f7       	brcc	.-28     	; 0x13ee <L_5282+0x676>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:314
				leds[iLed] = CRGB(255, 0, Vect[NUM_LEDS - 1 - iFrame + iLed]);
			}
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
    140a:	8b 31       	cpi	r24, 0x1B	; 27
    140c:	09 f0       	breq	.+2      	; 0x1410 <L_5282+0x698>
    140e:	a3 ce       	rjmp	.-698    	; 0x1156 <L_5282+0x3de>
    1410:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <iFrame>
    1414:	88 e0       	ldi	r24, 0x08	; 8
    1416:	e6 ce       	rjmp	.-564    	; 0x11e4 <L_5282+0x46c>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:309
			else						{iFrame++;}		
		}
		//Fade blue out		
		else if(xFrame == 7)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(255, 0, 255);
    1418:	20 83       	st	Z, r18
    141a:	11 82       	std	Z+1, r1	; 0x01
    141c:	22 83       	std	Z+2, r18	; 0x02
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:308
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Fade blue out		
		else if(xFrame == 7)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    141e:	91 50       	subi	r25, 0x01	; 1
    1420:	33 97       	sbiw	r30, 0x03	; 3
    1422:	d7 cf       	rjmp	.-82     	; 0x13d2 <L_5282+0x65a>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:318
			}
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Turn off blue
		else if(xFrame == 8)	{
    1424:	88 30       	cpi	r24, 0x08	; 8
    1426:	59 f5       	brne	.+86     	; 0x147e <L_5282+0x706>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:319
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    1428:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <iFrame>
    142c:	d1 01       	movw	r26, r2
    142e:	a8 1b       	sub	r26, r24
    1430:	b1 09       	sbc	r27, r1
    1432:	a8 52       	subi	r26, 0x28	; 40
    1434:	bf 4f       	sbci	r27, 0xFF	; 255
    1436:	e5 e4       	ldi	r30, 0x45	; 69
    1438:	f1 e0       	ldi	r31, 0x01	; 1
    143a:	9b e1       	ldi	r25, 0x1B	; 27
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:320
				leds[iLed] = CRGB(255, 0, Vect[iLed - iFrame]);
    143c:	3f ef       	ldi	r19, 0xFF	; 255
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:319
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Turn off blue
		else if(xFrame == 8)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    143e:	89 17       	cp	r24, r25
    1440:	38 f4       	brcc	.+14     	; 0x1450 <L_5282+0x6d8>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:320
				leds[iLed] = CRGB(255, 0, Vect[iLed - iFrame]);
    1442:	2e 91       	ld	r18, -X
    1444:	30 83       	st	Z, r19
    1446:	11 82       	std	Z+1, r1	; 0x01
    1448:	22 83       	std	Z+2, r18	; 0x02
    144a:	91 50       	subi	r25, 0x01	; 1
    144c:	33 97       	sbiw	r30, 0x03	; 3
    144e:	f7 cf       	rjmp	.-18     	; 0x143e <L_5282+0x6c6>
    1450:	98 2f       	mov	r25, r24
    1452:	8c 31       	cpi	r24, 0x1C	; 28
    1454:	08 f0       	brcs	.+2      	; 0x1458 <L_5282+0x6e0>
    1456:	9b e1       	ldi	r25, 0x1B	; 27
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:323
			}
			for (;iLed != 255; iLed--) {
				leds[iLed] = CRGB(255, 0, 0);
    1458:	33 e0       	ldi	r19, 0x03	; 3
    145a:	2f ef       	ldi	r18, 0xFF	; 255
    145c:	93 9f       	mul	r25, r19
    145e:	f0 01       	movw	r30, r0
    1460:	11 24       	eor	r1, r1
    1462:	ec 50       	subi	r30, 0x0C	; 12
    1464:	ff 4f       	sbci	r31, 0xFF	; 255
    1466:	20 83       	st	Z, r18
    1468:	11 82       	std	Z+1, r1	; 0x01
    146a:	12 82       	std	Z+2, r1	; 0x02
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:322
		//Turn off blue
		else if(xFrame == 8)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(255, 0, Vect[iLed - iFrame]);
			}
			for (;iLed != 255; iLed--) {
    146c:	91 50       	subi	r25, 0x01	; 1
    146e:	b0 f7       	brcc	.-20     	; 0x145c <L_5282+0x6e4>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:325
				leds[iLed] = CRGB(255, 0, 0);
			}
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
    1470:	8b 31       	cpi	r24, 0x1B	; 27
    1472:	09 f0       	breq	.+2      	; 0x1476 <L_5282+0x6fe>
    1474:	70 ce       	rjmp	.-800    	; 0x1156 <L_5282+0x3de>
    1476:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <iFrame>
    147a:	89 e0       	ldi	r24, 0x09	; 9
    147c:	b3 ce       	rjmp	.-666    	; 0x11e4 <L_5282+0x46c>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:329
			else						{iFrame++;}		
		}		
		//Fade in Green
		else if(xFrame == 9)	{
    147e:	89 30       	cpi	r24, 0x09	; 9
    1480:	69 f5       	brne	.+90     	; 0x14dc <L_5282+0x764>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:330
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    1482:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <iFrame>
    1486:	e5 e4       	ldi	r30, 0x45	; 69
    1488:	f1 e0       	ldi	r31, 0x01	; 1
main():
    148a:	9b e1       	ldi	r25, 0x1B	; 27
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:331
				leds[iLed] = CRGB(255,0,0);
    148c:	2f ef       	ldi	r18, 0xFF	; 255
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:330
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}		
		//Fade in Green
		else if(xFrame == 9)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    148e:	89 17       	cp	r24, r25
    1490:	f8 f0       	brcs	.+62     	; 0x14d0 <L_5282+0x758>
    1492:	98 2f       	mov	r25, r24
    1494:	8c 31       	cpi	r24, 0x1C	; 28
    1496:	08 f0       	brcs	.+2      	; 0x149a <L_5282+0x722>
    1498:	9b e1       	ldi	r25, 0x1B	; 27
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:334
				leds[iLed] = CRGB(255,0,0);
			}		
			for (;iLed != 255; iLed--) {
				leds[iLed] = CRGB(255,Vect[iFrame - iLed], 0);
    149a:	28 2f       	mov	r18, r24
    149c:	30 e0       	ldi	r19, 0x00	; 0
    149e:	53 e0       	ldi	r21, 0x03	; 3
    14a0:	4f ef       	ldi	r20, 0xFF	; 255
    14a2:	f9 01       	movw	r30, r18
    14a4:	e9 1b       	sub	r30, r25
    14a6:	f1 09       	sbc	r31, r1
    14a8:	e8 52       	subi	r30, 0x28	; 40
    14aa:	ff 4f       	sbci	r31, 0xFF	; 255
    14ac:	60 81       	ld	r22, Z
    14ae:	95 9f       	mul	r25, r21
    14b0:	f0 01       	movw	r30, r0
    14b2:	11 24       	eor	r1, r1
    14b4:	ec 50       	subi	r30, 0x0C	; 12
    14b6:	ff 4f       	sbci	r31, 0xFF	; 255
    14b8:	40 83       	st	Z, r20
    14ba:	61 83       	std	Z+1, r22	; 0x01
    14bc:	12 82       	std	Z+2, r1	; 0x02
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:333
		//Fade in Green
		else if(xFrame == 9)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(255,0,0);
			}		
			for (;iLed != 255; iLed--) {
    14be:	91 50       	subi	r25, 0x01	; 1
    14c0:	80 f7       	brcc	.-32     	; 0x14a2 <L_5282+0x72a>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:336
				leds[iLed] = CRGB(255,Vect[iFrame - iLed], 0);
			}			
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
    14c2:	8b 31       	cpi	r24, 0x1B	; 27
    14c4:	09 f0       	breq	.+2      	; 0x14c8 <L_5282+0x750>
    14c6:	47 ce       	rjmp	.-882    	; 0x1156 <L_5282+0x3de>
    14c8:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <iFrame>
    14cc:	8a e0       	ldi	r24, 0x0A	; 10
    14ce:	8a ce       	rjmp	.-748    	; 0x11e4 <L_5282+0x46c>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:331
			else						{iFrame++;}		
		}		
		//Fade in Green
		else if(xFrame == 9)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(255,0,0);
    14d0:	20 83       	st	Z, r18
    14d2:	11 82       	std	Z+1, r1	; 0x01
    14d4:	12 82       	std	Z+2, r1	; 0x02
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:330
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}		
		//Fade in Green
		else if(xFrame == 9)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    14d6:	91 50       	subi	r25, 0x01	; 1
    14d8:	33 97       	sbiw	r30, 0x03	; 3
    14da:	d9 cf       	rjmp	.-78     	; 0x148e <L_5282+0x716>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:340
			}			
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}			
		}		
		//Fill green
		else if(xFrame == 10)	{
    14dc:	8a 30       	cpi	r24, 0x0A	; 10
    14de:	51 f5       	brne	.+84     	; 0x1534 <L_5282+0x7bc>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:341
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    14e0:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <iFrame>
    14e4:	a8 2f       	mov	r26, r24
    14e6:	b0 e0       	ldi	r27, 0x00	; 0
    14e8:	a8 52       	subi	r26, 0x28	; 40
    14ea:	bf 4f       	sbci	r27, 0xFF	; 255
    14ec:	e5 e4       	ldi	r30, 0x45	; 69
    14ee:	f1 e0       	ldi	r31, 0x01	; 1
    14f0:	9b e1       	ldi	r25, 0x1B	; 27
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:342
				leds[iLed] = CRGB(255,Vect[NUM_LEDS - 1 - iLed + iFrame], 0);
    14f2:	3f ef       	ldi	r19, 0xFF	; 255
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:341
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}			
		}		
		//Fill green
		else if(xFrame == 10)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    14f4:	89 17       	cp	r24, r25
    14f6:	38 f4       	brcc	.+14     	; 0x1506 <L_5282+0x78e>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:342
				leds[iLed] = CRGB(255,Vect[NUM_LEDS - 1 - iLed + iFrame], 0);
    14f8:	2d 91       	ld	r18, X+
    14fa:	30 83       	st	Z, r19
    14fc:	21 83       	std	Z+1, r18	; 0x01
    14fe:	12 82       	std	Z+2, r1	; 0x02
    1500:	91 50       	subi	r25, 0x01	; 1
    1502:	33 97       	sbiw	r30, 0x03	; 3
    1504:	f7 cf       	rjmp	.-18     	; 0x14f4 <L_5282+0x77c>
    1506:	98 2f       	mov	r25, r24
    1508:	8c 31       	cpi	r24, 0x1C	; 28
    150a:	08 f0       	brcs	.+2      	; 0x150e <L_5282+0x796>
    150c:	9b e1       	ldi	r25, 0x1B	; 27
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:345
			}
			for (;iLed != 255; iLed--) {
				leds[iLed] = CRGB(255, 255, 0);
    150e:	33 e0       	ldi	r19, 0x03	; 3
    1510:	2f ef       	ldi	r18, 0xFF	; 255
    1512:	93 9f       	mul	r25, r19
    1514:	f0 01       	movw	r30, r0
    1516:	11 24       	eor	r1, r1
    1518:	ec 50       	subi	r30, 0x0C	; 12
    151a:	ff 4f       	sbci	r31, 0xFF	; 255
    151c:	20 83       	st	Z, r18
    151e:	21 83       	std	Z+1, r18	; 0x01
    1520:	12 82       	std	Z+2, r1	; 0x02
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:344
		//Fill green
		else if(xFrame == 10)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(255,Vect[NUM_LEDS - 1 - iLed + iFrame], 0);
			}
			for (;iLed != 255; iLed--) {
    1522:	91 50       	subi	r25, 0x01	; 1
    1524:	b0 f7       	brcc	.-20     	; 0x1512 <L_5282+0x79a>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:347
				leds[iLed] = CRGB(255, 255, 0);
			}
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
    1526:	8b 31       	cpi	r24, 0x1B	; 27
    1528:	09 f0       	breq	.+2      	; 0x152c <L_5282+0x7b4>
    152a:	15 ce       	rjmp	.-982    	; 0x1156 <L_5282+0x3de>
    152c:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <iFrame>
    1530:	8b e0       	ldi	r24, 0x0B	; 11
    1532:	58 ce       	rjmp	.-848    	; 0x11e4 <L_5282+0x46c>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:351
			else						{iFrame++;}		
		}
		//Fade red out		
		else if(xFrame == 11)	{
    1534:	8b 30       	cpi	r24, 0x0B	; 11
    1536:	79 f5       	brne	.+94     	; 0x1596 <L_5282+0x81e>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:352
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    1538:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <iFrame>
    153c:	e5 e4       	ldi	r30, 0x45	; 69
    153e:	f1 e0       	ldi	r31, 0x01	; 1
main():
    1540:	9b e1       	ldi	r25, 0x1B	; 27
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:353
				leds[iLed] = CRGB(255, 255, 0);
    1542:	2f ef       	ldi	r18, 0xFF	; 255
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:352
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Fade red out		
		else if(xFrame == 11)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    1544:	89 17       	cp	r24, r25
    1546:	08 f1       	brcs	.+66     	; 0x158a <L_5282+0x812>
    1548:	98 2f       	mov	r25, r24
    154a:	8c 31       	cpi	r24, 0x1C	; 28
    154c:	08 f0       	brcs	.+2      	; 0x1550 <L_5282+0x7d8>
    154e:	9b e1       	ldi	r25, 0x1B	; 27
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:356
				leds[iLed] = CRGB(255, 255, 0);
			}
			for (;iLed != 255; iLed--) {
				leds[iLed] = CRGB(Vect[NUM_LEDS - 1 - iFrame + iLed], 255, 0);
    1550:	63 e0       	ldi	r22, 0x03	; 3
    1552:	2b e1       	ldi	r18, 0x1B	; 27
    1554:	30 e0       	ldi	r19, 0x00	; 0
    1556:	28 1b       	sub	r18, r24
    1558:	31 09       	sbc	r19, r1
    155a:	28 52       	subi	r18, 0x28	; 40
    155c:	3f 4f       	sbci	r19, 0xFF	; 255
    155e:	4f ef       	ldi	r20, 0xFF	; 255
    1560:	96 9f       	mul	r25, r22
    1562:	f0 01       	movw	r30, r0
    1564:	11 24       	eor	r1, r1
    1566:	ec 50       	subi	r30, 0x0C	; 12
    1568:	ff 4f       	sbci	r31, 0xFF	; 255
    156a:	d9 01       	movw	r26, r18
    156c:	a9 0f       	add	r26, r25
    156e:	b1 1d       	adc	r27, r1
    1570:	5c 91       	ld	r21, X
    1572:	50 83       	st	Z, r21
    1574:	41 83       	std	Z+1, r20	; 0x01
    1576:	12 82       	std	Z+2, r1	; 0x02
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:355
		//Fade red out		
		else if(xFrame == 11)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(255, 255, 0);
			}
			for (;iLed != 255; iLed--) {
    1578:	91 50       	subi	r25, 0x01	; 1
    157a:	90 f7       	brcc	.-28     	; 0x1560 <L_5282+0x7e8>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:358
				leds[iLed] = CRGB(Vect[NUM_LEDS - 1 - iFrame + iLed], 255, 0);
			}
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
    157c:	8b 31       	cpi	r24, 0x1B	; 27
    157e:	09 f0       	breq	.+2      	; 0x1582 <L_5282+0x80a>
    1580:	ea cd       	rjmp	.-1068   	; 0x1156 <L_5282+0x3de>
    1582:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <iFrame>
    1586:	8c e0       	ldi	r24, 0x0C	; 12
    1588:	2d ce       	rjmp	.-934    	; 0x11e4 <L_5282+0x46c>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:353
			else						{iFrame++;}		
		}
		//Fade red out		
		else if(xFrame == 11)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(255, 255, 0);
    158a:	20 83       	st	Z, r18
    158c:	21 83       	std	Z+1, r18	; 0x01
    158e:	12 82       	std	Z+2, r1	; 0x02
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:352
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Fade red out		
		else if(xFrame == 11)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    1590:	91 50       	subi	r25, 0x01	; 1
    1592:	33 97       	sbiw	r30, 0x03	; 3
    1594:	d7 cf       	rjmp	.-82     	; 0x1544 <L_5282+0x7cc>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:362
			}
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Turn off red
		else if(xFrame == 12)	{
    1596:	8c 30       	cpi	r24, 0x0C	; 12
    1598:	09 f0       	breq	.+2      	; 0x159c <L_5282+0x824>
    159a:	75 cc       	rjmp	.-1814   	; 0xe86 <L_5282+0x10e>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:363
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    159c:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <iFrame>
    15a0:	d1 01       	movw	r26, r2
    15a2:	a8 1b       	sub	r26, r24
    15a4:	b1 09       	sbc	r27, r1
    15a6:	a8 52       	subi	r26, 0x28	; 40
    15a8:	bf 4f       	sbci	r27, 0xFF	; 255
    15aa:	e5 e4       	ldi	r30, 0x45	; 69
    15ac:	f1 e0       	ldi	r31, 0x01	; 1
    15ae:	9b e1       	ldi	r25, 0x1B	; 27
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:364
				leds[iLed] = CRGB(Vect[iLed - iFrame], 255, 0);
    15b0:	2f ef       	ldi	r18, 0xFF	; 255
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:363
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Turn off red
		else if(xFrame == 12)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    15b2:	89 17       	cp	r24, r25
    15b4:	38 f4       	brcc	.+14     	; 0x15c4 <L_5282+0x84c>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:364
				leds[iLed] = CRGB(Vect[iLed - iFrame], 255, 0);
    15b6:	3e 91       	ld	r19, -X
    15b8:	30 83       	st	Z, r19
    15ba:	21 83       	std	Z+1, r18	; 0x01
    15bc:	12 82       	std	Z+2, r1	; 0x02
    15be:	91 50       	subi	r25, 0x01	; 1
    15c0:	33 97       	sbiw	r30, 0x03	; 3
    15c2:	f7 cf       	rjmp	.-18     	; 0x15b2 <L_5282+0x83a>
    15c4:	98 2f       	mov	r25, r24
    15c6:	8c 31       	cpi	r24, 0x1C	; 28
    15c8:	08 f0       	brcs	.+2      	; 0x15cc <L_5282+0x854>
    15ca:	9b e1       	ldi	r25, 0x1B	; 27
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:367
			}
			for (;iLed != 255; iLed--) {
				leds[iLed] = CRGB(0, 255, 0);
    15cc:	33 e0       	ldi	r19, 0x03	; 3
    15ce:	2f ef       	ldi	r18, 0xFF	; 255
    15d0:	93 9f       	mul	r25, r19
    15d2:	f0 01       	movw	r30, r0
    15d4:	11 24       	eor	r1, r1
    15d6:	ec 50       	subi	r30, 0x0C	; 12
    15d8:	ff 4f       	sbci	r31, 0xFF	; 255
    15da:	10 82       	st	Z, r1
    15dc:	21 83       	std	Z+1, r18	; 0x01
    15de:	12 82       	std	Z+2, r1	; 0x02
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:366
		//Turn off red
		else if(xFrame == 12)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(Vect[iLed - iFrame], 255, 0);
			}
			for (;iLed != 255; iLed--) {
    15e0:	91 50       	subi	r25, 0x01	; 1
    15e2:	b0 f7       	brcc	.-20     	; 0x15d0 <L_5282+0x858>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:369
				leds[iLed] = CRGB(0, 255, 0);
			}
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame = 1;}
    15e4:	8b 31       	cpi	r24, 0x1B	; 27
    15e6:	09 f0       	breq	.+2      	; 0x15ea <L_5282+0x872>
    15e8:	b6 cd       	rjmp	.-1172   	; 0x1156 <L_5282+0x3de>
    15ea:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <iFrame>
    15ee:	81 e0       	ldi	r24, 0x01	; 1
    15f0:	f9 cd       	rjmp	.-1038   	; 0x11e4 <L_5282+0x46c>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:377
	
		FrameDelay = 15;
  	}

  	//////////////////// STATUS 17 ///////////////////////
  	else if(Status == 17)  {
    15f2:	81 31       	cpi	r24, 0x11	; 17
    15f4:	91 f5       	brne	.+100    	; 0x165a <L_5282+0x8e2>
    15f6:	e8 ed       	ldi	r30, 0xD8	; 216
    15f8:	f0 e0       	ldi	r31, 0x00	; 0
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:378
		for (iLed=0; 			iLed<NUM_LEDS; 		iLed++)	{ Vect[iLed] = 0; }
    15fa:	11 92       	st	Z+, r1
    15fc:	b0 e0       	ldi	r27, 0x00	; 0
    15fe:	e4 3f       	cpi	r30, 0xF4	; 244
    1600:	fb 07       	cpc	r31, r27
    1602:	d9 f7       	brne	.-10     	; 0x15fa <L_5282+0x882>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:379
		for (iLed=0; 			iLed<NUM_LEDS/4; 	iLed++) { Vect[iLed] = 255; }
    1604:	8f ef       	ldi	r24, 0xFF	; 255
    1606:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <Vect>
    160a:	80 93 d9 00 	sts	0x00D9, r24	; 0x8000d9 <Vect+0x1>
    160e:	80 93 da 00 	sts	0x00DA, r24	; 0x8000da <Vect+0x2>
    1612:	80 93 db 00 	sts	0x00DB, r24	; 0x8000db <Vect+0x3>
    1616:	80 93 dc 00 	sts	0x00DC, r24	; 0x8000dc <Vect+0x4>
    161a:	80 93 dd 00 	sts	0x00DD, r24	; 0x8000dd <Vect+0x5>
    161e:	80 93 de 00 	sts	0x00DE, r24	; 0x8000de <Vect+0x6>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:380
		for (iLed=NUM_LEDS/2; 	iLed<NUM_LEDS*3/4;	iLed++) { Vect[iLed] = 255; }
    1622:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <Vect+0xe>
    1626:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <Vect+0xf>
    162a:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <Vect+0x10>
    162e:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <Vect+0x11>
    1632:	80 93 ea 00 	sts	0x00EA, r24	; 0x8000ea <Vect+0x12>
    1636:	80 93 eb 00 	sts	0x00EB, r24	; 0x8000eb <Vect+0x13>
    163a:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <Vect+0x14>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:381
		ShiftLed(GreenDD);
    163e:	81 e0       	ldi	r24, 0x01	; 1
    1640:	9e d8       	rcall	.-3780   	; 0x77e <ShiftLed(unsigned char)>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:382
		if(iFrame) {
    1642:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <iFrame>
    1646:	81 11       	cpse	r24, r1
    1648:	04 c0       	rjmp	.+8      	; 0x1652 <L_5282+0x8da>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:386
			iFrame = 0;
		}
		else{
			iFrame += NUM_LEDS/4;
    164a:	87 e0       	ldi	r24, 0x07	; 7
    164c:	80 93 5c 01 	sts	0x015C, r24	; 0x80015c <iFrame>
    1650:	02 c0       	rjmp	.+4      	; 0x1656 <L_5282+0x8de>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:383
		for (iLed=0; 			iLed<NUM_LEDS; 		iLed++)	{ Vect[iLed] = 0; }
		for (iLed=0; 			iLed<NUM_LEDS/4; 	iLed++) { Vect[iLed] = 255; }
		for (iLed=NUM_LEDS/2; 	iLed<NUM_LEDS*3/4;	iLed++) { Vect[iLed] = 255; }
		ShiftLed(GreenDD);
		if(iFrame) {
			iFrame = 0;
    1652:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <iFrame>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:388
		}
		else{
			iFrame += NUM_LEDS/4;
		}
		FrameDelay = 80;
    1656:	80 e5       	ldi	r24, 0x50	; 80
    1658:	98 ca       	rjmp	.-2768   	; 0xb8a <main+0x2da>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:391
  	}
  	//////////////////// STATUS 18 ///////////////////////
  	else if(Status == 18)  {
    165a:	82 31       	cpi	r24, 0x12	; 18
    165c:	c9 f4       	brne	.+50     	; 0x1690 <L_5282+0x918>
    165e:	e8 ed       	ldi	r30, 0xD8	; 216
    1660:	f0 e0       	ldi	r31, 0x00	; 0
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:392
		for (iLed=0; iLed<NUM_LEDS; iLed++) { Vect[iLed] = 0; }
    1662:	11 92       	st	Z+, r1
    1664:	10 e0       	ldi	r17, 0x00	; 0
    1666:	e4 3f       	cpi	r30, 0xF4	; 244
    1668:	f1 07       	cpc	r31, r17
    166a:	d9 f7       	brne	.-10     	; 0x1662 <L_5282+0x8ea>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:393
		Vect[0] = 255;
    166c:	8f ef       	ldi	r24, 0xFF	; 255
    166e:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <Vect>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:394
		Vect[1] = 255;
    1672:	80 93 d9 00 	sts	0x00D9, r24	; 0x8000d9 <Vect+0x1>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:395
		Vect[2] = 255;
    1676:	80 93 da 00 	sts	0x00DA, r24	; 0x8000da <Vect+0x2>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:396
		Vect[3] = 255;
    167a:	80 93 db 00 	sts	0x00DB, r24	; 0x8000db <Vect+0x3>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:397
		Vect[NUM_LEDS/2] = 255;
    167e:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <Vect+0xe>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:398
		Vect[NUM_LEDS/2 + 1] = 255;
    1682:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <Vect+0xf>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:399
		Vect[NUM_LEDS/2 + 2] = 255;
    1686:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <Vect+0x10>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:400
		Vect[NUM_LEDS/2 + 3] = 255;
    168a:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <Vect+0x11>
    168e:	5c cd       	rjmp	.-1352   	; 0x1148 <L_5282+0x3d0>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:407
		if  (iFrame == NUM_LEDS - 1)    { iFrame = 0;}
		else                            { iFrame++; }
		FrameDelay = 15;
  	}
  	//////////////////// STATUS 19 ///////////////////////
  	else if(Status == 19)  {
    1690:	83 31       	cpi	r24, 0x13	; 19
    1692:	49 f5       	brne	.+82     	; 0x16e6 <L_5282+0x96e>
    1694:	e8 ed       	ldi	r30, 0xD8	; 216
    1696:	f0 e0       	ldi	r31, 0x00	; 0
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:408
		for (iLed=0; iLed<NUM_LEDS; iLed++) { Vect[iLed] = 0; }
    1698:	11 92       	st	Z+, r1
    169a:	20 e0       	ldi	r18, 0x00	; 0
    169c:	e4 3f       	cpi	r30, 0xF4	; 244
    169e:	f2 07       	cpc	r31, r18
    16a0:	d9 f7       	brne	.-10     	; 0x1698 <L_5282+0x920>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:409
		Vect[NUM_LEDS - 1] = 255;
    16a2:	8f ef       	ldi	r24, 0xFF	; 255
    16a4:	80 93 f3 00 	sts	0x00F3, r24	; 0x8000f3 <Vect+0x1b>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:410
		Vect[NUM_LEDS - 2] = 255;
    16a8:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <Vect+0x1a>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:411
		Vect[NUM_LEDS - 3] = 255;
    16ac:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <Vect+0x19>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:412
		Vect[NUM_LEDS - 4] = 255;
    16b0:	80 93 f0 00 	sts	0x00F0, r24	; 0x8000f0 <Vect+0x18>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:413
		ShiftLed(GreenDD);
    16b4:	81 e0       	ldi	r24, 0x01	; 1
    16b6:	63 d8       	rcall	.-3898   	; 0x77e <ShiftLed(unsigned char)>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:414
		if		(iFrame == NUM_LEDS - 4)	{ CountDir = CountDown;}
    16b8:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <iFrame>
    16bc:	88 31       	cpi	r24, 0x18	; 24
    16be:	61 f4       	brne	.+24     	; 0x16d8 <L_5282+0x960>
    16c0:	91 e0       	ldi	r25, 0x01	; 1
    16c2:	90 93 5a 01 	sts	0x015A, r25	; 0x80015a <CountDir>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:416
		else if	(iFrame == 0)             	{ CountDir = CountUp;}
		if		(CountDir == CountUp)		{ iFrame ++;}
    16c6:	90 91 5a 01 	lds	r25, 0x015A	; 0x80015a <CountDir>
    16ca:	91 11       	cpse	r25, r1
    16cc:	0a c0       	rjmp	.+20     	; 0x16e2 <L_5282+0x96a>
    16ce:	8f 5f       	subi	r24, 0xFF	; 255
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:417
		else								{ iFrame --;}
    16d0:	80 93 5c 01 	sts	0x015C, r24	; 0x80015c <iFrame>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:418
		FrameDelay = 8;
    16d4:	88 e0       	ldi	r24, 0x08	; 8
    16d6:	59 ca       	rjmp	.-2894   	; 0xb8a <main+0x2da>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:415
		Vect[NUM_LEDS - 2] = 255;
		Vect[NUM_LEDS - 3] = 255;
		Vect[NUM_LEDS - 4] = 255;
		ShiftLed(GreenDD);
		if		(iFrame == NUM_LEDS - 4)	{ CountDir = CountDown;}
		else if	(iFrame == 0)             	{ CountDir = CountUp;}
    16d8:	81 11       	cpse	r24, r1
    16da:	f5 cf       	rjmp	.-22     	; 0x16c6 <L_5282+0x94e>
    16dc:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <CountDir>
    16e0:	f2 cf       	rjmp	.-28     	; 0x16c6 <L_5282+0x94e>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:417
		if		(CountDir == CountUp)		{ iFrame ++;}
		else								{ iFrame --;}
    16e2:	81 50       	subi	r24, 0x01	; 1
    16e4:	f5 cf       	rjmp	.-22     	; 0x16d0 <L_5282+0x958>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:421
		FrameDelay = 8;
  	}
  	//////////////////// STATUS 20 ///////////////////////
  	else if(Status == 20)  {
    16e6:	84 31       	cpi	r24, 0x14	; 20
    16e8:	a1 f5       	brne	.+104    	; 0x1752 <L_5282+0x9da>
    16ea:	e8 ed       	ldi	r30, 0xD8	; 216
    16ec:	f0 e0       	ldi	r31, 0x00	; 0
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:422
		for (iLed=0; iLed<NUM_LEDS; iLed++) { Vect[iLed] = 0; }
    16ee:	11 92       	st	Z+, r1
    16f0:	30 e0       	ldi	r19, 0x00	; 0
    16f2:	e4 3f       	cpi	r30, 0xF4	; 244
    16f4:	f3 07       	cpc	r31, r19
    16f6:	d9 f7       	brne	.-10     	; 0x16ee <L_5282+0x976>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:423
		Vect[NUM_LEDS - 1] = 255;
    16f8:	8f ef       	ldi	r24, 0xFF	; 255
    16fa:	80 93 f3 00 	sts	0x00F3, r24	; 0x8000f3 <Vect+0x1b>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:424
		Vect[NUM_LEDS - 2] = 255;
    16fe:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <Vect+0x1a>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:425
		Vect[NUM_LEDS - 3] = 255;
    1702:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <Vect+0x19>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:426
		Vect[NUM_LEDS - 4] = 255;
    1706:	80 93 f0 00 	sts	0x00F0, r24	; 0x8000f0 <Vect+0x18>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:427
		ShiftLed(RedDD);
    170a:	80 e0       	ldi	r24, 0x00	; 0
    170c:	38 d8       	rcall	.-3984   	; 0x77e <ShiftLed(unsigned char)>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:428
		if  (iFrame == NUM_LEDS - 1)    { 
    170e:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <iFrame>
    1712:	8b 31       	cpi	r24, 0x1B	; 27
    1714:	d1 f4       	brne	.+52     	; 0x174a <L_5282+0x9d2>
    1716:	80 91 5b 01 	lds	r24, 0x015B	; 0x80015b <xFrame>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:429
			iFrame = 0;
    171a:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <iFrame>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:430
			if		(xFrame == 8)			{ CountDir = CountDown;}
    171e:	88 30       	cpi	r24, 0x08	; 8
    1720:	69 f4       	brne	.+26     	; 0x173c <L_5282+0x9c4>
    1722:	91 e0       	ldi	r25, 0x01	; 1
    1724:	90 93 5a 01 	sts	0x015A, r25	; 0x80015a <CountDir>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:432
			else if	(xFrame == 1)       	{ CountDir = CountUp;}
			if		(CountDir == CountUp)	{ xFrame++;}
    1728:	90 91 5a 01 	lds	r25, 0x015A	; 0x80015a <CountDir>
    172c:	91 11       	cpse	r25, r1
    172e:	0b c0       	rjmp	.+22     	; 0x1746 <L_5282+0x9ce>
    1730:	8f 5f       	subi	r24, 0xFF	; 255
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:433
			else							{ xFrame--;}
    1732:	80 93 5b 01 	sts	0x015B, r24	; 0x80015b <xFrame>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:438
		}
		else                            { 
			iFrame++; 
		}
		FrameDelay = xFrame;
    1736:	80 91 5b 01 	lds	r24, 0x015B	; 0x80015b <xFrame>
    173a:	27 ca       	rjmp	.-2994   	; 0xb8a <main+0x2da>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:431
		Vect[NUM_LEDS - 4] = 255;
		ShiftLed(RedDD);
		if  (iFrame == NUM_LEDS - 1)    { 
			iFrame = 0;
			if		(xFrame == 8)			{ CountDir = CountDown;}
			else if	(xFrame == 1)       	{ CountDir = CountUp;}
    173c:	81 30       	cpi	r24, 0x01	; 1
    173e:	a1 f7       	brne	.-24     	; 0x1728 <L_5282+0x9b0>
    1740:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <CountDir>
    1744:	f1 cf       	rjmp	.-30     	; 0x1728 <L_5282+0x9b0>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:433
			if		(CountDir == CountUp)	{ xFrame++;}
			else							{ xFrame--;}
    1746:	81 50       	subi	r24, 0x01	; 1
    1748:	f4 cf       	rjmp	.-24     	; 0x1732 <L_5282+0x9ba>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:436
		}
		else                            { 
			iFrame++; 
    174a:	8f 5f       	subi	r24, 0xFF	; 255
    174c:	80 93 5c 01 	sts	0x015C, r24	; 0x80015c <iFrame>
    1750:	f2 cf       	rjmp	.-28     	; 0x1736 <L_5282+0x9be>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:442
		}
		FrameDelay = xFrame;
  	}
	//////////////////// STATUS OTHERS ///////////////////////
	else	{
		Status = 0;
    1752:	10 92 5d 01 	sts	0x015D, r1	; 0x80015d <Status>
    1756:	1b ca       	rjmp	.-3018   	; 0xb8e <main+0x2de>
countFPS():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:225

void CFastLED::countFPS(int nFrames) {
	static int br = 0;
	static uint32_t lastframe = 0; // millis();

	if(br++ >= nFrames) {
    1758:	80 91 d0 00 	lds	r24, 0x00D0	; 0x8000d0 <CFastLED::countFPS(int)::br>
    175c:	90 91 d1 00 	lds	r25, 0x00D1	; 0x8000d1 <CFastLED::countFPS(int)::br+0x1>
    1760:	9c 01       	movw	r18, r24
    1762:	2f 5f       	subi	r18, 0xFF	; 255
    1764:	3f 4f       	sbci	r19, 0xFF	; 255
    1766:	30 93 d1 00 	sts	0x00D1, r19	; 0x8000d1 <CFastLED::countFPS(int)::br+0x1>
    176a:	20 93 d0 00 	sts	0x00D0, r18	; 0x8000d0 <CFastLED::countFPS(int)::br>
    176e:	49 97       	sbiw	r24, 0x19	; 25
    1770:	0c f4       	brge	.+2      	; 0x1774 <L_5282+0x9fc>
    1772:	4b c0       	rjmp	.+150    	; 0x180a <L_5282+0xa92>
millis():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:218
}

unsigned long millis()
{
  unsigned long m;
  uint8_t oldSREG = SREG;
    1774:	8f b7       	in	r24, 0x3f	; 63
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:222

  // disable interrupts while we read timer0_millis or we might get an
  // inconsistent value (e.g. in the middle of a write to timer0_millis)
  cli();
    1776:	f8 94       	cli
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:223
  m = timer0_millis;
    1778:	00 91 c8 00 	lds	r16, 0x00C8	; 0x8000c8 <timer0_millis>
    177c:	10 91 c9 00 	lds	r17, 0x00C9	; 0x8000c9 <timer0_millis+0x1>
    1780:	20 91 ca 00 	lds	r18, 0x00CA	; 0x8000ca <timer0_millis+0x2>
    1784:	30 91 cb 00 	lds	r19, 0x00CB	; 0x8000cb <timer0_millis+0x3>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:224
  SREG = oldSREG;
    1788:	8f bf       	out	0x3f, r24	; 63
countFPS():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:227
		uint32_t now = millis();
		now -= lastframe;
    178a:	80 91 cc 00 	lds	r24, 0x00CC	; 0x8000cc <CFastLED::countFPS(int)::lastframe>
    178e:	90 91 cd 00 	lds	r25, 0x00CD	; 0x8000cd <CFastLED::countFPS(int)::lastframe+0x1>
    1792:	a0 91 ce 00 	lds	r26, 0x00CE	; 0x8000ce <CFastLED::countFPS(int)::lastframe+0x2>
    1796:	b0 91 cf 00 	lds	r27, 0x00CF	; 0x8000cf <CFastLED::countFPS(int)::lastframe+0x3>
    179a:	a9 01       	movw	r20, r18
    179c:	98 01       	movw	r18, r16
    179e:	28 1b       	sub	r18, r24
    17a0:	39 0b       	sbc	r19, r25
    17a2:	4a 0b       	sbc	r20, r26
    17a4:	5b 0b       	sbc	r21, r27
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:228
		if(now == 0) {
    17a6:	21 f4       	brne	.+8      	; 0x17b0 <L_5282+0xa38>
main():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:229
			now = 1; // prevent division by zero below
    17a8:	21 e0       	ldi	r18, 0x01	; 1
    17aa:	30 e0       	ldi	r19, 0x00	; 0
    17ac:	40 e0       	ldi	r20, 0x00	; 0
    17ae:	50 e0       	ldi	r21, 0x00	; 0
countFPS():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:231
		}
		m_nFPS = (br * 1000) / now;
    17b0:	e0 91 d0 00 	lds	r30, 0x00D0	; 0x8000d0 <CFastLED::countFPS(int)::br>
    17b4:	f0 91 d1 00 	lds	r31, 0x00D1	; 0x8000d1 <CFastLED::countFPS(int)::br+0x1>
    17b8:	88 ee       	ldi	r24, 0xE8	; 232
    17ba:	93 e0       	ldi	r25, 0x03	; 3
    17bc:	e8 9f       	mul	r30, r24
    17be:	b0 01       	movw	r22, r0
    17c0:	e9 9f       	mul	r30, r25
    17c2:	70 0d       	add	r23, r0
    17c4:	f8 9f       	mul	r31, r24
    17c6:	70 0d       	add	r23, r0
    17c8:	11 24       	eor	r1, r1
    17ca:	07 2e       	mov	r0, r23
    17cc:	00 0c       	add	r0, r0
    17ce:	88 0b       	sbc	r24, r24
    17d0:	99 0b       	sbc	r25, r25
    17d2:	fc d0       	rcall	.+504    	; 0x19cc <__udivmodsi4>
    17d4:	30 93 4f 01 	sts	0x014F, r19	; 0x80014f <FastLED+0x2>
    17d8:	20 93 4e 01 	sts	0x014E, r18	; 0x80014e <FastLED+0x1>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:232
		br = 0;
    17dc:	10 92 d1 00 	sts	0x00D1, r1	; 0x8000d1 <CFastLED::countFPS(int)::br+0x1>
    17e0:	10 92 d0 00 	sts	0x00D0, r1	; 0x8000d0 <CFastLED::countFPS(int)::br>
millis():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:218
}

unsigned long millis()
{
  unsigned long m;
  uint8_t oldSREG = SREG;
    17e4:	2f b7       	in	r18, 0x3f	; 63
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:222

  // disable interrupts while we read timer0_millis or we might get an
  // inconsistent value (e.g. in the middle of a write to timer0_millis)
  cli();
    17e6:	f8 94       	cli
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:223
  m = timer0_millis;
    17e8:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <timer0_millis>
    17ec:	90 91 c9 00 	lds	r25, 0x00C9	; 0x8000c9 <timer0_millis+0x1>
    17f0:	a0 91 ca 00 	lds	r26, 0x00CA	; 0x8000ca <timer0_millis+0x2>
    17f4:	b0 91 cb 00 	lds	r27, 0x00CB	; 0x8000cb <timer0_millis+0x3>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:224
  SREG = oldSREG;
    17f8:	2f bf       	out	0x3f, r18	; 63
countFPS():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:233
		lastframe = millis();
    17fa:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <CFastLED::countFPS(int)::lastframe>
    17fe:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <CFastLED::countFPS(int)::lastframe+0x1>
    1802:	a0 93 ce 00 	sts	0x00CE, r26	; 0x8000ce <CFastLED::countFPS(int)::lastframe+0x2>
    1806:	b0 93 cf 00 	sts	0x00CF, r27	; 0x8000cf <CFastLED::countFPS(int)::lastframe+0x3>
main():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/main.cpp:47
  
  setup();
    
  for (;;) {
    loop();
    if (serialEventRun) serialEventRun();
    180a:	80 e0       	ldi	r24, 0x00	; 0
    180c:	90 e0       	ldi	r25, 0x00	; 0
    180e:	89 2b       	or	r24, r25
    1810:	09 f4       	brne	.+2      	; 0x1814 <L_5282+0xa9c>
    1812:	16 c9       	rjmp	.-3540   	; 0xa40 <main+0x190>
    1814:	f5 d3       	rcall	.+2026   	; 0x2000 <__TEXT_REGION_LENGTH__>
    1816:	14 c9       	rjmp	.-3544   	; 0xa40 <main+0x190>

00001818 <_GLOBAL__sub_I_pSmartMatrix>:
_GLOBAL__sub_I_pSmartMatrix():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:36
// uint32_t CRGB::Squant = ((uint32_t)((__TIME__[4]-'0') * 28))<<16 | ((__TIME__[6]-'0')*50)<<8 | ((__TIME__[7]-'0')*28);

CFastLED::CFastLED() {
	// clear out the array of led controllers
	// m_nControllers = 0;
	m_Scale = 255;
    1818:	ed e4       	ldi	r30, 0x4D	; 77
    181a:	f1 e0       	ldi	r31, 0x01	; 1
    181c:	8f ef       	ldi	r24, 0xFF	; 255
    181e:	80 83       	st	Z, r24
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:37
	m_nFPS = 0;
    1820:	12 82       	std	Z+2, r1	; 0x02
    1822:	11 82       	std	Z+1, r1	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:38
	m_pPowerFunc = NULL;
    1824:	14 86       	std	Z+12, r1	; 0x0c
    1826:	13 86       	std	Z+11, r1	; 0x0b
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:39
	m_nPowerData = 0xFFFFFFFF;
    1828:	8f ef       	ldi	r24, 0xFF	; 255
    182a:	9f ef       	ldi	r25, 0xFF	; 255
    182c:	dc 01       	movw	r26, r24
    182e:	87 83       	std	Z+7, r24	; 0x07
    1830:	90 87       	std	Z+8, r25	; 0x08
    1832:	a1 87       	std	Z+9, r26	; 0x09
    1834:	b2 87       	std	Z+10, r27	; 0x0a
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:254
}

/// Called at program exit when run in a desktop environment. 
/// Extra C definition that some environments may need. 
/// @returns 0 to indicate success
extern "C" int atexit(void (* /*func*/ )()) { return 0; }
    1836:	08 95       	ret

00001838 <random_r>:
random_r():
    1838:	8f 92       	push	r8
    183a:	9f 92       	push	r9
    183c:	af 92       	push	r10
    183e:	bf 92       	push	r11
    1840:	cf 92       	push	r12
    1842:	df 92       	push	r13
    1844:	ef 92       	push	r14
    1846:	ff 92       	push	r15
    1848:	cf 93       	push	r28
    184a:	df 93       	push	r29
    184c:	ec 01       	movw	r28, r24
    184e:	68 81       	ld	r22, Y
    1850:	79 81       	ldd	r23, Y+1	; 0x01
    1852:	8a 81       	ldd	r24, Y+2	; 0x02
    1854:	9b 81       	ldd	r25, Y+3	; 0x03
    1856:	61 15       	cp	r22, r1
    1858:	71 05       	cpc	r23, r1
    185a:	81 05       	cpc	r24, r1
    185c:	91 05       	cpc	r25, r1
    185e:	21 f4       	brne	.+8      	; 0x1868 <random_r+0x30>
    1860:	64 e2       	ldi	r22, 0x24	; 36
    1862:	79 ed       	ldi	r23, 0xD9	; 217
    1864:	8b e5       	ldi	r24, 0x5B	; 91
    1866:	97 e0       	ldi	r25, 0x07	; 7
    1868:	2d e1       	ldi	r18, 0x1D	; 29
    186a:	33 ef       	ldi	r19, 0xF3	; 243
    186c:	41 e0       	ldi	r20, 0x01	; 1
    186e:	50 e0       	ldi	r21, 0x00	; 0
    1870:	81 d0       	rcall	.+258    	; 0x1974 <__divmodsi4>
    1872:	49 01       	movw	r8, r18
    1874:	5a 01       	movw	r10, r20
    1876:	9b 01       	movw	r18, r22
    1878:	ac 01       	movw	r20, r24
    187a:	a7 ea       	ldi	r26, 0xA7	; 167
    187c:	b1 e4       	ldi	r27, 0x41	; 65
    187e:	96 d0       	rcall	.+300    	; 0x19ac <__muluhisi3>
    1880:	6b 01       	movw	r12, r22
    1882:	7c 01       	movw	r14, r24
    1884:	ac ee       	ldi	r26, 0xEC	; 236
    1886:	b4 ef       	ldi	r27, 0xF4	; 244
    1888:	a5 01       	movw	r20, r10
    188a:	94 01       	movw	r18, r8
    188c:	9b d0       	rcall	.+310    	; 0x19c4 <__mulohisi3>
    188e:	c6 0e       	add	r12, r22
    1890:	d7 1e       	adc	r13, r23
    1892:	e8 1e       	adc	r14, r24
    1894:	f9 1e       	adc	r15, r25
    1896:	f7 fe       	sbrs	r15, 7
    1898:	06 c0       	rjmp	.+12     	; 0x18a6 <random_r+0x6e>
    189a:	81 e0       	ldi	r24, 0x01	; 1
    189c:	c8 1a       	sub	r12, r24
    189e:	d1 08       	sbc	r13, r1
    18a0:	e1 08       	sbc	r14, r1
    18a2:	80 e8       	ldi	r24, 0x80	; 128
    18a4:	f8 0a       	sbc	r15, r24
    18a6:	c8 82       	st	Y, r12
    18a8:	d9 82       	std	Y+1, r13	; 0x01
    18aa:	ea 82       	std	Y+2, r14	; 0x02
    18ac:	fb 82       	std	Y+3, r15	; 0x03
    18ae:	c7 01       	movw	r24, r14
    18b0:	b6 01       	movw	r22, r12
    18b2:	9f 77       	andi	r25, 0x7F	; 127
    18b4:	df 91       	pop	r29
    18b6:	cf 91       	pop	r28
    18b8:	ff 90       	pop	r15
    18ba:	ef 90       	pop	r14
    18bc:	df 90       	pop	r13
    18be:	cf 90       	pop	r12
    18c0:	bf 90       	pop	r11
    18c2:	af 90       	pop	r10
    18c4:	9f 90       	pop	r9
    18c6:	8f 90       	pop	r8
    18c8:	08 95       	ret

000018ca <random>:
random():
    18ca:	8f 92       	push	r8
    18cc:	9f 92       	push	r9
    18ce:	af 92       	push	r10
    18d0:	bf 92       	push	r11
    18d2:	cf 92       	push	r12
    18d4:	df 92       	push	r13
    18d6:	ef 92       	push	r14
    18d8:	ff 92       	push	r15
    18da:	60 91 60 00 	lds	r22, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
    18de:	70 91 61 00 	lds	r23, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
    18e2:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
    18e6:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
    18ea:	61 15       	cp	r22, r1
    18ec:	71 05       	cpc	r23, r1
    18ee:	81 05       	cpc	r24, r1
    18f0:	91 05       	cpc	r25, r1
    18f2:	21 f4       	brne	.+8      	; 0x18fc <random+0x32>
    18f4:	64 e2       	ldi	r22, 0x24	; 36
    18f6:	79 ed       	ldi	r23, 0xD9	; 217
    18f8:	8b e5       	ldi	r24, 0x5B	; 91
    18fa:	97 e0       	ldi	r25, 0x07	; 7
    18fc:	2d e1       	ldi	r18, 0x1D	; 29
    18fe:	33 ef       	ldi	r19, 0xF3	; 243
    1900:	41 e0       	ldi	r20, 0x01	; 1
    1902:	50 e0       	ldi	r21, 0x00	; 0
    1904:	37 d0       	rcall	.+110    	; 0x1974 <__divmodsi4>
    1906:	49 01       	movw	r8, r18
    1908:	5a 01       	movw	r10, r20
    190a:	9b 01       	movw	r18, r22
    190c:	ac 01       	movw	r20, r24
    190e:	a7 ea       	ldi	r26, 0xA7	; 167
    1910:	b1 e4       	ldi	r27, 0x41	; 65
    1912:	4c d0       	rcall	.+152    	; 0x19ac <__muluhisi3>
    1914:	6b 01       	movw	r12, r22
    1916:	7c 01       	movw	r14, r24
    1918:	ac ee       	ldi	r26, 0xEC	; 236
    191a:	b4 ef       	ldi	r27, 0xF4	; 244
    191c:	a5 01       	movw	r20, r10
    191e:	94 01       	movw	r18, r8
    1920:	51 d0       	rcall	.+162    	; 0x19c4 <__mulohisi3>
    1922:	c6 0e       	add	r12, r22
    1924:	d7 1e       	adc	r13, r23
    1926:	e8 1e       	adc	r14, r24
    1928:	f9 1e       	adc	r15, r25
    192a:	f7 fe       	sbrs	r15, 7
    192c:	06 c0       	rjmp	.+12     	; 0x193a <random+0x70>
    192e:	81 e0       	ldi	r24, 0x01	; 1
    1930:	c8 1a       	sub	r12, r24
    1932:	d1 08       	sbc	r13, r1
    1934:	e1 08       	sbc	r14, r1
    1936:	80 e8       	ldi	r24, 0x80	; 128
    1938:	f8 0a       	sbc	r15, r24
    193a:	c0 92 60 00 	sts	0x0060, r12	; 0x800060 <__DATA_REGION_ORIGIN__>
    193e:	d0 92 61 00 	sts	0x0061, r13	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
    1942:	e0 92 62 00 	sts	0x0062, r14	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
    1946:	f0 92 63 00 	sts	0x0063, r15	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
    194a:	c7 01       	movw	r24, r14
    194c:	b6 01       	movw	r22, r12
    194e:	9f 77       	andi	r25, 0x7F	; 127
    1950:	ff 90       	pop	r15
    1952:	ef 90       	pop	r14
    1954:	df 90       	pop	r13
    1956:	cf 90       	pop	r12
    1958:	bf 90       	pop	r11
    195a:	af 90       	pop	r10
    195c:	9f 90       	pop	r9
    195e:	8f 90       	pop	r8
    1960:	08 95       	ret

00001962 <srandom>:
srandom():
    1962:	60 93 60 00 	sts	0x0060, r22	; 0x800060 <__DATA_REGION_ORIGIN__>
    1966:	70 93 61 00 	sts	0x0061, r23	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
    196a:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
    196e:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
    1972:	08 95       	ret

00001974 <__divmodsi4>:
__divmodsi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1686
    1974:	05 2e       	mov	r0, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1687
    1976:	97 fb       	bst	r25, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1688
    1978:	16 f4       	brtc	.+4      	; 0x197e <__divmodsi4+0xa>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1689
    197a:	00 94       	com	r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1690
    197c:	0f d0       	rcall	.+30     	; 0x199c <__negsi2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1692
    197e:	57 fd       	sbrc	r21, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1693
    1980:	05 d0       	rcall	.+10     	; 0x198c <__divmodsi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1694
    1982:	24 d0       	rcall	.+72     	; 0x19cc <__udivmodsi4>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1695
    1984:	07 fc       	sbrc	r0, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1696
    1986:	02 d0       	rcall	.+4      	; 0x198c <__divmodsi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1697
    1988:	46 f4       	brtc	.+16     	; 0x199a <__divmodsi4_exit>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1698
    198a:	08 c0       	rjmp	.+16     	; 0x199c <__negsi2>

0000198c <__divmodsi4_neg2>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1701
    198c:	50 95       	com	r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1702
    198e:	40 95       	com	r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1703
    1990:	30 95       	com	r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1704
    1992:	21 95       	neg	r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1705
    1994:	3f 4f       	sbci	r19, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1706
    1996:	4f 4f       	sbci	r20, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1707
    1998:	5f 4f       	sbci	r21, 0xFF	; 255

0000199a <__divmodsi4_exit>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1709
    199a:	08 95       	ret

0000199c <__negsi2>:
__negsi2():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1718
    199c:	90 95       	com	r25
    199e:	80 95       	com	r24
    19a0:	70 95       	com	r23
    19a2:	61 95       	neg	r22
    19a4:	7f 4f       	sbci	r23, 0xFF	; 255
    19a6:	8f 4f       	sbci	r24, 0xFF	; 255
    19a8:	9f 4f       	sbci	r25, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1719
    19aa:	08 95       	ret

000019ac <__muluhisi3>:
__muluhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:626
    19ac:	31 d0       	rcall	.+98     	; 0x1a10 <__umulhisi3>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:627
    19ae:	a5 9f       	mul	r26, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:628
    19b0:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:629
    19b2:	b4 9f       	mul	r27, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:630
    19b4:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:631
    19b6:	a4 9f       	mul	r26, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:632
    19b8:	80 0d       	add	r24, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:633
    19ba:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:634
    19bc:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:635
    19be:	08 95       	ret

000019c0 <__mulshisi3>:
__mulshisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:603
    19c0:	b7 ff       	sbrs	r27, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:605
    19c2:	f4 cf       	rjmp	.-24     	; 0x19ac <__muluhisi3>

000019c4 <__mulohisi3>:
__mulohisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:613
    19c4:	f3 df       	rcall	.-26     	; 0x19ac <__muluhisi3>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:615
    19c6:	82 1b       	sub	r24, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:616
    19c8:	93 0b       	sbc	r25, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:617
    19ca:	08 95       	ret

000019cc <__udivmodsi4>:
__udivmodsi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1638
    19cc:	a1 e2       	ldi	r26, 0x21	; 33
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1639
    19ce:	1a 2e       	mov	r1, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1640
    19d0:	aa 1b       	sub	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1641
    19d2:	bb 1b       	sub	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1642
    19d4:	fd 01       	movw	r30, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1644
    19d6:	0d c0       	rjmp	.+26     	; 0x19f2 <__udivmodsi4_ep>

000019d8 <__udivmodsi4_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1646
    19d8:	aa 1f       	adc	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1647
    19da:	bb 1f       	adc	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1648
    19dc:	ee 1f       	adc	r30, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1649
    19de:	ff 1f       	adc	r31, r31
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1650
    19e0:	a2 17       	cp	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1651
    19e2:	b3 07       	cpc	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1652
    19e4:	e4 07       	cpc	r30, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1653
    19e6:	f5 07       	cpc	r31, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1654
    19e8:	20 f0       	brcs	.+8      	; 0x19f2 <__udivmodsi4_ep>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1655
    19ea:	a2 1b       	sub	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1656
    19ec:	b3 0b       	sbc	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1657
    19ee:	e4 0b       	sbc	r30, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1658
    19f0:	f5 0b       	sbc	r31, r21

000019f2 <__udivmodsi4_ep>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1660
    19f2:	66 1f       	adc	r22, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1661
    19f4:	77 1f       	adc	r23, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1662
    19f6:	88 1f       	adc	r24, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1663
    19f8:	99 1f       	adc	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1664
    19fa:	1a 94       	dec	r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1665
    19fc:	69 f7       	brne	.-38     	; 0x19d8 <__udivmodsi4_loop>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1667
    19fe:	60 95       	com	r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1668
    1a00:	70 95       	com	r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1669
    1a02:	80 95       	com	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1670
    1a04:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1672
    1a06:	9b 01       	movw	r18, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1674
    1a08:	ac 01       	movw	r20, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1676
    1a0a:	bd 01       	movw	r22, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1678
    1a0c:	cf 01       	movw	r24, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1680
    1a0e:	08 95       	ret

00001a10 <__umulhisi3>:
__umulhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:564
    1a10:	a2 9f       	mul	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:565
    1a12:	b0 01       	movw	r22, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:566
    1a14:	b3 9f       	mul	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:567
    1a16:	c0 01       	movw	r24, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:568
    1a18:	a3 9f       	mul	r26, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:578
    1a1a:	01 d0       	rcall	.+2      	; 0x1a1e <__umulhisi3+0xe>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:580
    1a1c:	b2 9f       	mul	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:581
    1a1e:	70 0d       	add	r23, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:582
    1a20:	81 1d       	adc	r24, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:583
    1a22:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:584
    1a24:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:585
    1a26:	08 95       	ret

00001a28 <__mulsi3>:
__mulsi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:648
    1a28:	db 01       	movw	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:649
    1a2a:	8f 93       	push	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:650
    1a2c:	9f 93       	push	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:651
    1a2e:	be df       	rcall	.-132    	; 0x19ac <__muluhisi3>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:652
    1a30:	bf 91       	pop	r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:653
    1a32:	af 91       	pop	r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:655
    1a34:	a2 9f       	mul	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:656
    1a36:	80 0d       	add	r24, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:657
    1a38:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:658
    1a3a:	a3 9f       	mul	r26, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:659
    1a3c:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:660
    1a3e:	b2 9f       	mul	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:661
    1a40:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:662
    1a42:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:663
    1a44:	08 95       	ret

00001a46 <__divmodhi4>:
__divmodhi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1440
    1a46:	97 fb       	bst	r25, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1441
    1a48:	07 2e       	mov	r0, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1442
    1a4a:	16 f4       	brtc	.+4      	; 0x1a50 <__divmodhi4+0xa>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1443
    1a4c:	00 94       	com	r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1444
    1a4e:	06 d0       	rcall	.+12     	; 0x1a5c <__divmodhi4_neg1>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1446
    1a50:	77 fd       	sbrc	r23, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1447
    1a52:	08 d0       	rcall	.+16     	; 0x1a64 <__divmodhi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1448
    1a54:	11 d0       	rcall	.+34     	; 0x1a78 <__udivmodhi4>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1449
    1a56:	07 fc       	sbrc	r0, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1450
    1a58:	05 d0       	rcall	.+10     	; 0x1a64 <__divmodhi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1451
    1a5a:	3e f4       	brtc	.+14     	; 0x1a6a <__divmodhi4_exit>

00001a5c <__divmodhi4_neg1>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1454
    1a5c:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1455
    1a5e:	81 95       	neg	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1456
    1a60:	9f 4f       	sbci	r25, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1457
    1a62:	08 95       	ret

00001a64 <__divmodhi4_neg2>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1460
    1a64:	70 95       	com	r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1461
    1a66:	61 95       	neg	r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1462
    1a68:	7f 4f       	sbci	r23, 0xFF	; 255

00001a6a <__divmodhi4_exit>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1464
    1a6a:	08 95       	ret

00001a6c <__usmulhisi3>:
__usmulhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:545
    1a6c:	d1 df       	rcall	.-94     	; 0x1a10 <__umulhisi3>

00001a6e <__usmulhisi3_tail>:
__usmulhisi3_tail():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:551
    1a6e:	b7 ff       	sbrs	r27, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:552
    1a70:	08 95       	ret
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:553
    1a72:	82 1b       	sub	r24, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:554
    1a74:	93 0b       	sbc	r25, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:555
    1a76:	08 95       	ret

00001a78 <__udivmodhi4>:
__udivmodhi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1408
    1a78:	aa 1b       	sub	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1409
    1a7a:	bb 1b       	sub	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1410
    1a7c:	51 e1       	ldi	r21, 0x11	; 17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1411
    1a7e:	07 c0       	rjmp	.+14     	; 0x1a8e <__udivmodhi4_ep>

00001a80 <__udivmodhi4_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1413
    1a80:	aa 1f       	adc	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1414
    1a82:	bb 1f       	adc	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1415
    1a84:	a6 17       	cp	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1416
    1a86:	b7 07       	cpc	r27, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1417
    1a88:	10 f0       	brcs	.+4      	; 0x1a8e <__udivmodhi4_ep>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1418
    1a8a:	a6 1b       	sub	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1419
    1a8c:	b7 0b       	sbc	r27, r23

00001a8e <__udivmodhi4_ep>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1421
    1a8e:	88 1f       	adc	r24, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1422
    1a90:	99 1f       	adc	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1423
    1a92:	5a 95       	dec	r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1424
    1a94:	a9 f7       	brne	.-22     	; 0x1a80 <__udivmodhi4_loop>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1425
    1a96:	80 95       	com	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1426
    1a98:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1428
    1a9a:	bc 01       	movw	r22, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1430
    1a9c:	cd 01       	movw	r24, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1432
    1a9e:	08 95       	ret

00001aa0 <__tablejump2__>:
__tablejump2__():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2296
    1aa0:	ee 0f       	add	r30, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2297
    1aa2:	ff 1f       	adc	r31, r31
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2328
    1aa4:	05 90       	lpm	r0, Z+
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2329
    1aa6:	f4 91       	lpm	r31, Z
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2330
    1aa8:	e0 2d       	mov	r30, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2331
    1aaa:	09 94       	ijmp

00001aac <abort>:
abort():
    1aac:	81 e0       	ldi	r24, 0x01	; 1
    1aae:	90 e0       	ldi	r25, 0x00	; 0
    1ab0:	f8 94       	cli
    1ab2:	00 c0       	rjmp	.+0      	; 0x1ab4 <_exit>

00001ab4 <_exit>:
exit():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2278
    1ab4:	f8 94       	cli

00001ab6 <__stop_program>:
__stop_program():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2280
    1ab6:	ff cf       	rjmp	.-2      	; 0x1ab6 <__stop_program>
