
C:\Users\user\AppData\Local\Temp\arduino_build_550825/LedDriver2.ino.elf:     file format elf32-avr


Disassembly of section .text:

00000000 <__vectors>:
__vectors():
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	69 c0       	rjmp	.+210    	; 0xd6 <__bad_interrupt>
       4:	68 c0       	rjmp	.+208    	; 0xd6 <__bad_interrupt>
       6:	67 c0       	rjmp	.+206    	; 0xd6 <__bad_interrupt>
       8:	66 c0       	rjmp	.+204    	; 0xd6 <__bad_interrupt>
       a:	65 c0       	rjmp	.+202    	; 0xd6 <__bad_interrupt>
       c:	64 c0       	rjmp	.+200    	; 0xd6 <__bad_interrupt>
       e:	63 c0       	rjmp	.+198    	; 0xd6 <__bad_interrupt>
      10:	62 c0       	rjmp	.+196    	; 0xd6 <__bad_interrupt>
      12:	40 c5       	rjmp	.+2688   	; 0xa94 <__vector_9>
      14:	60 c0       	rjmp	.+192    	; 0xd6 <__bad_interrupt>
      16:	5f c0       	rjmp	.+190    	; 0xd6 <__bad_interrupt>
      18:	5e c0       	rjmp	.+188    	; 0xd6 <__bad_interrupt>
      1a:	5d c0       	rjmp	.+186    	; 0xd6 <__bad_interrupt>
      1c:	5c c0       	rjmp	.+184    	; 0xd6 <__bad_interrupt>
      1e:	5b c0       	rjmp	.+182    	; 0xd6 <__bad_interrupt>
      20:	5a c0       	rjmp	.+180    	; 0xd6 <__bad_interrupt>
      22:	59 c0       	rjmp	.+178    	; 0xd6 <__bad_interrupt>
      24:	58 c0       	rjmp	.+176    	; 0xd6 <__bad_interrupt>

00000026 <__trampolines_end>:
__trampolines_start():
      26:	00 00       	nop
      28:	00 00       	nop
      2a:	38 00       	.word	0x0038	; ????
      2c:	35 00       	.word	0x0035	; ????
      2e:	32 00       	.word	0x0032	; ????

00000030 <port_to_mode_PGM>:
      30:	00 00 00 00 37 00 34 00 31 00                       ....7.4.1.

0000003a <port_to_input_PGM>:
      3a:	00 00 00 00 36 00 33 00 30 00                       ....6.3.0.

00000044 <digital_pin_to_port_PGM>:
      44:	04 04 04 04 04 04 04 04 02 02 02 02 02 02 03 03     ................
      54:	03 03 03 03 02 02 03                                .......

0000005b <digital_pin_to_bit_mask_PGM>:
      5b:	01 02 04 08 10 20 40 80 01 02 04 08 10 20 01 02     ..... @...... ..
      6b:	04 08 10 20 40 80 40                                ... @.@

00000072 <digital_pin_to_timer_PGM>:
	...
      7a:	00 04 05 07 00 00 00 00 00 00 00 00 00 00 00 00     ................

0000008a <__ctors_start>:
__ctors_start():
      8a:	48 0c       	add	r4, r8

0000008c <__ctors_end>:
__dtors_end():
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf e5       	ldi	r28, 0x5F	; 95
      92:	d4 e0       	ldi	r29, 0x04	; 4
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
__do_copy_data():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2409
      98:	10 e0       	ldi	r17, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2410
      9a:	a0 e6       	ldi	r26, 0x60	; 96
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2411
      9c:	b0 e0       	ldi	r27, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2412
      9e:	e0 e3       	ldi	r30, 0x30	; 48
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2413
      a0:	fb e1       	ldi	r31, 0x1B	; 27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2414
      a2:	02 c0       	rjmp	.+4      	; 0xa8 <__do_copy_data+0x10>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2417
      a4:	05 90       	lpm	r0, Z+
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2422
      a6:	0d 92       	st	X+, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2424
      a8:	a0 3a       	cpi	r26, 0xA0	; 160
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2425
      aa:	b1 07       	cpc	r27, r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2426
      ac:	d9 f7       	brne	.-10     	; 0xa4 <__do_copy_data+0xc>

000000ae <__do_clear_bss>:
__do_clear_bss():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2441
      ae:	21 e0       	ldi	r18, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2442
      b0:	a0 ea       	ldi	r26, 0xA0	; 160
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2443
      b2:	b0 e0       	ldi	r27, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2444
      b4:	01 c0       	rjmp	.+2      	; 0xb8 <.do_clear_bss_start>

000000b6 <.do_clear_bss_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2446
      b6:	1d 92       	st	X+, r1

000000b8 <.do_clear_bss_start>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2448
      b8:	a6 33       	cpi	r26, 0x36	; 54
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2449
      ba:	b2 07       	cpc	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2450
      bc:	e1 f7       	brne	.-8      	; 0xb6 <.do_clear_bss_loop>

000000be <__do_global_ctors>:
__do_global_ctors():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2466
      be:	10 e0       	ldi	r17, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2467
      c0:	c6 e4       	ldi	r28, 0x46	; 70
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2468
      c2:	d0 e0       	ldi	r29, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2472
      c4:	03 c0       	rjmp	.+6      	; 0xcc <__do_global_ctors+0xe>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2474
      c6:	21 97       	sbiw	r28, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2480
      c8:	fe 01       	movw	r30, r28
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2481
      ca:	26 dd       	rcall	.-1460   	; 0xfffffb18 <__eeprom_end+0xff7efb18>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2483
      cc:	c5 34       	cpi	r28, 0x45	; 69
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2484
      ce:	d1 07       	cpc	r29, r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2489
      d0:	d1 f7       	brne	.-12     	; 0xc6 <__do_global_ctors+0x8>
      d2:	2a d5       	rcall	.+2644   	; 0xb28 <main>
      d4:	2b cd       	rjmp	.-1450   	; 0xfffffb2c <__eeprom_end+0xff7efb2c>

000000d6 <__bad_interrupt>:
__vector_1():
      d6:	94 cf       	rjmp	.-216    	; 0x0 <__vectors>

000000d8 <digitalRead.constprop.10>:
digitalRead.constprop.10():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:216
  SREG = oldSREG;
}

int digitalRead(uint8_t pin)
{
  uint8_t timer = digitalPinToTimer(pin);
      d8:	e0 e8       	ldi	r30, 0x80	; 128
      da:	f0 e0       	ldi	r31, 0x00	; 0
      dc:	84 91       	lpm	r24, Z
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:217
  uint8_t bit = digitalPinToBitMask(pin);
      de:	e9 e6       	ldi	r30, 0x69	; 105
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	94 91       	lpm	r25, Z
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:218
  uint8_t port = digitalPinToPort(pin);
      e4:	e2 e5       	ldi	r30, 0x52	; 82
      e6:	f0 e0       	ldi	r31, 0x00	; 0
      e8:	e4 91       	lpm	r30, Z
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:220

  if (port == NOT_A_PIN) return LOW;
      ea:	ee 23       	and	r30, r30
      ec:	01 f1       	breq	.+64     	; 0x12e <digitalRead.constprop.10+0x56>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:224

  // If the pin that support PWM output, we need to turn it off
  // before getting a digital reading.
  if (timer != NOT_ON_TIMER) turnOffPWM(timer);
      ee:	88 23       	and	r24, r24
      f0:	49 f0       	breq	.+18     	; 0x104 <digitalRead.constprop.10+0x2c>
turnOffPWM():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:77
//
//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));
//static inline void turnOffPWM(uint8_t timer)
static void turnOffPWM(uint8_t timer)
{
  switch (timer)
      f2:	85 30       	cpi	r24, 0x05	; 5
      f4:	a9 f0       	breq	.+42     	; 0x120 <digitalRead.constprop.10+0x48>
      f6:	87 30       	cpi	r24, 0x07	; 7
      f8:	b1 f0       	breq	.+44     	; 0x126 <digitalRead.constprop.10+0x4e>
      fa:	84 30       	cpi	r24, 0x04	; 4
      fc:	19 f4       	brne	.+6      	; 0x104 <digitalRead.constprop.10+0x2c>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:82
  {
    // Timer1
    #if defined(TCCR1A) && defined(COM1A1)
      case TIMER1A:
        TCCR1A &= ~_BV(COM1A1);
      fe:	8f b5       	in	r24, 0x2f	; 47
     100:	8f 77       	andi	r24, 0x7F	; 127
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:87
        break;
    #endif
    #if defined(TCCR1A) && defined(COM1B1)
      case TIMER1B:
        TCCR1A &= ~_BV(COM1B1);
     102:	8f bd       	out	0x2f, r24	; 47
digitalRead.constprop.10():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:226

  // If the pin that support PWM output, we need to turn it off
  // before getting a digital reading.
  if (timer != NOT_ON_TIMER) turnOffPWM(timer);

  if (*portInputRegister(port) & bit) return HIGH;
     104:	f0 e0       	ldi	r31, 0x00	; 0
     106:	ee 0f       	add	r30, r30
     108:	ff 1f       	adc	r31, r31
     10a:	e6 5c       	subi	r30, 0xC6	; 198
     10c:	ff 4f       	sbci	r31, 0xFF	; 255
     10e:	a5 91       	lpm	r26, Z+
     110:	b4 91       	lpm	r27, Z
     112:	ec 91       	ld	r30, X
     114:	e9 23       	and	r30, r25
     116:	81 e0       	ldi	r24, 0x01	; 1
     118:	90 e0       	ldi	r25, 0x00	; 0
     11a:	59 f4       	brne	.+22     	; 0x132 <digitalRead.constprop.10+0x5a>
     11c:	80 e0       	ldi	r24, 0x00	; 0
     11e:	08 95       	ret
turnOffPWM():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:87
        TCCR1A &= ~_BV(COM1A1);
        break;
    #endif
    #if defined(TCCR1A) && defined(COM1B1)
      case TIMER1B:
        TCCR1A &= ~_BV(COM1B1);
     120:	8f b5       	in	r24, 0x2f	; 47
     122:	8f 7d       	andi	r24, 0xDF	; 223
     124:	ee cf       	rjmp	.-36     	; 0x102 <digitalRead.constprop.10+0x2a>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:99
    #endif
    
    // Timer2
    #if defined(TCCR2) && defined(COM21)
      case TIMER2:
        TCCR2 &= ~_BV(COM21);
     126:	85 b5       	in	r24, 0x25	; 37
     128:	8f 7d       	andi	r24, 0xDF	; 223
     12a:	85 bd       	out	0x25, r24	; 37
     12c:	eb cf       	rjmp	.-42     	; 0x104 <digitalRead.constprop.10+0x2c>
digitalRead.constprop.10():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:220
{
  uint8_t timer = digitalPinToTimer(pin);
  uint8_t bit = digitalPinToBitMask(pin);
  uint8_t port = digitalPinToPort(pin);

  if (port == NOT_A_PIN) return LOW;
     12e:	80 e0       	ldi	r24, 0x00	; 0
     130:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:228
  // before getting a digital reading.
  if (timer != NOT_ON_TIMER) turnOffPWM(timer);

  if (*portInputRegister(port) & bit) return HIGH;
  return LOW;
}
     132:	08 95       	ret

00000134 <ClocklessController<(unsigned char)11, 2, 5, 3, (EOrder)66, 0, false, 10>::getMaxRefreshRate() const>:
_ZNK19ClocklessControllerILh11ELi2ELi5ELi3EL6EOrder66ELi0ELb0ELi10EE17getMaxRefreshRateEv():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:117
public:
	virtual void init() {
		FastPin<DATA_PIN>::setOutput();
	}

	virtual uint16_t getMaxRefreshRate() const { return 400; }
     134:	80 e9       	ldi	r24, 0x90	; 144
     136:	91 e0       	ldi	r25, 0x01	; 1
     138:	08 95       	ret

0000013a <micros>:
micros():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:237
  unsigned char f; // temporary storage for millis fraction counter
  unsigned char q = 0; // record whether an overflow is flagged
#endif
  // t will be the number where the timer0 counter stopped
  uint8_t t;
  uint8_t oldSREG = SREG;
     13a:	3f b7       	in	r19, 0x3f	; 63
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:240

  // Stop all interrupts
  cli();
     13c:	f8 94       	cli
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:247
#ifdef CORRECT_EXACT_MICROS
  // combine exact millisec and 8usec counters
  m = timer0_millis;
  f = timer0_fract;
#else
  m = timer0_overflow_count;
     13e:	80 91 a3 00 	lds	r24, 0x00A3	; 0x8000a3 <timer0_overflow_count>
     142:	90 91 a4 00 	lds	r25, 0x00A4	; 0x8000a4 <timer0_overflow_count+0x1>
     146:	a0 91 a5 00 	lds	r26, 0x00A5	; 0x8000a5 <timer0_overflow_count+0x2>
     14a:	b0 91 a6 00 	lds	r27, 0x00A6	; 0x8000a6 <timer0_overflow_count+0x3>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:252
#endif

  // TCNT0 : The Timer Counter Register
#if defined(TCNT0)
  t = TCNT0;
     14e:	22 b7       	in	r18, 0x32	; 50
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:268
    m++;
#else
    q = 1;
#endif
#else
  if ((TIFR & _BV(TOV0)) && (t < 255))
     150:	08 b6       	in	r0, 0x38	; 56
     152:	00 fe       	sbrs	r0, 0
     154:	05 c0       	rjmp	.+10     	; 0x160 <micros+0x26>
     156:	2f 3f       	cpi	r18, 0xFF	; 255
     158:	19 f0       	breq	.+6      	; 0x160 <micros+0x26>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:270
#ifndef CORRECT_EXACT_MICROS
    m++;
     15a:	01 96       	adiw	r24, 0x01	; 1
     15c:	a1 1d       	adc	r26, r1
     15e:	b1 1d       	adc	r27, r1
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:276
#else
    q = 1;
#endif
#endif
  // Restore SREG
  SREG = oldSREG;
     160:	3f bf       	out	0x3f, r19	; 63
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:292
      ((t * MICROSECONDS_PER_TIMER0_OVERFLOW) >> 8);
  return q ? m + MICROSECONDS_PER_TIMER0_OVERFLOW : m;
#elif 1
  /* All power-of-two Megahertz frequencies enter here, as well as 12.8 MHz.
     We only end up here if right shift before multiplication is exact. */
  return ((m << 8) + t) * (MICROSECONDS_PER_TIMER0_OVERFLOW >> 8);
     162:	ba 2f       	mov	r27, r26
     164:	a9 2f       	mov	r26, r25
     166:	98 2f       	mov	r25, r24
     168:	88 27       	eor	r24, r24
     16a:	bc 01       	movw	r22, r24
     16c:	cd 01       	movw	r24, r26
     16e:	62 0f       	add	r22, r18
     170:	71 1d       	adc	r23, r1
     172:	81 1d       	adc	r24, r1
     174:	91 1d       	adc	r25, r1
     176:	43 e0       	ldi	r20, 0x03	; 3
     178:	66 0f       	add	r22, r22
     17a:	77 1f       	adc	r23, r23
     17c:	88 1f       	adc	r24, r24
     17e:	99 1f       	adc	r25, r25
     180:	4a 95       	dec	r20
     182:	d1 f7       	brne	.-12     	; 0x178 <micros+0x3e>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:393
  // m & t are multiplied by 4 (since it was already multiplied by 256)
  // t is multiplied by 4
  return ((m << 8) + t) * (64 / clockCyclesPerMicrosecond());
#endif
#endif // 0
}
     184:	08 95       	ret

00000186 <CFastLED::show() [clone .constprop.13]>:
_ZN8CFastLED4showEv.constprop.13():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.h:573
	/// Update all our controllers with the current led colors, using the passed in brightness
	/// @param scale the brightness value to use in place of the stored value
	void show(uint8_t scale);

	/// Update all our controllers with the current led colors
	void show() { show(m_Scale); }
     186:	4f 92       	push	r4
     188:	5f 92       	push	r5
     18a:	6f 92       	push	r6
     18c:	7f 92       	push	r7
     18e:	9f 92       	push	r9
     190:	af 92       	push	r10
     192:	bf 92       	push	r11
     194:	cf 92       	push	r12
     196:	df 92       	push	r13
     198:	ef 92       	push	r14
     19a:	ff 92       	push	r15
     19c:	0f 93       	push	r16
     19e:	1f 93       	push	r17
     1a0:	cf 93       	push	r28
     1a2:	df 93       	push	r29
     1a4:	00 d0       	rcall	.+0      	; 0x1a6 <CFastLED::show() [clone .constprop.13]+0x20>
     1a6:	1f 92       	push	r1
     1a8:	cd b7       	in	r28, 0x3d	; 61
     1aa:	de b7       	in	r29, 0x3e	; 62
     1ac:	d0 90 29 01 	lds	r13, 0x0129	; 0x800129 <FastLED>
show():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:56
	return *pLed;
}

void CFastLED::show(uint8_t scale) {
	// guard against showing too rapidly
	while(m_nMinMicros && ((micros()-lastshow) < m_nMinMicros));
     1b0:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <FastLED+0x3>
     1b4:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <FastLED+0x4>
     1b8:	a0 91 2e 01 	lds	r26, 0x012E	; 0x80012e <FastLED+0x5>
     1bc:	b0 91 2f 01 	lds	r27, 0x012F	; 0x80012f <FastLED+0x6>
     1c0:	89 2b       	or	r24, r25
     1c2:	8a 2b       	or	r24, r26
     1c4:	8b 2b       	or	r24, r27
     1c6:	d1 f0       	breq	.+52     	; 0x1fc <CFastLED::show() [clone .constprop.13]+0x76>
     1c8:	b8 df       	rcall	.-144    	; 0x13a <micros>
     1ca:	00 91 25 01 	lds	r16, 0x0125	; 0x800125 <lastshow>
     1ce:	10 91 26 01 	lds	r17, 0x0126	; 0x800126 <lastshow+0x1>
     1d2:	20 91 27 01 	lds	r18, 0x0127	; 0x800127 <lastshow+0x2>
     1d6:	30 91 28 01 	lds	r19, 0x0128	; 0x800128 <lastshow+0x3>
     1da:	60 1b       	sub	r22, r16
     1dc:	71 0b       	sbc	r23, r17
     1de:	82 0b       	sbc	r24, r18
     1e0:	93 0b       	sbc	r25, r19
     1e2:	00 91 2c 01 	lds	r16, 0x012C	; 0x80012c <FastLED+0x3>
     1e6:	10 91 2d 01 	lds	r17, 0x012D	; 0x80012d <FastLED+0x4>
     1ea:	20 91 2e 01 	lds	r18, 0x012E	; 0x80012e <FastLED+0x5>
     1ee:	30 91 2f 01 	lds	r19, 0x012F	; 0x80012f <FastLED+0x6>
     1f2:	60 17       	cp	r22, r16
     1f4:	71 07       	cpc	r23, r17
     1f6:	82 07       	cpc	r24, r18
     1f8:	93 07       	cpc	r25, r19
     1fa:	d0 f2       	brcs	.-76     	; 0x1b0 <CFastLED::show() [clone .constprop.13]+0x2a>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:57
	lastshow = micros();
     1fc:	9e df       	rcall	.-196    	; 0x13a <micros>
     1fe:	60 93 25 01 	sts	0x0125, r22	; 0x800125 <lastshow>
     202:	70 93 26 01 	sts	0x0126, r23	; 0x800126 <lastshow+0x1>
     206:	80 93 27 01 	sts	0x0127, r24	; 0x800127 <lastshow+0x2>
     20a:	90 93 28 01 	sts	0x0128, r25	; 0x800128 <lastshow+0x3>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:60

	// If we have a function for computing power, use it!
	if(m_pPowerFunc) {
     20e:	e0 91 34 01 	lds	r30, 0x0134	; 0x800134 <FastLED+0xb>
     212:	f0 91 35 01 	lds	r31, 0x0135	; 0x800135 <FastLED+0xc>
     216:	30 97       	sbiw	r30, 0x00	; 0
     218:	59 f0       	breq	.+22     	; 0x230 <CFastLED::show() [clone .constprop.13]+0xaa>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:61
		scale = (*m_pPowerFunc)(scale, m_nPowerData);
     21a:	40 91 30 01 	lds	r20, 0x0130	; 0x800130 <FastLED+0x7>
     21e:	50 91 31 01 	lds	r21, 0x0131	; 0x800131 <FastLED+0x8>
     222:	60 91 32 01 	lds	r22, 0x0132	; 0x800132 <FastLED+0x9>
     226:	70 91 33 01 	lds	r23, 0x0133	; 0x800133 <FastLED+0xa>
     22a:	8d 2d       	mov	r24, r13
     22c:	09 95       	icall
     22e:	d8 2e       	mov	r13, r24
_ZN14CLEDController4headEv():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:141
        showColor(data, m_nLeds, getAdjustment(brightness));
    }

    /// Get the first LED controller in the linked list of controllers
    /// @returns CLEDController::m_pHead
    static CLEDController *head() { return m_pHead; }
     230:	e0 90 23 01 	lds	r14, 0x0123	; 0x800123 <CLEDController::m_pHead>
     234:	f0 90 24 01 	lds	r15, 0x0124	; 0x800124 <CLEDController::m_pHead+0x1>
computeAdjustment():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:236
              if(scale > 0) {
                  for(uint8_t i = 0; i < 3; ++i) {
                      uint8_t cc = colorCorrection.raw[i];
                      uint8_t ct = colorTemperature.raw[i];
                      if(cc > 0 && ct > 0) {
                          uint32_t work = (((uint32_t)cc)+1) * (((uint32_t)ct)+1) * scale;
     238:	4d 2c       	mov	r4, r13
     23a:	51 2c       	mov	r5, r1
     23c:	71 2c       	mov	r7, r1
     23e:	61 2c       	mov	r6, r1
show():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:65
	}

	CLEDController *pCur = CLEDController::head();
	while(pCur) {
     240:	e1 14       	cp	r14, r1
     242:	f1 04       	cpc	r15, r1
     244:	09 f4       	brne	.+2      	; 0x248 <CFastLED::show() [clone .constprop.13]+0xc2>
     246:	57 c0       	rjmp	.+174    	; 0x2f6 <CFastLED::show() [clone .constprop.13]+0x170>
     248:	d7 01       	movw	r26, r14
     24a:	1c 96       	adiw	r26, 0x0c	; 12
     24c:	cc 90       	ld	r12, X
     24e:	1c 97       	sbiw	r26, 0x0c	; 12
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:67
		uint8_t d = pCur->getDither();
		if(m_nFPS < 100) { pCur->setDither(0); }
     250:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <FastLED+0x1>
     254:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <FastLED+0x2>
     258:	84 36       	cpi	r24, 0x64	; 100
     25a:	91 05       	cpc	r25, r1
     25c:	10 f4       	brcc	.+4      	; 0x262 <CFastLED::show() [clone .constprop.13]+0xdc>
_ZN14CLEDController9setDitherEh():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:183
    CRGB &operator[](int x) { return m_Data[x]; }

    /// Set the dithering mode for this controller to use
    /// @param ditherMode the dithering mode to set
    /// @returns a reference to the controller
    inline CLEDController & setDither(uint8_t ditherMode = BINARY_DITHER) { m_DitherMode = ditherMode; return *this; }
     25e:	1c 96       	adiw	r26, 0x0c	; 12
     260:	1c 92       	st	X, r1
showLeds():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:127

    /// Write the data to the LEDs managed by this controller
    /// @param brightness the brightness of the LEDs
    /// @see show(const struct CRGB*, int, uint8_t)
    void showLeds(uint8_t brightness=255) {
        show(m_Data, m_nLeds, getAdjustment(brightness));
     262:	d7 01       	movw	r26, r14
     264:	ed 91       	ld	r30, X+
     266:	fc 91       	ld	r31, X
     268:	a2 80       	ldd	r10, Z+2	; 0x02
     26a:	b3 80       	ldd	r11, Z+3	; 0x03
_ZN4CRGBC2Ehhh():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:169
    /// Allow construction from red, green, and blue
    /// @param ir input red value
    /// @param ig input green value
    /// @param ib input blue value
    inline CRGB( uint8_t ir, uint8_t ig, uint8_t ib)  __attribute__((always_inline))
        : r(ir), g(ig), b(ib)
     26c:	19 82       	std	Y+1, r1	; 0x01
     26e:	1a 82       	std	Y+2, r1	; 0x02
     270:	1b 82       	std	Y+3, r1	; 0x03
computeAdjustment():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:231
      #if defined(NO_CORRECTION) && (NO_CORRECTION==1)
              return CRGB(scale,scale,scale);
      #else
              CRGB adj(0,0,0);

              if(scale > 0) {
     272:	dd 20       	and	r13, r13
     274:	69 f1       	breq	.+90     	; 0x2d0 <CFastLED::show() [clone .constprop.13]+0x14a>
     276:	f7 01       	movw	r30, r14
     278:	36 96       	adiw	r30, 0x06	; 6
     27a:	10 e0       	ldi	r17, 0x00	; 0
     27c:	00 e0       	ldi	r16, 0x00	; 0
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:233
                  for(uint8_t i = 0; i < 3; ++i) {
                      uint8_t cc = colorCorrection.raw[i];
     27e:	21 91       	ld	r18, Z+
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:235
                      uint8_t ct = colorTemperature.raw[i];
                      if(cc > 0 && ct > 0) {
     280:	22 23       	and	r18, r18
     282:	09 f1       	breq	.+66     	; 0x2c6 <CFastLED::show() [clone .constprop.13]+0x140>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:234
              CRGB adj(0,0,0);

              if(scale > 0) {
                  for(uint8_t i = 0; i < 3; ++i) {
                      uint8_t cc = colorCorrection.raw[i];
                      uint8_t ct = colorTemperature.raw[i];
     284:	92 80       	ldd	r9, Z+2	; 0x02
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:235
                      if(cc > 0 && ct > 0) {
     286:	99 20       	and	r9, r9
     288:	f1 f0       	breq	.+60     	; 0x2c6 <CFastLED::show() [clone .constprop.13]+0x140>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:236
                          uint32_t work = (((uint32_t)cc)+1) * (((uint32_t)ct)+1) * scale;
     28a:	30 e0       	ldi	r19, 0x00	; 0
     28c:	50 e0       	ldi	r21, 0x00	; 0
     28e:	40 e0       	ldi	r20, 0x00	; 0
     290:	2f 5f       	subi	r18, 0xFF	; 255
     292:	3f 4f       	sbci	r19, 0xFF	; 255
     294:	4f 4f       	sbci	r20, 0xFF	; 255
     296:	5f 4f       	sbci	r21, 0xFF	; 255
     298:	c3 01       	movw	r24, r6
     29a:	b2 01       	movw	r22, r4
     29c:	01 dc       	rcall	.-2046   	; 0xfffffaa0 <__eeprom_end+0xff7efaa0>
     29e:	9b 01       	movw	r18, r22
     2a0:	ac 01       	movw	r20, r24
     2a2:	89 2d       	mov	r24, r9
     2a4:	90 e0       	ldi	r25, 0x00	; 0
     2a6:	b0 e0       	ldi	r27, 0x00	; 0
     2a8:	a0 e0       	ldi	r26, 0x00	; 0
     2aa:	bc 01       	movw	r22, r24
     2ac:	cd 01       	movw	r24, r26
     2ae:	6f 5f       	subi	r22, 0xFF	; 255
     2b0:	7f 4f       	sbci	r23, 0xFF	; 255
     2b2:	8f 4f       	sbci	r24, 0xFF	; 255
     2b4:	9f 4f       	sbci	r25, 0xFF	; 255
     2b6:	f4 db       	rcall	.-2072   	; 0xfffffaa0 <__eeprom_end+0xff7efaa0>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:238
                          work /= 0x10000L;
                          adj.raw[i] = work & 0xFF;
     2b8:	a1 e0       	ldi	r26, 0x01	; 1
     2ba:	b0 e0       	ldi	r27, 0x00	; 0
     2bc:	ac 0f       	add	r26, r28
     2be:	bd 1f       	adc	r27, r29
     2c0:	a0 0f       	add	r26, r16
     2c2:	b1 1f       	adc	r27, r17
     2c4:	8c 93       	st	X, r24
     2c6:	0f 5f       	subi	r16, 0xFF	; 255
     2c8:	1f 4f       	sbci	r17, 0xFF	; 255
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:232
              return CRGB(scale,scale,scale);
      #else
              CRGB adj(0,0,0);

              if(scale > 0) {
                  for(uint8_t i = 0; i < 3; ++i) {
     2ca:	03 30       	cpi	r16, 0x03	; 3
     2cc:	11 05       	cpc	r17, r1
     2ce:	b9 f6       	brne	.-82     	; 0x27e <CFastLED::show() [clone .constprop.13]+0xf8>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:243
                          adj.raw[i] = work & 0xFF;
                      }
                  }
              }

              return adj;
     2d0:	09 81       	ldd	r16, Y+1	; 0x01
     2d2:	1a 81       	ldd	r17, Y+2	; 0x02
     2d4:	2b 81       	ldd	r18, Y+3	; 0x03
showLeds():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:127

    /// Write the data to the LEDs managed by this controller
    /// @param brightness the brightness of the LEDs
    /// @see show(const struct CRGB*, int, uint8_t)
    void showLeds(uint8_t brightness=255) {
        show(m_Data, m_nLeds, getAdjustment(brightness));
     2d6:	f7 01       	movw	r30, r14
     2d8:	45 85       	ldd	r20, Z+13	; 0x0d
     2da:	56 85       	ldd	r21, Z+14	; 0x0e
     2dc:	62 81       	ldd	r22, Z+2	; 0x02
     2de:	73 81       	ldd	r23, Z+3	; 0x03
     2e0:	c7 01       	movw	r24, r14
     2e2:	f5 01       	movw	r30, r10
     2e4:	09 95       	icall
_ZN14CLEDController9setDitherEh():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:183
    CRGB &operator[](int x) { return m_Data[x]; }

    /// Set the dithering mode for this controller to use
    /// @param ditherMode the dithering mode to set
    /// @returns a reference to the controller
    inline CLEDController & setDither(uint8_t ditherMode = BINARY_DITHER) { m_DitherMode = ditherMode; return *this; }
     2e6:	d7 01       	movw	r26, r14
     2e8:	1c 96       	adiw	r26, 0x0c	; 12
     2ea:	cc 92       	st	X, r12
     2ec:	1c 97       	sbiw	r26, 0x0c	; 12
     2ee:	14 96       	adiw	r26, 0x04	; 4
     2f0:	ed 90       	ld	r14, X+
     2f2:	fc 90       	ld	r15, X
     2f4:	a5 cf       	rjmp	.-182    	; 0x240 <CFastLED::show() [clone .constprop.13]+0xba>
countFPS():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:225

void CFastLED::countFPS(int nFrames) {
	static int br = 0;
	static uint32_t lastframe = 0; // millis();

	if(br++ >= nFrames) {
     2f6:	80 91 21 01 	lds	r24, 0x0121	; 0x800121 <CFastLED::countFPS(int)::br>
     2fa:	90 91 22 01 	lds	r25, 0x0122	; 0x800122 <CFastLED::countFPS(int)::br+0x1>
     2fe:	9c 01       	movw	r18, r24
     300:	2f 5f       	subi	r18, 0xFF	; 255
     302:	3f 4f       	sbci	r19, 0xFF	; 255
     304:	30 93 22 01 	sts	0x0122, r19	; 0x800122 <CFastLED::countFPS(int)::br+0x1>
     308:	20 93 21 01 	sts	0x0121, r18	; 0x800121 <CFastLED::countFPS(int)::br>
     30c:	49 97       	sbiw	r24, 0x19	; 25
     30e:	0c f4       	brge	.+2      	; 0x312 <CFastLED::show() [clone .constprop.13]+0x18c>
     310:	49 c0       	rjmp	.+146    	; 0x3a4 <CFastLED::show() [clone .constprop.13]+0x21e>
millis():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:218
}

unsigned long millis()
{
  unsigned long m;
  uint8_t oldSREG = SREG;
     312:	8f b7       	in	r24, 0x3f	; 63
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:222

  // disable interrupts while we read timer0_millis or we might get an
  // inconsistent value (e.g. in the middle of a write to timer0_millis)
  cli();
     314:	f8 94       	cli
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:223
  m = timer0_millis;
     316:	20 91 19 01 	lds	r18, 0x0119	; 0x800119 <timer0_millis>
     31a:	30 91 1a 01 	lds	r19, 0x011A	; 0x80011a <timer0_millis+0x1>
     31e:	40 91 1b 01 	lds	r20, 0x011B	; 0x80011b <timer0_millis+0x2>
     322:	50 91 1c 01 	lds	r21, 0x011C	; 0x80011c <timer0_millis+0x3>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:224
  SREG = oldSREG;
     326:	8f bf       	out	0x3f, r24	; 63
countFPS():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:227
		uint32_t now = millis();
		now -= lastframe;
     328:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <CFastLED::countFPS(int)::lastframe>
     32c:	90 91 1e 01 	lds	r25, 0x011E	; 0x80011e <CFastLED::countFPS(int)::lastframe+0x1>
     330:	a0 91 1f 01 	lds	r26, 0x011F	; 0x80011f <CFastLED::countFPS(int)::lastframe+0x2>
     334:	b0 91 20 01 	lds	r27, 0x0120	; 0x800120 <CFastLED::countFPS(int)::lastframe+0x3>
     338:	28 1b       	sub	r18, r24
     33a:	39 0b       	sbc	r19, r25
     33c:	4a 0b       	sbc	r20, r26
     33e:	5b 0b       	sbc	r21, r27
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:228
		if(now == 0) {
     340:	21 f4       	brne	.+8      	; 0x34a <CFastLED::show() [clone .constprop.13]+0x1c4>
_ZN8CFastLED4showEv.constprop.13():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:229
			now = 1; // prevent division by zero below
     342:	21 e0       	ldi	r18, 0x01	; 1
     344:	30 e0       	ldi	r19, 0x00	; 0
     346:	40 e0       	ldi	r20, 0x00	; 0
     348:	50 e0       	ldi	r21, 0x00	; 0
countFPS():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:231
		}
		m_nFPS = (br * 1000) / now;
     34a:	e0 91 21 01 	lds	r30, 0x0121	; 0x800121 <CFastLED::countFPS(int)::br>
     34e:	f0 91 22 01 	lds	r31, 0x0122	; 0x800122 <CFastLED::countFPS(int)::br+0x1>
     352:	88 ee       	ldi	r24, 0xE8	; 232
     354:	93 e0       	ldi	r25, 0x03	; 3
     356:	e8 9f       	mul	r30, r24
     358:	b0 01       	movw	r22, r0
     35a:	e9 9f       	mul	r30, r25
     35c:	70 0d       	add	r23, r0
     35e:	f8 9f       	mul	r31, r24
     360:	70 0d       	add	r23, r0
     362:	11 24       	eor	r1, r1
     364:	07 2e       	mov	r0, r23
     366:	00 0c       	add	r0, r0
     368:	88 0b       	sbc	r24, r24
     36a:	99 0b       	sbc	r25, r25
     36c:	6b db       	rcall	.-2346   	; 0xfffffa44 <__eeprom_end+0xff7efa44>
     36e:	30 93 2b 01 	sts	0x012B, r19	; 0x80012b <FastLED+0x2>
     372:	20 93 2a 01 	sts	0x012A, r18	; 0x80012a <FastLED+0x1>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:232
		br = 0;
     376:	10 92 22 01 	sts	0x0122, r1	; 0x800122 <CFastLED::countFPS(int)::br+0x1>
     37a:	10 92 21 01 	sts	0x0121, r1	; 0x800121 <CFastLED::countFPS(int)::br>
millis():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:218
}

unsigned long millis()
{
  unsigned long m;
  uint8_t oldSREG = SREG;
     37e:	2f b7       	in	r18, 0x3f	; 63
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:222

  // disable interrupts while we read timer0_millis or we might get an
  // inconsistent value (e.g. in the middle of a write to timer0_millis)
  cli();
     380:	f8 94       	cli
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:223
  m = timer0_millis;
     382:	80 91 19 01 	lds	r24, 0x0119	; 0x800119 <timer0_millis>
     386:	90 91 1a 01 	lds	r25, 0x011A	; 0x80011a <timer0_millis+0x1>
     38a:	a0 91 1b 01 	lds	r26, 0x011B	; 0x80011b <timer0_millis+0x2>
     38e:	b0 91 1c 01 	lds	r27, 0x011C	; 0x80011c <timer0_millis+0x3>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:224
  SREG = oldSREG;
     392:	2f bf       	out	0x3f, r18	; 63
countFPS():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:233
		lastframe = millis();
     394:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <CFastLED::countFPS(int)::lastframe>
     398:	90 93 1e 01 	sts	0x011E, r25	; 0x80011e <CFastLED::countFPS(int)::lastframe+0x1>
     39c:	a0 93 1f 01 	sts	0x011F, r26	; 0x80011f <CFastLED::countFPS(int)::lastframe+0x2>
     3a0:	b0 93 20 01 	sts	0x0120, r27	; 0x800120 <CFastLED::countFPS(int)::lastframe+0x3>
_ZN8CFastLED4showEv.constprop.13():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.h:573
     3a4:	0f 90       	pop	r0
     3a6:	0f 90       	pop	r0
     3a8:	0f 90       	pop	r0
     3aa:	df 91       	pop	r29
     3ac:	cf 91       	pop	r28
     3ae:	1f 91       	pop	r17
     3b0:	0f 91       	pop	r16
     3b2:	ff 90       	pop	r15
     3b4:	ef 90       	pop	r14
     3b6:	df 90       	pop	r13
     3b8:	cf 90       	pop	r12
     3ba:	bf 90       	pop	r11
     3bc:	af 90       	pop	r10
     3be:	9f 90       	pop	r9
     3c0:	7f 90       	pop	r7
     3c2:	6f 90       	pop	r6
     3c4:	5f 90       	pop	r5
     3c6:	4f 90       	pop	r4
     3c8:	08 95       	ret

000003ca <delay>:
delay():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:396
#endif
#endif // 0
}

void delay(unsigned long ms)
{
     3ca:	8f 92       	push	r8
     3cc:	9f 92       	push	r9
     3ce:	af 92       	push	r10
     3d0:	bf 92       	push	r11
     3d2:	cf 92       	push	r12
     3d4:	df 92       	push	r13
     3d6:	ef 92       	push	r14
     3d8:	ff 92       	push	r15
     3da:	4b 01       	movw	r8, r22
     3dc:	5c 01       	movw	r10, r24
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:397
  unsigned long start = micros();
     3de:	ad de       	rcall	.-678    	; 0x13a <micros>
     3e0:	6b 01       	movw	r12, r22
     3e2:	7c 01       	movw	r14, r24
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:401

  while (ms > 0UL) {
    yield();
    while (ms > 0UL && (micros() - start) >= 1000UL) {
     3e4:	aa de       	rcall	.-684    	; 0x13a <micros>
     3e6:	6c 19       	sub	r22, r12
     3e8:	7d 09       	sbc	r23, r13
     3ea:	8e 09       	sbc	r24, r14
     3ec:	9f 09       	sbc	r25, r15
     3ee:	68 3e       	cpi	r22, 0xE8	; 232
     3f0:	73 40       	sbci	r23, 0x03	; 3
     3f2:	81 05       	cpc	r24, r1
     3f4:	91 05       	cpc	r25, r1
     3f6:	b0 f3       	brcs	.-20     	; 0x3e4 <delay+0x1a>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:402
      ms--;
     3f8:	21 e0       	ldi	r18, 0x01	; 1
     3fa:	82 1a       	sub	r8, r18
     3fc:	91 08       	sbc	r9, r1
     3fe:	a1 08       	sbc	r10, r1
     400:	b1 08       	sbc	r11, r1
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:403
      start += 1000UL;
     402:	88 ee       	ldi	r24, 0xE8	; 232
     404:	c8 0e       	add	r12, r24
     406:	83 e0       	ldi	r24, 0x03	; 3
     408:	d8 1e       	adc	r13, r24
     40a:	e1 1c       	adc	r14, r1
     40c:	f1 1c       	adc	r15, r1
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:401
{
  unsigned long start = micros();

  while (ms > 0UL) {
    yield();
    while (ms > 0UL && (micros() - start) >= 1000UL) {
     40e:	81 14       	cp	r8, r1
     410:	91 04       	cpc	r9, r1
     412:	a1 04       	cpc	r10, r1
     414:	b1 04       	cpc	r11, r1
     416:	31 f7       	brne	.-52     	; 0x3e4 <delay+0x1a>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:406
      ms--;
      start += 1000UL;
    }
  }
}
     418:	ff 90       	pop	r15
     41a:	ef 90       	pop	r14
     41c:	df 90       	pop	r13
     41e:	cf 90       	pop	r12
     420:	bf 90       	pop	r11
     422:	af 90       	pop	r10
     424:	9f 90       	pop	r9
     426:	8f 90       	pop	r8
     428:	08 95       	ret

0000042a <PixelController<(EOrder)66, 1, 4294967295ul>::init_binary_dithering()>:
_ZN15PixelControllerIL6EOrder66ELi1ELm4294967295EE21init_binary_ditheringEv():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:372

#endif


        /// Set up the values for binary dithering
        void init_binary_dithering() {
     42a:	0f 93       	push	r16
     42c:	1f 93       	push	r17
     42e:	cf 93       	push	r28
     430:	df 93       	push	r29
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:376
#if !defined(NO_DITHERING) || (NO_DITHERING != 1)
            // R is the digther signal 'counter'.
            static uint8_t R = 0;
            ++R;
     432:	20 91 a1 00 	lds	r18, 0x00A1	; 0x8000a1 <PixelController<(EOrder)66, 1, 4294967295ul>::init_binary_dithering()::R>
     436:	2f 5f       	subi	r18, 0xFF	; 255
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:381

            // R is wrapped around at 2^ditherBits,
            // so if ditherBits is 2, R will cycle through (0,1,2,3)
            uint8_t ditherBits = VIRTUAL_BITS;
            R &= (0x01 << ditherBits) - 1;
     438:	32 2f       	mov	r19, r18
     43a:	37 70       	andi	r19, 0x07	; 7
     43c:	30 93 a1 00 	sts	0x00A1, r19	; 0x8000a1 <PixelController<(EOrder)66, 1, 4294967295ul>::init_binary_dithering()::R>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:390
            // If 'ditherBits' is 2, Q here will cycle through (0,128,64,192)
            uint8_t Q = 0;

            // Reverse bits in a byte
            {
                if(R & 0x01) { Q |= 0x80; }
     440:	20 ff       	sbrs	r18, 0
     442:	2a c0       	rjmp	.+84     	; 0x498 <__stack+0x39>
     444:	20 e8       	ldi	r18, 0x80	; 128
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:391
                if(R & 0x02) { Q |= 0x40; }
     446:	31 fd       	sbrc	r19, 1
     448:	20 64       	ori	r18, 0x40	; 64
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:392
                if(R & 0x04) { Q |= 0x20; }
     44a:	34 70       	andi	r19, 0x04	; 4
     44c:	09 f0       	breq	.+2      	; 0x450 <PixelController<(EOrder)66, 1, 4294967295ul>::init_binary_dithering()+0x26>
     44e:	20 62       	ori	r18, 0x20	; 32
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:405
            // Now we adjust Q to fall in the center of each range,
            // instead of at the start of the range.
            // If ditherBits is 2, Q will be (0, 128, 64, 192) at first,
            // and this adjustment makes it (31, 159, 95, 223).
            if( ditherBits < 8) {
                Q += 0x01 << (7 - ditherBits);
     450:	20 5f       	subi	r18, 0xF0	; 240
     452:	fc 01       	movw	r30, r24
     454:	ec 01       	movw	r28, r24
     456:	23 96       	adiw	r28, 0x03	; 3
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:415
            // actual dithering.

            // Setup the initial D and E values
            for(int i = 0; i < 3; ++i) {
                    uint8_t s = mScale.raw[i];
                    e[i] = s ? (256/s) + 1 : 0;
     458:	00 e0       	ldi	r16, 0x00	; 0
     45a:	11 e0       	ldi	r17, 0x01	; 1
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:414
            // which is added to pixel values to affect the
            // actual dithering.

            // Setup the initial D and E values
            for(int i = 0; i < 3; ++i) {
                    uint8_t s = mScale.raw[i];
     45c:	64 85       	ldd	r22, Z+12	; 0x0c
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:415
                    e[i] = s ? (256/s) + 1 : 0;
     45e:	66 23       	and	r22, r22
     460:	21 f0       	breq	.+8      	; 0x46a <__stack+0xb>
     462:	70 e0       	ldi	r23, 0x00	; 0
     464:	c8 01       	movw	r24, r16
     466:	2b db       	rcall	.-2474   	; 0xfffffabe <__eeprom_end+0xff7efabe>
     468:	6f 5f       	subi	r22, 0xFF	; 255
     46a:	61 87       	std	Z+9, r22	; 0x09
scale8():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/lib8tion/scale8.h:93
        "clr __zero_reg__    \n\t"

        : "+a" (i)      /* writes to i */
        : "a"  (scale)  /* uses scale */
        : "r0", "r1"    /* clobbers r0, r1 */
    );
     46c:	32 2f       	mov	r19, r18
     46e:	36 9f       	mul	r19, r22
     470:	03 0e       	add	r0, r19
     472:	30 e0       	ldi	r19, 0x00	; 0
     474:	31 1d       	adc	r19, r1
     476:	11 24       	eor	r1, r1
_ZN15PixelControllerIL6EOrder66ELi1ELm4294967295EE21init_binary_ditheringEv():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:418
                    d[i] = scale8(Q, e[i]);
#if (FASTLED_SCALE8_FIXED == 1)
                    if(d[i]) (--d[i]);
     478:	31 11       	cpse	r19, r1
     47a:	10 c0       	rjmp	.+32     	; 0x49c <__stack+0x3d>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:416

            // Setup the initial D and E values
            for(int i = 0; i < 3; ++i) {
                    uint8_t s = mScale.raw[i];
                    e[i] = s ? (256/s) + 1 : 0;
                    d[i] = scale8(Q, e[i]);
     47c:	16 82       	std	Z+6, r1	; 0x06
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:420
#if (FASTLED_SCALE8_FIXED == 1)
                    if(d[i]) (--d[i]);
#endif
                    if(e[i]) --e[i];
     47e:	66 23       	and	r22, r22
     480:	11 f0       	breq	.+4      	; 0x486 <__stack+0x27>
     482:	61 50       	subi	r22, 0x01	; 1
     484:	61 87       	std	Z+9, r22	; 0x09
     486:	31 96       	adiw	r30, 0x01	; 1
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:413
            // D and E form the "scaled dither signal"
            // which is added to pixel values to affect the
            // actual dithering.

            // Setup the initial D and E values
            for(int i = 0; i < 3; ++i) {
     488:	ec 17       	cp	r30, r28
     48a:	fd 07       	cpc	r31, r29
     48c:	39 f7       	brne	.-50     	; 0x45c <PixelController<(EOrder)66, 1, 4294967295ul>::init_binary_dithering()+0x32>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:423
                    if(d[i]) (--d[i]);
#endif
                    if(e[i]) --e[i];
            }
#endif
        }
     48e:	df 91       	pop	r29
     490:	cf 91       	pop	r28
     492:	1f 91       	pop	r17
     494:	0f 91       	pop	r16
     496:	08 95       	ret
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:386
            R &= (0x01 << ditherBits) - 1;

            // Q is the "unscaled dither signal" itself.
            // It's initialized to the reversed bits of R.
            // If 'ditherBits' is 2, Q here will cycle through (0,128,64,192)
            uint8_t Q = 0;
     498:	20 e0       	ldi	r18, 0x00	; 0
     49a:	d5 cf       	rjmp	.-86     	; 0x446 <PixelController<(EOrder)66, 1, 4294967295ul>::init_binary_dithering()+0x1c>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:418
            for(int i = 0; i < 3; ++i) {
                    uint8_t s = mScale.raw[i];
                    e[i] = s ? (256/s) + 1 : 0;
                    d[i] = scale8(Q, e[i]);
#if (FASTLED_SCALE8_FIXED == 1)
                    if(d[i]) (--d[i]);
     49c:	31 50       	subi	r19, 0x01	; 1
     49e:	36 83       	std	Z+6, r19	; 0x06
     4a0:	ee cf       	rjmp	.-36     	; 0x47e <__stack+0x1f>

000004a2 <ClocklessController<(unsigned char)11, 2, 5, 3, (EOrder)66, 0, false, 10>::showPixels(PixelController<(EOrder)66, 1, 4294967295ul>&)>:
_ZN19ClocklessControllerILh11ELi2ELi5ELi3EL6EOrder66ELi0ELb0ELi10EE10showPixelsER15PixelControllerILS0_66ELi1ELm4294967295EE():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:120

protected:
	virtual void showPixels(PixelController<RGB_ORDER> & pixels) {
     4a2:	4f 92       	push	r4
     4a4:	5f 92       	push	r5
     4a6:	7f 92       	push	r7
     4a8:	8f 92       	push	r8
     4aa:	9f 92       	push	r9
     4ac:	af 92       	push	r10
     4ae:	bf 92       	push	r11
     4b0:	cf 92       	push	r12
     4b2:	df 92       	push	r13
     4b4:	ef 92       	push	r14
     4b6:	ff 92       	push	r15
     4b8:	0f 93       	push	r16
     4ba:	1f 93       	push	r17
     4bc:	cf 93       	push	r28
     4be:	df 93       	push	r29
     4c0:	2c 01       	movw	r4, r24
     4c2:	eb 01       	movw	r28, r22
wait():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/fastled_delay.h:28

	/// Blocking delay until WAIT time since mark() has passed
	void wait() {
		uint16_t diff;
		do {
			diff = (micros() & 0xFFFF) - mLastMicros;
     4c4:	3a de       	rcall	.-908    	; 0x13a <micros>
     4c6:	f2 01       	movw	r30, r4
     4c8:	27 85       	ldd	r18, Z+15	; 0x0f
     4ca:	30 89       	ldd	r19, Z+16	; 0x10
     4cc:	62 1b       	sub	r22, r18
     4ce:	73 0b       	sbc	r23, r19
C:\Users\user\Documents\Arduino\libraries\FastLED\src/fastled_delay.h:29
		} while(diff < WAIT);
     4d0:	6a 30       	cpi	r22, 0x0A	; 10
     4d2:	71 05       	cpc	r23, r1
     4d4:	b8 f3       	brcs	.-18     	; 0x4c4 <ClocklessController<(unsigned char)11, 2, 5, 3, (EOrder)66, 0, false, 10>::showPixels(PixelController<(EOrder)66, 1, 4294967295ul>&)+0x22>
_ZN19ClocklessControllerILh11ELi2ELi5ELi3EL6EOrder66ELi0ELb0ELi10EE10showPixelsER15PixelControllerILS0_66ELi1ELm4294967295EE():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:123

		mWait.wait();
		cli();
     4d6:	f8 94       	cli
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:125

		if(pixels.mLen > 0) {
     4d8:	8a 81       	ldd	r24, Y+2	; 0x02
     4da:	9b 81       	ldd	r25, Y+3	; 0x03
     4dc:	18 16       	cp	r1, r24
     4de:	19 06       	cpc	r1, r25
     4e0:	0c f0       	brlt	.+2      	; 0x4e4 <ClocklessController<(unsigned char)11, 2, 5, 3, (EOrder)66, 0, false, 10>::showPixels(PixelController<(EOrder)66, 1, 4294967295ul>&)+0x42>
     4e2:	40 c1       	rjmp	.+640    	; 0x764 <L_3833>
showRGBInternal():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:361
#define FL_FALLTHROUGH __attribute__ ((fallthrough));

	// This method is made static to force making register Y available to use for data on AVR - if the method is non-static, then
	// gcc will use register Y for the this pointer.
	static void /*__attribute__((optimize("O0")))*/  /*__attribute__ ((always_inline))*/  showRGBInternal(PixelController<RGB_ORDER> & pixels)  {
		uint8_t *data = (uint8_t*)pixels.mData;
     4e4:	e8 81       	ld	r30, Y
     4e6:	f9 81       	ldd	r31, Y+1	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:367
		data_ptr_t port = FastPin<DATA_PIN>::port();
		data_t mask = FastPin<DATA_PIN>::mask();
		uint8_t scale_base = 0;

		// FASTLED_REGISTER uint8_t *end = data + nLeds;
		data_t hi = *port | mask;
     4e8:	68 b3       	in	r22, 0x18	; 24
     4ea:	86 2e       	mov	r8, r22
     4ec:	68 94       	set
     4ee:	83 f8       	bld	r8, 3
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:368
		data_t lo = *port & ~mask;
     4f0:	38 b3       	in	r19, 0x18	; 24
     4f2:	37 7f       	andi	r19, 0xF7	; 247
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:369
		*port = lo;
     4f4:	38 bb       	out	0x18, r19	; 24
_ZN15PixelControllerIL6EOrder66ELi1ELm4294967295EE25preStepFirstByteDitheringEv():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:471
                d[2] = e[2] - d[2];
        }

        /// Some chipsets pre-cycle the first byte, which means we want to cycle byte 0's dithering separately
        __attribute__((always_inline)) inline void preStepFirstByteDithering() {
            d[RO(0)] = e[RO(0)] - d[RO(0)];
     4f6:	da 84       	ldd	r13, Y+10	; 0x0a
     4f8:	8f 81       	ldd	r24, Y+7	; 0x07
     4fa:	2d 2d       	mov	r18, r13
     4fc:	28 1b       	sub	r18, r24
     4fe:	82 2f       	mov	r24, r18
     500:	2f 83       	std	Y+7, r18	; 0x07
_ZN15PixelControllerIL6EOrder66ELi1ELm4294967295EE9advanceByEv():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:454
        /// @returns LANES from template
        __attribute__((always_inline)) inline int lanes() { return LANES; }

        /// Get the amount to advance the pointer by
        /// @returns PixelController::mAdvance
        __attribute__((always_inline)) inline int advanceBy() { return mAdvance; }
     502:	4f 85       	ldd	r20, Y+15	; 0x0f
     504:	04 2e       	mov	r0, r20
     506:	00 0c       	add	r0, r0
     508:	55 0b       	sbc	r21, r21
showRGBInternal():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:383

		// pull the dithering/adjustment values out of the pixels object for direct asm access

		// even though advanceBy is only an int8, we cast it to int16 for sign extension in case it's negative.
		int16_t advanceBy = pixels.advanceBy();
		uint16_t count = pixels.mLen;
     50a:	aa 81       	ldd	r26, Y+2	; 0x02
     50c:	bb 81       	ldd	r27, Y+3	; 0x03
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:385

		uint8_t s0 = pixels.mScale.raw[RO(0)];
     50e:	7d 85       	ldd	r23, Y+13	; 0x0d
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:386
		uint8_t s1 = pixels.mScale.raw[RO(1)];
     510:	fc 84       	ldd	r15, Y+12	; 0x0c
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:387
		uint8_t s2 = pixels.mScale.raw[RO(2)];
     512:	ee 84       	ldd	r14, Y+14	; 0x0e
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:389
#if (FASTLED_SCALE8_FIXED==1)
		s0++; s1++; s2++;
     514:	7f 5f       	subi	r23, 0xFF	; 255
     516:	f3 94       	inc	r15
     518:	e3 94       	inc	r14
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:392
#endif
		uint8_t d0 = pixels.d[RO(0)];
		uint8_t d1 = pixels.d[RO(1)];
     51a:	9e 81       	ldd	r25, Y+6	; 0x06
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:393
		uint8_t d2 = pixels.d[RO(2)];
     51c:	98 84       	ldd	r9, Y+8	; 0x08
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:395
		uint8_t e0 = pixels.e[RO(0)];
		uint8_t e1 = pixels.e[RO(1)];
     51e:	b9 84       	ldd	r11, Y+9	; 0x09
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:396
		uint8_t e2 = pixels.e[RO(2)];
     520:	ab 84       	ldd	r10, Y+11	; 0x0b
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:401

		uint8_t loopvar=0;

		// This has to be done in asm to keep gcc from messing up the asm code further down
		b0 = data[RO(0)];
     522:	11 81       	ldd	r17, Z+1	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:403
		{
			LDSCL4(b0,O0) 	PRESCALEA2(d0)
     524:	c1 2c       	mov	r12, r1
     526:	6c 2d       	mov	r22, r12
     528:	0c 2d       	mov	r16, r12
     52a:	2c 2d       	mov	r18, r12
     52c:	21 81       	ldd	r18, Z+1	; 0x01
     52e:	11 27       	eor	r17, r17
     530:	88 94       	clc
     532:	21 11       	cpse	r18, r1
     534:	28 0f       	add	r18, r24
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:404
			PRESCALEB4(d0)	SCALE02(b0,0)
     536:	08 f4       	brcc	.+2      	; 0x53a <L_1084>
     538:	2f ef       	ldi	r18, 0xFF	; 255

0000053a <L_1084>:
     53a:	81 95       	neg	r24
     53c:	88 94       	clc
     53e:	70 fd       	sbrc	r23, 0
     540:	12 0f       	add	r17, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:405
			RORSC04(b0,1) 	ROR1(b0) CLC1
     542:	17 95       	ror	r17
     544:	88 94       	clc
     546:	71 fd       	sbrc	r23, 1
     548:	12 0f       	add	r17, r18
     54a:	17 95       	ror	r17
     54c:	88 94       	clc
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:406
			SCROR04(b0,2)		SCALE02(b0,3)
     54e:	72 fd       	sbrc	r23, 2
     550:	12 0f       	add	r17, r18
     552:	17 95       	ror	r17
     554:	88 94       	clc
     556:	73 fd       	sbrc	r23, 3
     558:	12 0f       	add	r17, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:407
			RORSC04(b0,4) 	ROR1(b0) CLC1
     55a:	17 95       	ror	r17
     55c:	88 94       	clc
     55e:	74 fd       	sbrc	r23, 4
     560:	12 0f       	add	r17, r18
     562:	17 95       	ror	r17
     564:	88 94       	clc
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:408
			SCROR04(b0,5) 	SCALE02(b0,6)
     566:	75 fd       	sbrc	r23, 5
     568:	12 0f       	add	r17, r18
     56a:	17 95       	ror	r17
     56c:	88 94       	clc
     56e:	76 fd       	sbrc	r23, 6
     570:	12 0f       	add	r17, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:409
			RORSC04(b0,7) 	ROR1(b0) CLC1
     572:	17 95       	ror	r17
     574:	88 94       	clc
     576:	77 fd       	sbrc	r23, 7
     578:	12 0f       	add	r17, r18
     57a:	17 95       	ror	r17
     57c:	88 94       	clc
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:410
			MOV_ADDDE04(b1,b0,d0,e0)
     57e:	62 2f       	mov	r22, r18
     580:	71 11       	cpse	r23, r1
     582:	61 2f       	mov	r22, r17
     584:	8d 0d       	add	r24, r13
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:411
			MOV1(b0,b1)
     586:	16 2f       	mov	r17, r22
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:418

		{
			// while(--count)
			{
				// Loop beginning
				DNOP;
     588:	00 2c       	mov	r0, r0
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:432
				// out.  When doing byte 1, we're doing the above for byte 2.  When we're doing byte 2,
				// we're cycling back around and doing the above for byte 0.

				// Inline scaling - RGB ordering
				// DNOP
				HI1 _D1(1) QLO2(b0, 7) LDSCL4(b1,O1) 	_D2(4)	LO1	PRESCALEA2(d1)	_D3(2)
     58a:	88 ba       	out	0x18, r8	; 24
     58c:	17 ff       	sbrs	r17, 7
     58e:	38 bb       	out	0x18, r19	; 24
     590:	20 81       	ld	r18, Z
     592:	66 27       	eor	r22, r22
     594:	88 94       	clc
     596:	38 bb       	out	0x18, r19	; 24
     598:	21 11       	cpse	r18, r1
     59a:	29 0f       	add	r18, r25
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:433
				HI1 _D1(1) QLO2(b0, 6) PRESCALEB4(d1)	_D2(4)	LO1	SCALE12(b1,0)	_D3(2)
     59c:	88 ba       	out	0x18, r8	; 24
     59e:	16 ff       	sbrs	r17, 6
     5a0:	38 bb       	out	0x18, r19	; 24
     5a2:	08 f4       	brcc	.+2      	; 0x5a6 <L_1560>
     5a4:	2f ef       	ldi	r18, 0xFF	; 255

000005a6 <L_1560>:
     5a6:	91 95       	neg	r25
     5a8:	88 94       	clc
     5aa:	38 bb       	out	0x18, r19	; 24
     5ac:	f0 fc       	sbrc	r15, 0
     5ae:	62 0f       	add	r22, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:434
				HI1 _D1(1) QLO2(b0, 5) RORSC14(b1,1) 	_D2(4)	LO1 RORCLC2(b1)		_D3(2)
     5b0:	88 ba       	out	0x18, r8	; 24
     5b2:	15 ff       	sbrs	r17, 5
     5b4:	38 bb       	out	0x18, r19	; 24
     5b6:	67 95       	ror	r22
     5b8:	88 94       	clc
     5ba:	f1 fc       	sbrc	r15, 1
     5bc:	62 0f       	add	r22, r18
     5be:	38 bb       	out	0x18, r19	; 24
     5c0:	67 95       	ror	r22
     5c2:	88 94       	clc
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:435
				HI1 _D1(1) QLO2(b0, 4) SCROR14(b1,2)	_D2(4)	LO1 SCALE12(b1,3)	_D3(2)
     5c4:	88 ba       	out	0x18, r8	; 24
     5c6:	14 ff       	sbrs	r17, 4
     5c8:	38 bb       	out	0x18, r19	; 24
     5ca:	f2 fc       	sbrc	r15, 2
     5cc:	62 0f       	add	r22, r18
     5ce:	67 95       	ror	r22
     5d0:	88 94       	clc
     5d2:	38 bb       	out	0x18, r19	; 24
     5d4:	f3 fc       	sbrc	r15, 3
     5d6:	62 0f       	add	r22, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:436
				HI1 _D1(1) QLO2(b0, 3) RORSC14(b1,4) 	_D2(4)	LO1 RORCLC2(b1) 	_D3(2)
     5d8:	88 ba       	out	0x18, r8	; 24
     5da:	13 ff       	sbrs	r17, 3
     5dc:	38 bb       	out	0x18, r19	; 24
     5de:	67 95       	ror	r22
     5e0:	88 94       	clc
     5e2:	f4 fc       	sbrc	r15, 4
     5e4:	62 0f       	add	r22, r18
     5e6:	38 bb       	out	0x18, r19	; 24
     5e8:	67 95       	ror	r22
     5ea:	88 94       	clc
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:437
				HI1 _D1(1) QLO2(b0, 2) SCROR14(b1,5) 	_D2(4)	LO1 SCALE12(b1,6)	_D3(2)
     5ec:	88 ba       	out	0x18, r8	; 24
     5ee:	12 ff       	sbrs	r17, 2
     5f0:	38 bb       	out	0x18, r19	; 24
     5f2:	f5 fc       	sbrc	r15, 5
     5f4:	62 0f       	add	r22, r18
     5f6:	67 95       	ror	r22
     5f8:	88 94       	clc
     5fa:	38 bb       	out	0x18, r19	; 24
     5fc:	f6 fc       	sbrc	r15, 6
     5fe:	62 0f       	add	r22, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:438
				HI1 _D1(1) QLO2(b0, 1) RORSC14(b1,7) 	_D2(4)	LO1 RORCLC2(b1) 	_D3(2)
     600:	88 ba       	out	0x18, r8	; 24
     602:	11 ff       	sbrs	r17, 1
     604:	38 bb       	out	0x18, r19	; 24
     606:	67 95       	ror	r22
     608:	88 94       	clc
     60a:	f7 fc       	sbrc	r15, 7
     60c:	62 0f       	add	r22, r18
     60e:	38 bb       	out	0x18, r19	; 24
     610:	67 95       	ror	r22
     612:	88 94       	clc
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:439
				HI1 _D1(1) QLO2(b0, 0)
     614:	88 ba       	out	0x18, r8	; 24
     616:	10 ff       	sbrs	r17, 0
     618:	38 bb       	out	0x18, r19	; 24
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:446
					case 4: _D2(0) LO1 _D3(0) HI1 _D1(1) QLO2(b0,0)  /* fall through */
					case 3: _D2(0) LO1 _D3(0) HI1 _D1(1) QLO2(b0,0)  /* fall through */
					case 2: _D2(0) LO1 _D3(0) HI1 _D1(1) QLO2(b0,0)  /* fall through */
					case 1: _D2(0) LO1 _D3(0) HI1 _D1(1) QLO2(b0,0)
				}
				MOV_ADDDE14(b0,b1,d1,e1) _D2(4) LO1 _D3(0)
     61a:	12 2f       	mov	r17, r18
     61c:	f1 10       	cpse	r15, r1
     61e:	16 2f       	mov	r17, r22
     620:	9b 0d       	add	r25, r11
     622:	38 bb       	out	0x18, r19	; 24
_Z3_dcILi2EEvRh():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:55
template<> __attribute__((always_inline)) inline void _dc< 0>(FASTLED_REGISTER uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(FASTLED_REGISTER uint8_t & ) {asm __volatile__("mov r0,r0":::);}
#if defined(__LGT8F__) 
template<> __attribute__((always_inline)) inline void _dc< 2>(FASTLED_REGISTER uint8_t & loopvar) { _dc<1>(loopvar); _dc<1>(loopvar); }
#else
template<> __attribute__((always_inline)) inline void _dc< 2>(FASTLED_REGISTER uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     624:	00 c0       	rjmp	.+0      	; 0x626 <L_1560+0x80>
showRGBInternal():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:448
					case 2: _D2(0) LO1 _D3(0) HI1 _D1(1) QLO2(b0,0)  /* fall through */
					case 1: _D2(0) LO1 _D3(0) HI1 _D1(1) QLO2(b0,0)
				}
				MOV_ADDDE14(b0,b1,d1,e1) _D2(4) LO1 _D3(0)

				HI1 _D1(1) QLO2(b0, 7) LDSCL4(b1,O2) 	_D2(4)	LO1	PRESCALEA2(d2)	_D3(2)
     626:	88 ba       	out	0x18, r8	; 24
     628:	17 ff       	sbrs	r17, 7
     62a:	38 bb       	out	0x18, r19	; 24
     62c:	22 81       	ldd	r18, Z+2	; 0x02
     62e:	66 27       	eor	r22, r22
     630:	88 94       	clc
     632:	38 bb       	out	0x18, r19	; 24
     634:	21 11       	cpse	r18, r1
     636:	29 0d       	add	r18, r9
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:449
				HI1 _D1(1) QLO2(b0, 6) PSBIDATA4(d2)	_D2(4)	LO1	SCALE22(b1,0)	_D3(2)
     638:	88 ba       	out	0x18, r8	; 24
     63a:	16 ff       	sbrs	r17, 6
     63c:	38 bb       	out	0x18, r19	; 24
     63e:	08 f4       	brcc	.+2      	; 0x642 <L_2365>
     640:	2f ef       	ldi	r18, 0xFF	; 255

00000642 <L_2365>:
     642:	e4 0f       	add	r30, r20
     644:	f5 1f       	adc	r31, r21
     646:	38 bb       	out	0x18, r19	; 24
     648:	e0 fc       	sbrc	r14, 0
     64a:	62 0f       	add	r22, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:450
				HI1 _D1(1) QLO2(b0, 5) RORSC24(b1,1) 	_D2(4)	LO1 RORCLC2(b1) 	_D3(2)
     64c:	88 ba       	out	0x18, r8	; 24
     64e:	15 ff       	sbrs	r17, 5
     650:	38 bb       	out	0x18, r19	; 24
     652:	67 95       	ror	r22
     654:	88 94       	clc
     656:	e1 fc       	sbrc	r14, 1
     658:	62 0f       	add	r22, r18
     65a:	38 bb       	out	0x18, r19	; 24
     65c:	67 95       	ror	r22
     65e:	88 94       	clc
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:451
				HI1 _D1(1) QLO2(b0, 4) SCROR24(b1,2)	_D2(4)	LO1 SCALE22(b1,3)	_D3(2)
     660:	88 ba       	out	0x18, r8	; 24
     662:	14 ff       	sbrs	r17, 4
     664:	38 bb       	out	0x18, r19	; 24
     666:	e2 fc       	sbrc	r14, 2
     668:	62 0f       	add	r22, r18
     66a:	67 95       	ror	r22
     66c:	88 94       	clc
     66e:	38 bb       	out	0x18, r19	; 24
     670:	e3 fc       	sbrc	r14, 3
     672:	62 0f       	add	r22, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:452
				HI1 _D1(1) QLO2(b0, 3) RORSC24(b1,4) 	_D2(4)	LO1 RORCLC2(b1) 	_D3(2)
     674:	88 ba       	out	0x18, r8	; 24
     676:	13 ff       	sbrs	r17, 3
     678:	38 bb       	out	0x18, r19	; 24
     67a:	67 95       	ror	r22
     67c:	88 94       	clc
     67e:	e4 fc       	sbrc	r14, 4
     680:	62 0f       	add	r22, r18
     682:	38 bb       	out	0x18, r19	; 24
     684:	67 95       	ror	r22
     686:	88 94       	clc
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:453
				HI1 _D1(1) QLO2(b0, 2) SCROR24(b1,5) 	_D2(4)	LO1 SCALE22(b1,6)	_D3(2)
     688:	88 ba       	out	0x18, r8	; 24
     68a:	12 ff       	sbrs	r17, 2
     68c:	38 bb       	out	0x18, r19	; 24
     68e:	e5 fc       	sbrc	r14, 5
     690:	62 0f       	add	r22, r18
     692:	67 95       	ror	r22
     694:	88 94       	clc
     696:	38 bb       	out	0x18, r19	; 24
     698:	e6 fc       	sbrc	r14, 6
     69a:	62 0f       	add	r22, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:454
				HI1 _D1(1) QLO2(b0, 1) RORSC24(b1,7) 	_D2(4)	LO1 RORCLC2(b1) 	_D3(2)
     69c:	88 ba       	out	0x18, r8	; 24
     69e:	11 ff       	sbrs	r17, 1
     6a0:	38 bb       	out	0x18, r19	; 24
     6a2:	67 95       	ror	r22
     6a4:	88 94       	clc
     6a6:	e7 fc       	sbrc	r14, 7
     6a8:	62 0f       	add	r22, r18
     6aa:	38 bb       	out	0x18, r19	; 24
     6ac:	67 95       	ror	r22
     6ae:	88 94       	clc
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:455
				HI1 _D1(1) QLO2(b0, 0)
     6b0:	88 ba       	out	0x18, r8	; 24
     6b2:	10 ff       	sbrs	r17, 0
     6b4:	38 bb       	out	0x18, r19	; 24
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:466
				}

				// Because Prescale on the middle byte also increments the data counter,
				// we have to do both halves of updating d2 here - negating it (in the
				// MOV_NEGD24 macro) and then adding E back into it
				MOV_NEGD24(b0,b1,d2) _D2(4) LO1 ADDDE1(d2,e2) _D3(1)
     6b6:	12 2f       	mov	r17, r18
     6b8:	e1 10       	cpse	r14, r1
     6ba:	16 2f       	mov	r17, r22
     6bc:	91 94       	neg	r9
     6be:	38 bb       	out	0x18, r19	; 24
     6c0:	9a 0c       	add	r9, r10
_Z3_dcILi1EEvRh():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(FASTLED_REGISTER uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(FASTLED_REGISTER uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(FASTLED_REGISTER uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(FASTLED_REGISTER uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(FASTLED_REGISTER uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(FASTLED_REGISTER uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     6c2:	00 2c       	mov	r0, r0
showRGBInternal():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:467

				// Because Prescale on the middle byte also increments the data counter,
				// we have to do both halves of updating d2 here - negating it (in the
				// MOV_NEGD24 macro) and then adding E back into it
				MOV_NEGD24(b0,b1,d2) _D2(4) LO1 ADDDE1(d2,e2) _D3(1)
				HI1 _D1(1) QLO2(b0, 7) LDSCL4(b1,O0) 	_D2(4)	LO1	PRESCALEA2(d0)	_D3(2)
     6c4:	88 ba       	out	0x18, r8	; 24
     6c6:	17 ff       	sbrs	r17, 7
     6c8:	38 bb       	out	0x18, r19	; 24
     6ca:	21 81       	ldd	r18, Z+1	; 0x01
     6cc:	66 27       	eor	r22, r22
     6ce:	88 94       	clc
     6d0:	38 bb       	out	0x18, r19	; 24
     6d2:	21 11       	cpse	r18, r1
     6d4:	28 0f       	add	r18, r24
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:468
				HI1 _D1(1) QLO2(b0, 6) PRESCALEB4(d0)	_D2(4)	LO1	SCALE02(b1,0)	_D3(2)
     6d6:	88 ba       	out	0x18, r8	; 24
     6d8:	16 ff       	sbrs	r17, 6
     6da:	38 bb       	out	0x18, r19	; 24
     6dc:	08 f4       	brcc	.+2      	; 0x6e0 <L_3187>
     6de:	2f ef       	ldi	r18, 0xFF	; 255

000006e0 <L_3187>:
     6e0:	81 95       	neg	r24
     6e2:	88 94       	clc
     6e4:	38 bb       	out	0x18, r19	; 24
     6e6:	70 fd       	sbrc	r23, 0
     6e8:	62 0f       	add	r22, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:469
				HI1 _D1(1) QLO2(b0, 5) RORSC04(b1,1) 	_D2(4)	LO1 RORCLC2(b1) 	_D3(2)
     6ea:	88 ba       	out	0x18, r8	; 24
     6ec:	15 ff       	sbrs	r17, 5
     6ee:	38 bb       	out	0x18, r19	; 24
     6f0:	67 95       	ror	r22
     6f2:	88 94       	clc
     6f4:	71 fd       	sbrc	r23, 1
     6f6:	62 0f       	add	r22, r18
     6f8:	38 bb       	out	0x18, r19	; 24
     6fa:	67 95       	ror	r22
     6fc:	88 94       	clc
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:470
				HI1 _D1(1) QLO2(b0, 4) SCROR04(b1,2)	_D2(4)	LO1 SCALE02(b1,3)	_D3(2)
     6fe:	88 ba       	out	0x18, r8	; 24
     700:	14 ff       	sbrs	r17, 4
     702:	38 bb       	out	0x18, r19	; 24
     704:	72 fd       	sbrc	r23, 2
     706:	62 0f       	add	r22, r18
     708:	67 95       	ror	r22
     70a:	88 94       	clc
     70c:	38 bb       	out	0x18, r19	; 24
     70e:	73 fd       	sbrc	r23, 3
     710:	62 0f       	add	r22, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:471
				HI1 _D1(1) QLO2(b0, 3) RORSC04(b1,4) 	_D2(4)	LO1 RORCLC2(b1)  	_D3(2)
     712:	88 ba       	out	0x18, r8	; 24
     714:	13 ff       	sbrs	r17, 3
     716:	38 bb       	out	0x18, r19	; 24
     718:	67 95       	ror	r22
     71a:	88 94       	clc
     71c:	74 fd       	sbrc	r23, 4
     71e:	62 0f       	add	r22, r18
     720:	38 bb       	out	0x18, r19	; 24
     722:	67 95       	ror	r22
     724:	88 94       	clc
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:472
				HI1 _D1(1) QLO2(b0, 2) SCROR04(b1,5) 	_D2(4)	LO1 SCALE02(b1,6)	_D3(2)
     726:	88 ba       	out	0x18, r8	; 24
     728:	12 ff       	sbrs	r17, 2
     72a:	38 bb       	out	0x18, r19	; 24
     72c:	75 fd       	sbrc	r23, 5
     72e:	62 0f       	add	r22, r18
     730:	67 95       	ror	r22
     732:	88 94       	clc
     734:	38 bb       	out	0x18, r19	; 24
     736:	76 fd       	sbrc	r23, 6
     738:	62 0f       	add	r22, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:473
				HI1 _D1(1) QLO2(b0, 1) RORSC04(b1,7) 	_D2(4)	LO1 RORCLC2(b1) 	_D3(2)
     73a:	88 ba       	out	0x18, r8	; 24
     73c:	11 ff       	sbrs	r17, 1
     73e:	38 bb       	out	0x18, r19	; 24
     740:	67 95       	ror	r22
     742:	88 94       	clc
     744:	77 fd       	sbrc	r23, 7
     746:	62 0f       	add	r22, r18
     748:	38 bb       	out	0x18, r19	; 24
     74a:	67 95       	ror	r22
     74c:	88 94       	clc
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:474
				HI1 _D1(1) QLO2(b0, 0)
     74e:	88 ba       	out	0x18, r8	; 24
     750:	10 ff       	sbrs	r17, 0
     752:	38 bb       	out	0x18, r19	; 24
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:481
					case 4: _D2(0) LO1 _D3(0) HI1 _D1(1) QLO2(b0,0)  /* fall through */
					case 3: _D2(0) LO1 _D3(0) HI1 _D1(1) QLO2(b0,0)  /* fall through */
					case 2: _D2(0) LO1 _D3(0) HI1 _D1(1) QLO2(b0,0)  /* fall through */
					case 1: _D2(0) LO1 _D3(0) HI1 _D1(1) QLO2(b0,0)
				}
				MOV_ADDDE04(b0,b1,d0,e0) _D2(4) LO1 _D3(5)
     754:	12 2f       	mov	r17, r18
     756:	71 11       	cpse	r23, r1
     758:	16 2f       	mov	r17, r22
     75a:	8d 0d       	add	r24, r13
     75c:	38 bb       	out	0x18, r19	; 24
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:482
				ENDLOOP5
     75e:	11 97       	sbiw	r26, 0x01	; 1
     760:	09 f0       	breq	.+2      	; 0x764 <L_3833>
     762:	13 cf       	rjmp	.-474    	; 0x58a <L_1084+0x50>

00000764 <L_3833>:
_ZN15PixelControllerIL6EOrder66ELi1ELm4294967295EE4sizeEv():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:446
            }
        }

        /// Get the length of the LED strip
        /// @returns PixelController::mLen
        __attribute__((always_inline)) inline int size() { return mLen; }
     764:	ea 81       	ldd	r30, Y+2	; 0x02
     766:	fb 81       	ldd	r31, Y+3	; 0x03
_ZN19ClocklessControllerILh11ELi2ELi5ELi3EL6EOrder66ELi0ELb0ELi10EE10showPixelsER15PixelControllerILS0_66ELi1ELm4294967295EE():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:131
			showRGBInternal(pixels);
		}

		// Adjust the timer
#if (!defined(NO_CLOCK_CORRECTION) || (NO_CLOCK_CORRECTION == 0)) && (FASTLED_ALLOW_INTERRUPTS == 0)
        uint32_t microsTaken = (uint32_t)pixels.size() * (uint32_t)CLKS_TO_MICROS(24 * (T1 + T2 + T3));
     768:	20 ef       	ldi	r18, 0xF0	; 240
     76a:	30 e0       	ldi	r19, 0x00	; 0
     76c:	df 01       	movw	r26, r30
     76e:	ba d9       	rcall	.-3212   	; 0xfffffae4 <__eeprom_end+0xff7efae4>
     770:	6b 01       	movw	r12, r22
     772:	7c 01       	movw	r14, r24
     774:	a3 e0       	ldi	r26, 0x03	; 3
     776:	f6 94       	lsr	r15
     778:	e7 94       	ror	r14
     77a:	d7 94       	ror	r13
     77c:	c7 94       	ror	r12
     77e:	aa 95       	dec	r26
     780:	d1 f7       	brne	.-12     	; 0x776 <L_3833+0x12>
scale16by8():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/lib8tion/scale8.h:508
        "  adc %B[result], __zero_reg__        \n\t"

        : [result] "+r" (result)
        : [i] "r" (i), [scale] "r" (scale)
        : "r0", "r1"
    );
     782:	30 e0       	ldi	r19, 0x00	; 0
     784:	20 e0       	ldi	r18, 0x00	; 0
     786:	a9 01       	movw	r20, r18
     788:	8a e9       	ldi	r24, 0x9A	; 154
     78a:	e8 9f       	mul	r30, r24
     78c:	0e 0e       	add	r0, r30
     78e:	41 1d       	adc	r20, r1
     790:	f8 9f       	mul	r31, r24
     792:	40 0d       	add	r20, r0
     794:	51 1d       	adc	r21, r1
     796:	11 24       	eor	r1, r1
     798:	4f 0f       	add	r20, r31
     79a:	51 1d       	adc	r21, r1
_ZN19ClocklessControllerILh11ELi2ELi5ELi3EL6EOrder66ELi0ELb0ELi10EE10showPixelsER15PixelControllerILS0_66ELi1ELm4294967295EE():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:136

        // adust for approximate observed actal runtime (as of January 2015)
        // roughly 9.6 cycles per pixel, which is 0.6us/pixel at 16MHz
        // microsTaken += nLeds * 0.6 * CLKS_TO_MICROS(16);
        microsTaken += scale16by8(pixels.size(),(0.6 * 256) + 1) * CLKS_TO_MICROS(16);
     79c:	ca 01       	movw	r24, r20
     79e:	b0 e0       	ldi	r27, 0x00	; 0
     7a0:	a0 e0       	ldi	r26, 0x00	; 0
     7a2:	88 0f       	add	r24, r24
     7a4:	99 1f       	adc	r25, r25
     7a6:	aa 1f       	adc	r26, r26
     7a8:	bb 1f       	adc	r27, r27
     7aa:	8c 0d       	add	r24, r12
     7ac:	9d 1d       	adc	r25, r13
     7ae:	ae 1d       	adc	r26, r14
     7b0:	bf 1d       	adc	r27, r15
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:144
        // this is because the ONE interrupt that might come in while interrupts
        // are disabled is queued up, and it will be serviced as soon as
        // interrupts are re-enabled.
        // This actually should technically also account for the runtime of the
        // interrupt handler itself, but we're just not going to worry about that.
        if( microsTaken > 1000) {
     7b2:	89 3e       	cpi	r24, 0xE9	; 233
     7b4:	43 e0       	ldi	r20, 0x03	; 3
     7b6:	94 07       	cpc	r25, r20
     7b8:	a1 05       	cpc	r26, r1
     7ba:	b1 05       	cpc	r27, r1
     7bc:	08 f4       	brcc	.+2      	; 0x7c0 <L_3833+0x5c>
     7be:	34 c0       	rjmp	.+104    	; 0x828 <L_3833+0xc4>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:148

            // Since up to one timer tick will be queued, we don't need
            // to adjust the MS_COUNTER for that one.
            microsTaken -= 1000;
     7c0:	88 5e       	subi	r24, 0xE8	; 232
     7c2:	93 40       	sbci	r25, 0x03	; 3
     7c4:	a1 09       	sbc	r26, r1
     7c6:	b1 09       	sbc	r27, r1
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:153

            // Now convert microseconds to 256ths of a second, approximately like this:
            // 250ths = (us/4)
            // 256ths = 250ths * (263/256);
            uint16_t x256ths = microsTaken >> 2;
     7c8:	42 e0       	ldi	r20, 0x02	; 2
     7ca:	b6 95       	lsr	r27
     7cc:	a7 95       	ror	r26
     7ce:	97 95       	ror	r25
     7d0:	87 95       	ror	r24
     7d2:	4a 95       	dec	r20
     7d4:	d1 f7       	brne	.-12     	; 0x7ca <L_3833+0x66>
scale16by8():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/lib8tion/scale8.h:508
     7d6:	47 e0       	ldi	r20, 0x07	; 7
     7d8:	84 9f       	mul	r24, r20
     7da:	08 0e       	add	r0, r24
     7dc:	21 1d       	adc	r18, r1
     7de:	94 9f       	mul	r25, r20
     7e0:	20 0d       	add	r18, r0
     7e2:	31 1d       	adc	r19, r1
     7e4:	11 24       	eor	r1, r1
     7e6:	29 0f       	add	r18, r25
     7e8:	31 1d       	adc	r19, r1
_ZN19ClocklessControllerILh11ELi2ELi5ELi3EL6EOrder66ELi0ELb0ELi10EE10showPixelsER15PixelControllerILS0_66ELi1ELm4294967295EE():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:156
            x256ths += scale16by8(x256ths,7);

            x256ths += gTimeErrorAccum256ths;
     7ea:	60 91 a0 00 	lds	r22, 0x00A0	; 0x8000a0 <__data_end>
     7ee:	70 e0       	ldi	r23, 0x00	; 0
     7f0:	86 0f       	add	r24, r22
     7f2:	97 1f       	adc	r25, r23
     7f4:	82 0f       	add	r24, r18
     7f6:	93 1f       	adc	r25, r19
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:157
            MS_COUNTER += (x256ths >> 8);
     7f8:	40 91 19 01 	lds	r20, 0x0119	; 0x800119 <timer0_millis>
     7fc:	50 91 1a 01 	lds	r21, 0x011A	; 0x80011a <timer0_millis+0x1>
     800:	60 91 1b 01 	lds	r22, 0x011B	; 0x80011b <timer0_millis+0x2>
     804:	70 91 1c 01 	lds	r23, 0x011C	; 0x80011c <timer0_millis+0x3>
     808:	29 2f       	mov	r18, r25
     80a:	33 27       	eor	r19, r19
     80c:	42 0f       	add	r20, r18
     80e:	53 1f       	adc	r21, r19
     810:	61 1d       	adc	r22, r1
     812:	71 1d       	adc	r23, r1
     814:	40 93 19 01 	sts	0x0119, r20	; 0x800119 <timer0_millis>
     818:	50 93 1a 01 	sts	0x011A, r21	; 0x80011a <timer0_millis+0x1>
     81c:	60 93 1b 01 	sts	0x011B, r22	; 0x80011b <timer0_millis+0x2>
     820:	70 93 1c 01 	sts	0x011C, r23	; 0x80011c <timer0_millis+0x3>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:158
            gTimeErrorAccum256ths = x256ths & 0xFF;
     824:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__data_end>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:178
        MS_COUNTER += (microsTaken >> 10);
#endif

#endif

		sei();
     828:	78 94       	sei
mark():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/fastled_delay.h:33
	}

	/// Reset the timestamp that marks the start of the wait period
	void mark() { mLastMicros = micros() & 0xFFFF; }
     82a:	87 dc       	rcall	.-1778   	; 0x13a <micros>
     82c:	f2 01       	movw	r30, r4
     82e:	70 8b       	std	Z+16, r23	; 0x10
     830:	67 87       	std	Z+15, r22	; 0x0f
_ZN19ClocklessControllerILh11ELi2ELi5ELi3EL6EOrder66ELi0ELb0ELi10EE10showPixelsER15PixelControllerILS0_66ELi1ELm4294967295EE():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:180
		mWait.mark();
	}
     832:	df 91       	pop	r29
     834:	cf 91       	pop	r28
     836:	1f 91       	pop	r17
     838:	0f 91       	pop	r16
     83a:	ff 90       	pop	r15
     83c:	ef 90       	pop	r14
     83e:	df 90       	pop	r13
     840:	cf 90       	pop	r12
     842:	bf 90       	pop	r11
     844:	af 90       	pop	r10
     846:	9f 90       	pop	r9
     848:	8f 90       	pop	r8
     84a:	7f 90       	pop	r7
     84c:	5f 90       	pop	r5
     84e:	4f 90       	pop	r4
     850:	08 95       	ret

00000852 <CLEDController::lanes()>:
_ZN14CLEDController5lanesEv():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:169
    /// @returns CLEDController::m_nLeds
    virtual int size() { return m_nLeds; }

    /// How many Lanes does this controller manage?
    /// @returns 1 for a non-Parallel controller
    virtual int lanes() { return 1; }
     852:	81 e0       	ldi	r24, 0x01	; 1
     854:	90 e0       	ldi	r25, 0x00	; 0
     856:	08 95       	ret

00000858 <ClocklessController<(unsigned char)11, 2, 5, 3, (EOrder)66, 0, false, 10>::init()>:
_ZN19ClocklessControllerILh11ELi2ELi5ELi3EL6EOrder66ELi0ELb0ELi10EE4initEv():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/fastpin_avr.h:22
template<uint8_t PIN, uint8_t _MASK, typename _PORT, typename _DDR, typename _PIN> class _AVRPIN {
public:
	typedef volatile uint8_t * port_ptr_t;
	typedef uint8_t port_t;

	inline static void setOutput() { _DDR::r() |= _MASK; }
     858:	bb 9a       	sbi	0x17, 3	; 23
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:115
	CMinWait<WAIT_TIME> mWait;

public:
	virtual void init() {
		FastPin<DATA_PIN>::setOutput();
	}
     85a:	08 95       	ret

0000085c <CPixelLEDController<(EOrder)66, 1, 4294967295ul>::show(CRGB const*, int, CRGB)>:
_ZN19CPixelLEDControllerIL6EOrder66ELi1ELm4294967295EE4showEPK4CRGBiS2_():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:635

    /// Write the passed in RGB data out to the LEDs managed by this controller
    /// @param data the RGB data to write out to the strip
    /// @param nLeds the number of LEDs being written out
    /// @param scale the RGB scaling to apply to each LED before writing it out
    virtual void show(const struct CRGB *data, int nLeds, CRGB scale) {
     85c:	6f 92       	push	r6
     85e:	7f 92       	push	r7
     860:	8f 92       	push	r8
     862:	cf 92       	push	r12
     864:	df 92       	push	r13
     866:	ef 92       	push	r14
     868:	ff 92       	push	r15
     86a:	0f 93       	push	r16
     86c:	1f 93       	push	r17
     86e:	cf 93       	push	r28
     870:	df 93       	push	r29
     872:	cd b7       	in	r28, 0x3d	; 61
     874:	de b7       	in	r29, 0x3e	; 62
     876:	62 97       	sbiw	r28, 0x12	; 18
     878:	0f b6       	in	r0, 0x3f	; 63
     87a:	f8 94       	cli
     87c:	de bf       	out	0x3e, r29	; 62
     87e:	0f be       	out	0x3f, r0	; 63
     880:	cd bf       	out	0x3d, r28	; 61
     882:	6c 01       	movw	r12, r24
     884:	7a 01       	movw	r14, r20
     886:	38 01       	movw	r6, r16
     888:	82 2e       	mov	r8, r18
     88a:	dc 01       	movw	r26, r24
     88c:	1c 96       	adiw	r26, 0x0c	; 12
     88e:	2c 91       	ld	r18, X
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:636
        PixelController<RGB_ORDER, LANES, MASK> pixels(data, nLeds < 0 ? -nLeds : nLeds, scale, getDither());
     890:	ca 01       	movw	r24, r20
     892:	57 ff       	sbrs	r21, 7
     894:	04 c0       	rjmp	.+8      	; 0x89e <CPixelLEDController<(EOrder)66, 1, 4294967295ul>::show(CRGB const*, int, CRGB)+0x42>
     896:	88 27       	eor	r24, r24
     898:	99 27       	eor	r25, r25
     89a:	84 1b       	sub	r24, r20
     89c:	95 0b       	sbc	r25, r21
__base_ctor ():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:314
        /// Constructor
        /// @param d pointer to LED data
        /// @param len length of the LED data
        /// @param s LED scale values, as CRGB struct
        /// @param dither dither setting for the LEDs
        PixelController(const CRGB *d, int len, CRGB & s, EDitherMode dither = BINARY_DITHER) : mData((const uint8_t*)d), mLen(len), mLenRemaining(len), mScale(s) {
     89e:	7a 83       	std	Y+2, r23	; 0x02
     8a0:	69 83       	std	Y+1, r22	; 0x01
     8a2:	9c 83       	std	Y+4, r25	; 0x04
     8a4:	8b 83       	std	Y+3, r24	; 0x03
     8a6:	9e 83       	std	Y+6, r25	; 0x06
     8a8:	8d 83       	std	Y+5, r24	; 0x05
     8aa:	6d 86       	std	Y+13, r6	; 0x0d
     8ac:	7e 86       	std	Y+14, r7	; 0x0e
     8ae:	8f 86       	std	Y+15, r8	; 0x0f
enable_dithering():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:438
        /// If dithering is set to enabled, this will re-init the dithering values
        /// (init_binary_dithering()). Otherwise it will clear the stored dithering
        /// data.
        /// @param dither the dither setting
        void enable_dithering(EDitherMode dither) {
            switch(dither) {
     8b0:	21 30       	cpi	r18, 0x01	; 1
     8b2:	41 f5       	brne	.+80     	; 0x904 <CPixelLEDController<(EOrder)66, 1, 4294967295ul>::show(CRGB const*, int, CRGB)+0xa8>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:439
                case BINARY_DITHER: init_binary_dithering(); break;
     8b4:	ce 01       	movw	r24, r28
     8b6:	01 96       	adiw	r24, 0x01	; 1
     8b8:	b8 dd       	rcall	.-1168   	; 0x42a <PixelController<(EOrder)66, 1, 4294967295ul>::init_binary_dithering()>
__base_ctor ():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:316
        /// @param len length of the LED data
        /// @param s LED scale values, as CRGB struct
        /// @param dither dither setting for the LEDs
        PixelController(const CRGB *d, int len, CRGB & s, EDitherMode dither = BINARY_DITHER) : mData((const uint8_t*)d), mLen(len), mLenRemaining(len), mScale(s) {
            enable_dithering(dither);
            mAdvance = 3;
     8ba:	83 e0       	ldi	r24, 0x03	; 3
     8bc:	88 8b       	std	Y+16, r24	; 0x10
initOffsets():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:290
        /// Initialize the PixelController::mOffsets array based on the length of the strip
        /// @param len the number of LEDs in one lane of the strip
        void initOffsets(int len) {
          int nOffset = 0;
          for(int i = 0; i < LANES; ++i) {
            mOffsets[i] = nOffset;
     8be:	1a 8a       	std	Y+18, r1	; 0x12
     8c0:	19 8a       	std	Y+17, r1	; 0x11
_ZN19CPixelLEDControllerIL6EOrder66ELi1ELm4294967295EE4showEPK4CRGBiS2_():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:637
    /// @param data the RGB data to write out to the strip
    /// @param nLeds the number of LEDs being written out
    /// @param scale the RGB scaling to apply to each LED before writing it out
    virtual void show(const struct CRGB *data, int nLeds, CRGB scale) {
        PixelController<RGB_ORDER, LANES, MASK> pixels(data, nLeds < 0 ? -nLeds : nLeds, scale, getDither());
        if(nLeds < 0) {
     8c2:	f7 fe       	sbrs	r15, 7
     8c4:	02 c0       	rjmp	.+4      	; 0x8ca <CPixelLEDController<(EOrder)66, 1, 4294967295ul>::show(CRGB const*, int, CRGB)+0x6e>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:639
            // nLeds < 0 implies that we want to show them in reverse
            pixels.mAdvance = -pixels.mAdvance;
     8c6:	8d ef       	ldi	r24, 0xFD	; 253
     8c8:	88 8b       	std	Y+16, r24	; 0x10
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:641
        }
        showPixels(pixels);
     8ca:	d6 01       	movw	r26, r12
     8cc:	ed 91       	ld	r30, X+
     8ce:	fc 91       	ld	r31, X
     8d0:	06 84       	ldd	r0, Z+14	; 0x0e
     8d2:	f7 85       	ldd	r31, Z+15	; 0x0f
     8d4:	e0 2d       	mov	r30, r0
     8d6:	be 01       	movw	r22, r28
     8d8:	6f 5f       	subi	r22, 0xFF	; 255
     8da:	7f 4f       	sbci	r23, 0xFF	; 255
     8dc:	c6 01       	movw	r24, r12
     8de:	09 95       	icall
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:642
    }
     8e0:	62 96       	adiw	r28, 0x12	; 18
     8e2:	0f b6       	in	r0, 0x3f	; 63
     8e4:	f8 94       	cli
     8e6:	de bf       	out	0x3e, r29	; 62
     8e8:	0f be       	out	0x3f, r0	; 63
     8ea:	cd bf       	out	0x3d, r28	; 61
     8ec:	df 91       	pop	r29
     8ee:	cf 91       	pop	r28
     8f0:	1f 91       	pop	r17
     8f2:	0f 91       	pop	r16
     8f4:	ff 90       	pop	r15
     8f6:	ef 90       	pop	r14
     8f8:	df 90       	pop	r13
     8fa:	cf 90       	pop	r12
     8fc:	8f 90       	pop	r8
     8fe:	7f 90       	pop	r7
     900:	6f 90       	pop	r6
     902:	08 95       	ret
enable_dithering():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:440
        /// data.
        /// @param dither the dither setting
        void enable_dithering(EDitherMode dither) {
            switch(dither) {
                case BINARY_DITHER: init_binary_dithering(); break;
                default: d[0]=d[1]=d[2]=e[0]=e[1]=e[2]=0; break;
     904:	1c 86       	std	Y+12, r1	; 0x0c
     906:	1b 86       	std	Y+11, r1	; 0x0b
     908:	1a 86       	std	Y+10, r1	; 0x0a
     90a:	19 86       	std	Y+9, r1	; 0x09
     90c:	18 86       	std	Y+8, r1	; 0x08
     90e:	1f 82       	std	Y+7, r1	; 0x07
     910:	d4 cf       	rjmp	.-88     	; 0x8ba <CPixelLEDController<(EOrder)66, 1, 4294967295ul>::show(CRGB const*, int, CRGB)+0x5e>

00000912 <CPixelLEDController<(EOrder)66, 1, 4294967295ul>::showColor(CRGB const&, int, CRGB)>:
_ZN19CPixelLEDControllerIL6EOrder66ELi1ELm4294967295EE9showColorERK4CRGBiS2_():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:626

    /// Set all the LEDs on the controller to a given color
    /// @param data the CRGB color to set the LEDs to
    /// @param nLeds the number of LEDs to set to this color
    /// @param scale the RGB scaling value for outputting color
    virtual void showColor(const struct CRGB & data, int nLeds, CRGB scale) {
     912:	ef 92       	push	r14
     914:	ff 92       	push	r15
     916:	0f 93       	push	r16
     918:	1f 93       	push	r17
     91a:	cf 93       	push	r28
     91c:	df 93       	push	r29
     91e:	cd b7       	in	r28, 0x3d	; 61
     920:	de b7       	in	r29, 0x3e	; 62
     922:	62 97       	sbiw	r28, 0x12	; 18
     924:	0f b6       	in	r0, 0x3f	; 63
     926:	f8 94       	cli
     928:	de bf       	out	0x3e, r29	; 62
     92a:	0f be       	out	0x3f, r0	; 63
     92c:	cd bf       	out	0x3d, r28	; 61
     92e:	7c 01       	movw	r14, r24
     930:	dc 01       	movw	r26, r24
     932:	1c 96       	adiw	r26, 0x0c	; 12
     934:	8c 91       	ld	r24, X
__base_ctor ():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:325
        /// Constructor
        /// @param d pointer to LED data
        /// @param len length of the LED data
        /// @param s LED scale values, as CRGB struct
        /// @param dither dither setting for the LEDs
        PixelController(const CRGB &d, int len, CRGB & s, EDitherMode dither = BINARY_DITHER) : mData((const uint8_t*)&d), mLen(len), mLenRemaining(len), mScale(s) {
     936:	7a 83       	std	Y+2, r23	; 0x02
     938:	69 83       	std	Y+1, r22	; 0x01
     93a:	5c 83       	std	Y+4, r21	; 0x04
     93c:	4b 83       	std	Y+3, r20	; 0x03
     93e:	5e 83       	std	Y+6, r21	; 0x06
     940:	4d 83       	std	Y+5, r20	; 0x05
     942:	0d 87       	std	Y+13, r16	; 0x0d
     944:	1e 87       	std	Y+14, r17	; 0x0e
     946:	2f 87       	std	Y+15, r18	; 0x0f
enable_dithering():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:438
        /// If dithering is set to enabled, this will re-init the dithering values
        /// (init_binary_dithering()). Otherwise it will clear the stored dithering
        /// data.
        /// @param dither the dither setting
        void enable_dithering(EDitherMode dither) {
            switch(dither) {
     948:	81 30       	cpi	r24, 0x01	; 1
     94a:	f1 f4       	brne	.+60     	; 0x988 <CPixelLEDController<(EOrder)66, 1, 4294967295ul>::showColor(CRGB const&, int, CRGB)+0x76>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:439
                case BINARY_DITHER: init_binary_dithering(); break;
     94c:	ce 01       	movw	r24, r28
     94e:	01 96       	adiw	r24, 0x01	; 1
     950:	6c dd       	rcall	.-1320   	; 0x42a <PixelController<(EOrder)66, 1, 4294967295ul>::init_binary_dithering()>
__base_ctor ():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:327
        /// @param len length of the LED data
        /// @param s LED scale values, as CRGB struct
        /// @param dither dither setting for the LEDs
        PixelController(const CRGB &d, int len, CRGB & s, EDitherMode dither = BINARY_DITHER) : mData((const uint8_t*)&d), mLen(len), mLenRemaining(len), mScale(s) {
            enable_dithering(dither);
            mAdvance = 0;
     952:	18 8a       	std	Y+16, r1	; 0x10
initOffsets():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:290
        /// Initialize the PixelController::mOffsets array based on the length of the strip
        /// @param len the number of LEDs in one lane of the strip
        void initOffsets(int len) {
          int nOffset = 0;
          for(int i = 0; i < LANES; ++i) {
            mOffsets[i] = nOffset;
     954:	1a 8a       	std	Y+18, r1	; 0x12
     956:	19 8a       	std	Y+17, r1	; 0x11
_ZN19CPixelLEDControllerIL6EOrder66ELi1ELm4294967295EE9showColorERK4CRGBiS2_():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:628
    /// @param data the CRGB color to set the LEDs to
    /// @param nLeds the number of LEDs to set to this color
    /// @param scale the RGB scaling value for outputting color
    virtual void showColor(const struct CRGB & data, int nLeds, CRGB scale) {
        PixelController<RGB_ORDER, LANES, MASK> pixels(data, nLeds, scale, getDither());
        showPixels(pixels);
     958:	d7 01       	movw	r26, r14
     95a:	ed 91       	ld	r30, X+
     95c:	fc 91       	ld	r31, X
     95e:	06 84       	ldd	r0, Z+14	; 0x0e
     960:	f7 85       	ldd	r31, Z+15	; 0x0f
     962:	e0 2d       	mov	r30, r0
     964:	be 01       	movw	r22, r28
     966:	6f 5f       	subi	r22, 0xFF	; 255
     968:	7f 4f       	sbci	r23, 0xFF	; 255
     96a:	c7 01       	movw	r24, r14
     96c:	09 95       	icall
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:629
    }
     96e:	62 96       	adiw	r28, 0x12	; 18
     970:	0f b6       	in	r0, 0x3f	; 63
     972:	f8 94       	cli
     974:	de bf       	out	0x3e, r29	; 62
     976:	0f be       	out	0x3f, r0	; 63
     978:	cd bf       	out	0x3d, r28	; 61
     97a:	df 91       	pop	r29
     97c:	cf 91       	pop	r28
     97e:	1f 91       	pop	r17
     980:	0f 91       	pop	r16
     982:	ff 90       	pop	r15
     984:	ef 90       	pop	r14
     986:	08 95       	ret
enable_dithering():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:440
        /// data.
        /// @param dither the dither setting
        void enable_dithering(EDitherMode dither) {
            switch(dither) {
                case BINARY_DITHER: init_binary_dithering(); break;
                default: d[0]=d[1]=d[2]=e[0]=e[1]=e[2]=0; break;
     988:	1c 86       	std	Y+12, r1	; 0x0c
     98a:	1b 86       	std	Y+11, r1	; 0x0b
     98c:	1a 86       	std	Y+10, r1	; 0x0a
     98e:	19 86       	std	Y+9, r1	; 0x09
     990:	18 86       	std	Y+8, r1	; 0x08
     992:	1f 82       	std	Y+7, r1	; 0x07
     994:	de cf       	rjmp	.-68     	; 0x952 <CPixelLEDController<(EOrder)66, 1, 4294967295ul>::showColor(CRGB const&, int, CRGB)+0x40>

00000996 <RampInit()>:
_Z8RampInitv():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:512
		leds[iLed] = color; 
	}
}

void RampInit()	{
	for(Vect[0] = 0, i=1; i < NUM_LEDS; i++)	{ Vect[i] = Vect[i-1]+255/NUM_LEDS;};
     996:	10 92 c2 00 	sts	0x00C2, r1	; 0x8000c2 <Vect>
     99a:	e2 ec       	ldi	r30, 0xC2	; 194
     99c:	f0 e0       	ldi	r31, 0x00	; 0
     99e:	94 e1       	ldi	r25, 0x14	; 20
     9a0:	91 50       	subi	r25, 0x01	; 1
     9a2:	21 f0       	breq	.+8      	; 0x9ac <RampInit()+0x16>
     9a4:	81 91       	ld	r24, Z+
     9a6:	84 5f       	subi	r24, 0xF4	; 244
     9a8:	80 83       	st	Z, r24
     9aa:	fa cf       	rjmp	.-12     	; 0x9a0 <RampInit()+0xa>
     9ac:	84 e1       	ldi	r24, 0x14	; 20
     9ae:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <i>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:513
     9b2:	08 95       	ret

000009b4 <ColorLeds(CRGB)>:
_Z9ColorLeds4CRGB():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:505
		else if	(ColorSwitch == BlueDD)		{TempColor = CRGB(0, 0, Vect[TempIndex]);}
		leds[iLed] = TempColor;
	}
}

void ColorLeds(CRGB color)	{
     9b4:	cf 92       	push	r12
     9b6:	df 92       	push	r13
     9b8:	ef 92       	push	r14
     9ba:	6b 01       	movw	r12, r22
     9bc:	e8 2e       	mov	r14, r24
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:506
	for (iLed=0; iLed<NUM_LEDS; iLed++) {
     9be:	10 92 d6 00 	sts	0x00D6, r1	; 0x8000d6 <iLed>
     9c2:	80 91 d6 00 	lds	r24, 0x00D6	; 0x8000d6 <iLed>
     9c6:	84 31       	cpi	r24, 0x14	; 20
     9c8:	80 f4       	brcc	.+32     	; 0x9ea <ColorLeds(CRGB)+0x36>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:507
		leds[iLed] = color; 
     9ca:	28 2f       	mov	r18, r24
     9cc:	30 e0       	ldi	r19, 0x00	; 0
     9ce:	f9 01       	movw	r30, r18
     9d0:	ee 0f       	add	r30, r30
     9d2:	ff 1f       	adc	r31, r31
     9d4:	e2 0f       	add	r30, r18
     9d6:	f3 1f       	adc	r31, r19
     9d8:	e9 52       	subi	r30, 0x29	; 41
     9da:	ff 4f       	sbci	r31, 0xFF	; 255
     9dc:	c0 82       	st	Z, r12
     9de:	d1 82       	std	Z+1, r13	; 0x01
     9e0:	e2 82       	std	Z+2, r14	; 0x02
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:506
		leds[iLed] = TempColor;
	}
}

void ColorLeds(CRGB color)	{
	for (iLed=0; iLed<NUM_LEDS; iLed++) {
     9e2:	8f 5f       	subi	r24, 0xFF	; 255
     9e4:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <iLed>
     9e8:	ec cf       	rjmp	.-40     	; 0x9c2 <ColorLeds(CRGB)+0xe>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:509
		leds[iLed] = color; 
	}
}
     9ea:	ef 90       	pop	r14
     9ec:	df 90       	pop	r13
     9ee:	cf 90       	pop	r12
     9f0:	08 95       	ret

000009f2 <ShiftLed(unsigned char)>:
_Z8ShiftLedh():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:494

void ShiftLed(uint8_t ColorSwitch)	{
	CRGB TempColor;
	uint8_t TempIndex;
	for (iLed=0; iLed<NUM_LEDS; iLed++) {
		TempIndex = iLed + iFrame;
     9f2:	50 91 16 01 	lds	r21, 0x0116	; 0x800116 <iFrame>
     9f6:	a7 ed       	ldi	r26, 0xD7	; 215
     9f8:	b0 e0       	ldi	r27, 0x00	; 0
     9fa:	90 e0       	ldi	r25, 0x00	; 0
     9fc:	e5 2f       	mov	r30, r21
     9fe:	e9 0f       	add	r30, r25
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:495
		while(TempIndex >= NUM_LEDS)	{ 
     a00:	e4 31       	cpi	r30, 0x14	; 20
     a02:	10 f0       	brcs	.+4      	; 0xa08 <ShiftLed(unsigned char)+0x16>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:496
			TempIndex = TempIndex - NUM_LEDS;
     a04:	e4 51       	subi	r30, 0x14	; 20
     a06:	fc cf       	rjmp	.-8      	; 0xa00 <ShiftLed(unsigned char)+0xe>
     a08:	f0 e0       	ldi	r31, 0x00	; 0
     a0a:	ee 53       	subi	r30, 0x3E	; 62
     a0c:	ff 4f       	sbci	r31, 0xFF	; 255
     a0e:	20 81       	ld	r18, Z
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:498
		}
		if		(ColorSwitch == RedDD)		{TempColor = CRGB(Vect[TempIndex], 0, 0);}
     a10:	30 e0       	ldi	r19, 0x00	; 0
     a12:	40 e0       	ldi	r20, 0x00	; 0
     a14:	88 23       	and	r24, r24
     a16:	39 f0       	breq	.+14     	; 0xa26 <ShiftLed(unsigned char)+0x34>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:500
		else if	(ColorSwitch == GreenDD)	{TempColor = CRGB(0, Vect[TempIndex], 0);}
		else if	(ColorSwitch == BlueDD)		{TempColor = CRGB(0, 0, Vect[TempIndex]);}
     a18:	32 2f       	mov	r19, r18
     a1a:	40 e0       	ldi	r20, 0x00	; 0
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:499
		TempIndex = iLed + iFrame;
		while(TempIndex >= NUM_LEDS)	{ 
			TempIndex = TempIndex - NUM_LEDS;
		}
		if		(ColorSwitch == RedDD)		{TempColor = CRGB(Vect[TempIndex], 0, 0);}
		else if	(ColorSwitch == GreenDD)	{TempColor = CRGB(0, Vect[TempIndex], 0);}
     a1c:	81 30       	cpi	r24, 0x01	; 1
     a1e:	11 f4       	brne	.+4      	; 0xa24 <ShiftLed(unsigned char)+0x32>
     a20:	42 2f       	mov	r20, r18
     a22:	30 e0       	ldi	r19, 0x00	; 0
     a24:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:501
		else if	(ColorSwitch == BlueDD)		{TempColor = CRGB(0, 0, Vect[TempIndex]);}
		leds[iLed] = TempColor;
     a26:	2c 93       	st	X, r18
     a28:	11 96       	adiw	r26, 0x01	; 1
     a2a:	4c 93       	st	X, r20
     a2c:	11 97       	sbiw	r26, 0x01	; 1
     a2e:	12 96       	adiw	r26, 0x02	; 2
     a30:	3c 93       	st	X, r19
     a32:	12 97       	sbiw	r26, 0x02	; 2
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:493
}

void ShiftLed(uint8_t ColorSwitch)	{
	CRGB TempColor;
	uint8_t TempIndex;
	for (iLed=0; iLed<NUM_LEDS; iLed++) {
     a34:	9f 5f       	subi	r25, 0xFF	; 255
     a36:	13 96       	adiw	r26, 0x03	; 3
     a38:	94 31       	cpi	r25, 0x14	; 20
     a3a:	01 f7       	brne	.-64     	; 0x9fc <ShiftLed(unsigned char)+0xa>
     a3c:	90 93 d6 00 	sts	0x00D6, r25	; 0x8000d6 <iLed>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:503
		if		(ColorSwitch == RedDD)		{TempColor = CRGB(Vect[TempIndex], 0, 0);}
		else if	(ColorSwitch == GreenDD)	{TempColor = CRGB(0, Vect[TempIndex], 0);}
		else if	(ColorSwitch == BlueDD)		{TempColor = CRGB(0, 0, Vect[TempIndex]);}
		leds[iLed] = TempColor;
	}
}
     a40:	08 95       	ret

00000a42 <CLEDController::getMaxRefreshRate() const>:
_ZNK14CLEDController17getMaxRefreshRateEv():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:249
      #endif
    }

    /// Gets the maximum possible refresh rate of the strip
    /// @returns the maximum refresh rate, in frames per second (FPS)
    virtual uint16_t getMaxRefreshRate() const { return 0; }
     a42:	90 e0       	ldi	r25, 0x00	; 0
     a44:	80 e0       	ldi	r24, 0x00	; 0
     a46:	08 95       	ret

00000a48 <CLEDController::size()>:
_ZN14CLEDController4sizeEv():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:165
        }
    }

    /// How many LEDs does this controller manage?
    /// @returns CLEDController::m_nLeds
    virtual int size() { return m_nLeds; }
     a48:	fc 01       	movw	r30, r24
     a4a:	85 85       	ldd	r24, Z+13	; 0x0d
     a4c:	96 85       	ldd	r25, Z+14	; 0x0e
     a4e:	08 95       	ret

00000a50 <CLEDController::clearLeds(int)>:
_ZN14CLEDController9clearLedsEi():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:99
    /// Initialize the LED controller
    virtual void init() = 0;

    /// Clear out/zero out the given number of LEDs.
    /// @param nLeds the number of LEDs to clear
    virtual void clearLeds(int nLeds) { showColor(CRGB::Black, nLeds, CRGB::Black); }
     a50:	0f 93       	push	r16
     a52:	1f 93       	push	r17
     a54:	cf 93       	push	r28
     a56:	df 93       	push	r29
     a58:	00 d0       	rcall	.+0      	; 0xa5a <CLEDController::clearLeds(int)+0xa>
     a5a:	1f 92       	push	r1
     a5c:	cd b7       	in	r28, 0x3d	; 61
     a5e:	de b7       	in	r29, 0x3e	; 62
     a60:	ab 01       	movw	r20, r22
_ZN4CRGBC2Em():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:176
    }

    /// Allow construction from 32-bit (really 24-bit) bit 0xRRGGBB color code
    /// @param colorcode a packed 24 bit color code
    inline CRGB( uint32_t colorcode)  __attribute__((always_inline))
    : r((colorcode >> 16) & 0xFF), g((colorcode >> 8) & 0xFF), b((colorcode >> 0) & 0xFF)
     a62:	19 82       	std	Y+1, r1	; 0x01
     a64:	1a 82       	std	Y+2, r1	; 0x02
     a66:	1b 82       	std	Y+3, r1	; 0x03
showColor():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:120
    /// @param data the CRGB color to set the LEDs to
    /// @param nLeds the number of LEDs in the data array
    /// @param brightness the brightness of the LEDs
    /// @see showColor(const struct CRGB&, int, CRGB)
    void showColor(const struct CRGB &data, int nLeds, uint8_t brightness) {
        showColor(data, nLeds, getAdjustment(brightness));
     a68:	dc 01       	movw	r26, r24
     a6a:	ed 91       	ld	r30, X+
     a6c:	fc 91       	ld	r31, X
     a6e:	01 90       	ld	r0, Z+
     a70:	f0 81       	ld	r31, Z
     a72:	e0 2d       	mov	r30, r0
     a74:	00 e0       	ldi	r16, 0x00	; 0
     a76:	10 e0       	ldi	r17, 0x00	; 0
     a78:	20 e0       	ldi	r18, 0x00	; 0
     a7a:	be 01       	movw	r22, r28
     a7c:	6f 5f       	subi	r22, 0xFF	; 255
     a7e:	7f 4f       	sbci	r23, 0xFF	; 255
     a80:	09 95       	icall
_ZN14CLEDController9clearLedsEi():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:99
    /// Initialize the LED controller
    virtual void init() = 0;

    /// Clear out/zero out the given number of LEDs.
    /// @param nLeds the number of LEDs to clear
    virtual void clearLeds(int nLeds) { showColor(CRGB::Black, nLeds, CRGB::Black); }
     a82:	0f 90       	pop	r0
     a84:	0f 90       	pop	r0
     a86:	0f 90       	pop	r0
     a88:	df 91       	pop	r29
     a8a:	cf 91       	pop	r28
     a8c:	1f 91       	pop	r17
     a8e:	0f 91       	pop	r16
     a90:	08 95       	ret

00000a92 <__cxa_pure_virtual>:
__cxa_pure_virtual():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/abi.cpp:26
extern "C" void __cxa_pure_virtual(void) __attribute__ ((__noreturn__));
extern "C" void __cxa_deleted_virtual(void) __attribute__ ((__noreturn__));

namespace std {
  [[gnu::weak, noreturn]] void terminate() {
    abort();
     a92:	48 d8       	rcall	.-3952   	; 0xfffffb24 <__eeprom_end+0xff7efb24>

00000a94 <__vector_9>:
__vector_9():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:159
#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)
ISR(TIM0_OVF_vect)
#else
ISR(TIMER0_OVF_vect)
#endif
{
     a94:	1f 92       	push	r1
     a96:	0f 92       	push	r0
     a98:	0f b6       	in	r0, 0x3f	; 63
     a9a:	0f 92       	push	r0
     a9c:	11 24       	eor	r1, r1
     a9e:	2f 93       	push	r18
     aa0:	3f 93       	push	r19
     aa2:	8f 93       	push	r24
     aa4:	9f 93       	push	r25
     aa6:	af 93       	push	r26
     aa8:	bf 93       	push	r27
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:167
  static unsigned char timer0_exact = 0;
#endif

  // copy these to local variables so they can be stored in registers
  // (volatile variables must be read from memory on every access, so this saves time)
  unsigned long m = timer0_millis;
     aaa:	80 91 19 01 	lds	r24, 0x0119	; 0x800119 <timer0_millis>
     aae:	90 91 1a 01 	lds	r25, 0x011A	; 0x80011a <timer0_millis+0x1>
     ab2:	a0 91 1b 01 	lds	r26, 0x011B	; 0x80011b <timer0_millis+0x2>
     ab6:	b0 91 1c 01 	lds	r27, 0x011C	; 0x80011c <timer0_millis+0x3>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:168
  unsigned char f = timer0_fract;
     aba:	30 91 a2 00 	lds	r19, 0x00A2	; 0x8000a2 <timer0_fract>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:170

  f += FRACT_INC FRACT_INC_PLUS;
     abe:	26 e0       	ldi	r18, 0x06	; 6
     ac0:	23 0f       	add	r18, r19
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:200
    ++f;
  }
#endif
#endif // CORRECT_EXACT_MILLIS

  if (f >= FRACT_MAX) {
     ac2:	2d 37       	cpi	r18, 0x7D	; 125
     ac4:	68 f1       	brcs	.+90     	; 0xb20 <__vector_9+0x8c>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:201
    f -= FRACT_MAX;
     ac6:	29 e8       	ldi	r18, 0x89	; 137
     ac8:	23 0f       	add	r18, r19
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:202
    m += MILLIS_INC + 1;
     aca:	03 96       	adiw	r24, 0x03	; 3
     acc:	a1 1d       	adc	r26, r1
     ace:	b1 1d       	adc	r27, r1
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:208
  }
  else {
    m += MILLIS_INC;
  }

  timer0_fract = f;
     ad0:	20 93 a2 00 	sts	0x00A2, r18	; 0x8000a2 <timer0_fract>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:209
  timer0_millis = m;
     ad4:	80 93 19 01 	sts	0x0119, r24	; 0x800119 <timer0_millis>
     ad8:	90 93 1a 01 	sts	0x011A, r25	; 0x80011a <timer0_millis+0x1>
     adc:	a0 93 1b 01 	sts	0x011B, r26	; 0x80011b <timer0_millis+0x2>
     ae0:	b0 93 1c 01 	sts	0x011C, r27	; 0x80011c <timer0_millis+0x3>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:211
#ifndef CORRECT_EXACT_MICROS
  timer0_overflow_count++;
     ae4:	80 91 a3 00 	lds	r24, 0x00A3	; 0x8000a3 <timer0_overflow_count>
     ae8:	90 91 a4 00 	lds	r25, 0x00A4	; 0x8000a4 <timer0_overflow_count+0x1>
     aec:	a0 91 a5 00 	lds	r26, 0x00A5	; 0x8000a5 <timer0_overflow_count+0x2>
     af0:	b0 91 a6 00 	lds	r27, 0x00A6	; 0x8000a6 <timer0_overflow_count+0x3>
     af4:	01 96       	adiw	r24, 0x01	; 1
     af6:	a1 1d       	adc	r26, r1
     af8:	b1 1d       	adc	r27, r1
     afa:	80 93 a3 00 	sts	0x00A3, r24	; 0x8000a3 <timer0_overflow_count>
     afe:	90 93 a4 00 	sts	0x00A4, r25	; 0x8000a4 <timer0_overflow_count+0x1>
     b02:	a0 93 a5 00 	sts	0x00A5, r26	; 0x8000a5 <timer0_overflow_count+0x2>
     b06:	b0 93 a6 00 	sts	0x00A6, r27	; 0x8000a6 <timer0_overflow_count+0x3>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:213
#endif
}
     b0a:	bf 91       	pop	r27
     b0c:	af 91       	pop	r26
     b0e:	9f 91       	pop	r25
     b10:	8f 91       	pop	r24
     b12:	3f 91       	pop	r19
     b14:	2f 91       	pop	r18
     b16:	0f 90       	pop	r0
     b18:	0f be       	out	0x3f, r0	; 63
     b1a:	0f 90       	pop	r0
     b1c:	1f 90       	pop	r1
     b1e:	18 95       	reti
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:205
  if (f >= FRACT_MAX) {
    f -= FRACT_MAX;
    m += MILLIS_INC + 1;
  }
  else {
    m += MILLIS_INC;
     b20:	02 96       	adiw	r24, 0x02	; 2
     b22:	a1 1d       	adc	r26, r1
     b24:	b1 1d       	adc	r27, r1
     b26:	d4 cf       	rjmp	.-88     	; 0xad0 <__vector_9+0x3c>

00000b28 <main>:
main():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:945

void init()
{
  // this needs to be called before setup() or some functions won't
  // work there
  sei();
     b28:	78 94       	sei
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:966
#if defined(__AVR_ATmega64__) || defined(__AVR_ATmega128__)
  // CPU specific: different values for the ATmega64/128
  TCCR0 |= _BV(WGM01) | _BV(WGM00) | _BV(CS02);
#elif defined(TCCR0) && defined(CS01) && defined(CS00)
  // This combination is for the ATmega8535, ATmega8, ATmega16, ATmega32, ATmega8515, ATmega162
  TCCR0 |= _BV(CS01) | _BV(CS00);
     b2a:	83 b7       	in	r24, 0x33	; 51
     b2c:	83 60       	ori	r24, 0x03	; 3
     b2e:	83 bf       	out	0x33, r24	; 51
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:982
  #error Timer 0 prescale factor 64 not set correctly
#endif

// Enable timer 0 overflow interrupt
#if defined(TIMSK) && defined(TOIE0)
  TIMSK |= _BV(TOIE0);
     b30:	89 b7       	in	r24, 0x39	; 57
     b32:	81 60       	ori	r24, 0x01	; 1
     b34:	89 bf       	out	0x39, r24	; 57
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:995
// this is better for motors as it ensures an even waveform
// note, however, that fast pwm mode can achieve a frequency of up
// 8 MHz (with a 16 MHz clock) at 50% duty cycle

#if defined(TCCR1B) && defined(CS11) && defined(CS10)
  TCCR1B = _BV(CS11); // Set timer 1 prescale factor to 64
     b36:	82 e0       	ldi	r24, 0x02	; 2
     b38:	8e bd       	out	0x2e, r24	; 46
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:997
#if F_CPU >= 8000000L
  TCCR1B |= _BV(CS10);
     b3a:	8e b5       	in	r24, 0x2e	; 46
     b3c:	81 60       	ori	r24, 0x01	; 1
     b3e:	8e bd       	out	0x2e, r24	; 46
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:1006
#if F_CPU >= 8000000L
  TCCR1 |= _BV(CS10);
#endif
#endif
#if defined(TCCR1A) && defined(WGM10)
  TCCR1A |= _BV(WGM10); // Put timer 1 in 8-bit phase correct pwm mode
     b40:	8f b5       	in	r24, 0x2f	; 47
     b42:	81 60       	ori	r24, 0x01	; 1
     b44:	8f bd       	out	0x2f, r24	; 47
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:1011
#endif

// Set timer 2 prescale factor to 64
#if defined(TCCR2) && defined(CS22)
  TCCR2 |= _BV(CS22);
     b46:	85 b5       	in	r24, 0x25	; 37
     b48:	84 60       	ori	r24, 0x04	; 4
     b4a:	85 bd       	out	0x25, r24	; 37
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:1020
  TCCR2A |= _BV(CS22);
#endif

// Configure timer 2 for phase correct pwm (8-bit)
#if defined(TCCR2) && defined(WGM20)
  TCCR2 |= _BV(WGM20);
     b4c:	85 b5       	in	r24, 0x25	; 37
     b4e:	80 64       	ori	r24, 0x40	; 64
     b50:	85 bd       	out	0x25, r24	; 37
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:1052
#if defined(ADCSRA)
  // set a2d prescaler so we are inside the desired 50-200 KHz range.
  #if F_CPU >= 16000000 // 16 MHz / 128 = 125 KHz
    ADCSRA = _BV(ADPS2) | _BV(ADPS1) | _BV(ADPS0) | _BV(ADEN);
  #elif F_CPU >= 8000000 // 8 MHz / 64 = 125 KHz
    ADCSRA = _BV(ADPS2) | _BV(ADPS1) | _BV(ADEN);
     b52:	86 e8       	ldi	r24, 0x86	; 134
     b54:	86 b9       	out	0x06, r24	; 6
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:1068

  // The bootloader connects pins 0 and 1 to the USART; disconnect them
  // here so they can be used as normal digital i/o; they will be
  // reconnected in Serial.begin()
#if defined(UCSRB)
  UCSRB = 0;
     b56:	1a b8       	out	0x0a, r1	; 10
pinMode():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:31
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
  uint8_t bit = digitalPinToBitMask(pin);
     b58:	e9 e6       	ldi	r30, 0x69	; 105
     b5a:	f0 e0       	ldi	r31, 0x00	; 0
     b5c:	24 91       	lpm	r18, Z
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:32
  uint8_t port = digitalPinToPort(pin);
     b5e:	e2 e5       	ldi	r30, 0x52	; 82
     b60:	f0 e0       	ldi	r31, 0x00	; 0
     b62:	84 91       	lpm	r24, Z
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:35
  volatile uint8_t *reg, *out;

  if (port == NOT_A_PIN) return;
     b64:	88 23       	and	r24, r24
     b66:	c1 f0       	breq	.+48     	; 0xb98 <main+0x70>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:38

  // JWS: can I let the optimizer do this?
  reg = portModeRegister(port);
     b68:	90 e0       	ldi	r25, 0x00	; 0
     b6a:	88 0f       	add	r24, r24
     b6c:	99 1f       	adc	r25, r25
     b6e:	fc 01       	movw	r30, r24
     b70:	e0 5d       	subi	r30, 0xD0	; 208
     b72:	ff 4f       	sbci	r31, 0xFF	; 255
     b74:	c5 91       	lpm	r28, Z+
     b76:	d4 91       	lpm	r29, Z
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:39
  out = portOutputRegister(port);
     b78:	fc 01       	movw	r30, r24
     b7a:	ea 5d       	subi	r30, 0xDA	; 218
     b7c:	ff 4f       	sbci	r31, 0xFF	; 255
     b7e:	a5 91       	lpm	r26, Z+
     b80:	b4 91       	lpm	r27, Z
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:48
    cli();
    *reg &= ~bit;
    *out &= ~bit;
    SREG = oldSREG;
  } else if (mode == INPUT_PULLUP) {
    uint8_t oldSREG = SREG;
     b82:	9f b7       	in	r25, 0x3f	; 63
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:49
    cli();
     b84:	f8 94       	cli
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:50
    *reg &= ~bit;
     b86:	38 81       	ld	r19, Y
     b88:	82 2f       	mov	r24, r18
     b8a:	80 95       	com	r24
     b8c:	83 23       	and	r24, r19
     b8e:	88 83       	st	Y, r24
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:51
    *out |= bit;
     b90:	ec 91       	ld	r30, X
     b92:	e2 2b       	or	r30, r18
     b94:	ec 93       	st	X, r30
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:52
    SREG = oldSREG;
     b96:	9f bf       	out	0x3f, r25	; 63
addLeds():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.h:352
	/// @{

	/// Add a clockless based CLEDController instance to the world.
	template<template<uint8_t DATA_PIN, EOrder RGB_ORDER> class CHIPSET, uint8_t DATA_PIN, EOrder RGB_ORDER>
	static CLEDController &addLeds(struct CRGB *data, int nLedsOrOffset, int nLedsIfOffset = 0) {
		static CHIPSET<DATA_PIN, RGB_ORDER> c;
     b98:	80 91 ba 00 	lds	r24, 0x00BA	; 0x8000ba <guard variable for CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c>
     b9c:	81 11       	cpse	r24, r1
     b9e:	45 c0       	rjmp	.+138    	; 0xc2a <main+0x102>
__base_ctor ():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:87
    /// @param scale the rgb scaling to apply to each led before writing it out
    virtual void show(const struct CRGB *data, int nLeds, CRGB scale) = 0;

public:
    /// Create an led controller object, add it to the chain of controllers
    CLEDController() : m_Data(NULL), m_ColorCorrection(UncorrectedColor), m_ColorTemperature(UncorrectedTemperature), m_DitherMode(BINARY_DITHER), m_nLeds(0) {
     ba0:	10 92 ac 00 	sts	0x00AC, r1	; 0x8000ac <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0x3>
     ba4:	10 92 ab 00 	sts	0x00AB, r1	; 0x8000ab <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0x2>
_ZN4CRGBC2E18LEDColorCorrection():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:183
    }

    /// Allow construction from a LEDColorCorrection enum
    /// @param colorcode an LEDColorCorrect enumeration value
    inline CRGB( LEDColorCorrection colorcode) __attribute__((always_inline))
    : r((colorcode >> 16) & 0xFF), g((colorcode >> 8) & 0xFF), b((colorcode >> 0) & 0xFF)
     ba8:	8f ef       	ldi	r24, 0xFF	; 255
     baa:	80 93 af 00 	sts	0x00AF, r24	; 0x8000af <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0x6>
     bae:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0x7>
     bb2:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0x8>
_ZN4CRGBC2E16ColorTemperature():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:191
    }

    /// Allow construction from a ColorTemperature enum
    /// @param colorcode an ColorTemperature enumeration value
    inline CRGB( ColorTemperature colorcode) __attribute__((always_inline))
    : r((colorcode >> 16) & 0xFF), g((colorcode >> 8) & 0xFF), b((colorcode >> 0) & 0xFF)
     bb6:	80 93 b2 00 	sts	0x00B2, r24	; 0x8000b2 <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0x9>
     bba:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0xa>
     bbe:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0xb>
__base_ctor ():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:87
     bc2:	81 e0       	ldi	r24, 0x01	; 1
     bc4:	80 93 b5 00 	sts	0x00B5, r24	; 0x8000b5 <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0xc>
     bc8:	10 92 b7 00 	sts	0x00B7, r1	; 0x8000b7 <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0xe>
     bcc:	10 92 b6 00 	sts	0x00B6, r1	; 0x8000b6 <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0xd>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:88
        m_pNext = NULL;
     bd0:	10 92 ae 00 	sts	0x00AE, r1	; 0x8000ae <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0x5>
     bd4:	10 92 ad 00 	sts	0x00AD, r1	; 0x8000ad <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0x4>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:89
        if(m_pHead==NULL) { m_pHead = this; }
     bd8:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <CLEDController::m_pHead>
     bdc:	90 91 24 01 	lds	r25, 0x0124	; 0x800124 <CLEDController::m_pHead+0x1>
     be0:	89 2b       	or	r24, r25
     be2:	31 f4       	brne	.+12     	; 0xbf0 <main+0xc8>
     be4:	89 ea       	ldi	r24, 0xA9	; 169
     be6:	90 e0       	ldi	r25, 0x00	; 0
     be8:	90 93 24 01 	sts	0x0124, r25	; 0x800124 <CLEDController::m_pHead+0x1>
     bec:	80 93 23 01 	sts	0x0123, r24	; 0x800123 <CLEDController::m_pHead>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:90
        if(m_pTail != NULL) { m_pTail->m_pNext = this; }
     bf0:	e0 91 a7 00 	lds	r30, 0x00A7	; 0x8000a7 <CLEDController::m_pTail>
     bf4:	f0 91 a8 00 	lds	r31, 0x00A8	; 0x8000a8 <CLEDController::m_pTail+0x1>
     bf8:	30 97       	sbiw	r30, 0x00	; 0
     bfa:	21 f0       	breq	.+8      	; 0xc04 <main+0xdc>
     bfc:	89 ea       	ldi	r24, 0xA9	; 169
     bfe:	90 e0       	ldi	r25, 0x00	; 0
     c00:	95 83       	std	Z+5, r25	; 0x05
     c02:	84 83       	std	Z+4, r24	; 0x04
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:91
        m_pTail = this;
     c04:	89 ea       	ldi	r24, 0xA9	; 169
     c06:	90 e0       	ldi	r25, 0x00	; 0
     c08:	90 93 a8 00 	sts	0x00A8, r25	; 0x8000a8 <CLEDController::m_pTail+0x1>
     c0c:	80 93 a7 00 	sts	0x00A7, r24	; 0x8000a7 <CLEDController::m_pTail>
_ZN8CMinWaitILi10EEC2Ev():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/fastled_delay.h:22
	/// Timestamp of the last time this was run, in microseconds
	uint16_t mLastMicros;

public:
	/// Constructor
	CMinWait() { mLastMicros = 0; }
     c10:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0x10>
     c14:	10 92 b8 00 	sts	0x00B8, r1	; 0x8000b8 <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0xf>
__base_ctor ():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.h:132
template<uint8_t DATA_PIN, EOrder RGB_ORDER> class UCS1903B : public UCS1903BController800Khz<DATA_PIN, RGB_ORDER> {};           ///< @copydoc UCS1903BController800Khz
template<uint8_t DATA_PIN, EOrder RGB_ORDER> class UCS1904 : public UCS1904Controller800Khz<DATA_PIN, RGB_ORDER> {};             ///< @copydoc UCS1904Controller800Khz
template<uint8_t DATA_PIN, EOrder RGB_ORDER> class UCS2903 : public UCS2903Controller<DATA_PIN, RGB_ORDER> {};                   ///< @copydoc UCS2903Controller
template<uint8_t DATA_PIN, EOrder RGB_ORDER> class WS2812 : public WS2812Controller800Khz<DATA_PIN, RGB_ORDER> {};               ///< @copydoc WS2812Controller800Khz
template<uint8_t DATA_PIN, EOrder RGB_ORDER> class WS2852 : public WS2812Controller800Khz<DATA_PIN, RGB_ORDER> {};               ///< WS2852 controller class. @copydetails WS2812Controller800Khz
template<uint8_t DATA_PIN, EOrder RGB_ORDER> class WS2812B : public WS2812Controller800Khz<DATA_PIN, RGB_ORDER> {};              ///< WS2812B controller class. @copydetails WS2812Controller800Khz
     c18:	8b e7       	ldi	r24, 0x7B	; 123
     c1a:	90 e0       	ldi	r25, 0x00	; 0
     c1c:	90 93 aa 00 	sts	0x00AA, r25	; 0x8000aa <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0x1>
     c20:	80 93 a9 00 	sts	0x00A9, r24	; 0x8000a9 <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c>
addLeds():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.h:352
	/// @{

	/// Add a clockless based CLEDController instance to the world.
	template<template<uint8_t DATA_PIN, EOrder RGB_ORDER> class CHIPSET, uint8_t DATA_PIN, EOrder RGB_ORDER>
	static CLEDController &addLeds(struct CRGB *data, int nLedsOrOffset, int nLedsIfOffset = 0) {
		static CHIPSET<DATA_PIN, RGB_ORDER> c;
     c24:	81 e0       	ldi	r24, 0x01	; 1
     c26:	80 93 ba 00 	sts	0x00BA, r24	; 0x8000ba <guard variable for CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c>
setOutput():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/fastpin_avr.h:22
     c2a:	bb 9a       	sbi	0x17, 3	; 23
_ZN14CLEDController7setLedsEP4CRGBi():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:151

    /// Set the default array of LEDs to be used by this controller
    /// @param data pointer to the LED data
    /// @param nLeds the number of LEDs in the LED data
    CLEDController & setLeds(CRGB *data, int nLeds) {
        m_Data = data;
     c2c:	87 ed       	ldi	r24, 0xD7	; 215
     c2e:	90 e0       	ldi	r25, 0x00	; 0
     c30:	90 93 ac 00 	sts	0x00AC, r25	; 0x8000ac <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0x3>
     c34:	80 93 ab 00 	sts	0x00AB, r24	; 0x8000ab <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0x2>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:152
        m_nLeds = nLeds;
     c38:	84 e1       	ldi	r24, 0x14	; 20
     c3a:	90 e0       	ldi	r25, 0x00	; 0
     c3c:	90 93 b7 00 	sts	0x00B7, r25	; 0x8000b7 <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0xe>
     c40:	80 93 b6 00 	sts	0x00B6, r24	; 0x8000b6 <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0xd>
setMaxRefreshRate():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:242
void CFastLED::setMaxRefreshRate(uint16_t refresh, bool constrain) {
	if(constrain) {
		// if we're constraining, the new value of m_nMinMicros _must_ be higher than previously (because we're only
		// allowed to slow things down if constraining)
		if(refresh > 0) {
			m_nMinMicros = ((1000000 / refresh) > m_nMinMicros) ? (1000000 / refresh) : m_nMinMicros;
     c44:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <FastLED+0x3>
     c48:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <FastLED+0x4>
     c4c:	a0 91 2e 01 	lds	r26, 0x012E	; 0x80012e <FastLED+0x5>
     c50:	b0 91 2f 01 	lds	r27, 0x012F	; 0x80012f <FastLED+0x6>
     c54:	84 3c       	cpi	r24, 0xC4	; 196
     c56:	29 e0       	ldi	r18, 0x09	; 9
     c58:	92 07       	cpc	r25, r18
     c5a:	a1 05       	cpc	r26, r1
     c5c:	b1 05       	cpc	r27, r1
     c5e:	20 f4       	brcc	.+8      	; 0xc68 <main+0x140>
     c60:	84 ec       	ldi	r24, 0xC4	; 196
     c62:	99 e0       	ldi	r25, 0x09	; 9
     c64:	a0 e0       	ldi	r26, 0x00	; 0
     c66:	b0 e0       	ldi	r27, 0x00	; 0
     c68:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <FastLED+0x3>
     c6c:	90 93 2d 01 	sts	0x012D, r25	; 0x80012d <FastLED+0x4>
     c70:	a0 93 2e 01 	sts	0x012E, r26	; 0x80012e <FastLED+0x5>
     c74:	b0 93 2f 01 	sts	0x012F, r27	; 0x80012f <FastLED+0x6>
_ZN8CFastLED13setBrightnessEh():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.h:553
	/// @} Adding parallel output controllers
#endif

	/// Set the global brightness scaling
	/// @param scale a 0-255 value for how much to scale all leds before writing them out
	void setBrightness(uint8_t scale) { m_Scale = scale; }
     c78:	82 e3       	ldi	r24, 0x32	; 50
     c7a:	80 93 29 01 	sts	0x0129, r24	; 0x800129 <FastLED>
setup():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:40
	//FastLED.setMaxPowerInVoltsAndMilliamps(VOLTS,MAX_AMPS);
	FastLED.setBrightness(BRIGHTNESS);
	//FastLED.clear();
	//FastLED.show(); 

	EEAR = 0x00;
     c7e:	1f ba       	out	0x1f, r1	; 31
     c80:	1e ba       	out	0x1e, r1	; 30
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:42
	//asm volatile ("sbi EECR,EERE");		//Start read.
	asm volatile ("sbi 0x1C,0");			//Write enable on;
     c82:	e0 9a       	sbi	0x1c, 0	; 28
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:43
	Status = EEDR;
     c84:	8d b3       	in	r24, 0x1d	; 29
     c86:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:405
		else if(xFrame == 12)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(Vect[iLed - iFrame], 255, 0);
			}
			for (;iLed != 255; iLed--) {
				leds[iLed] = CRGB(0, 255, 0);
     c8a:	c3 e0       	ldi	r28, 0x03	; 3
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:394
		else if(xFrame == 11)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(255, 255, 0);
			}
			for (;iLed != 255; iLed--) {
				leds[iLed] = CRGB(Vect[NUM_LEDS - 1 - iFrame + iLed], 255, 0);
     c8c:	03 e1       	ldi	r16, 0x13	; 19
     c8e:	20 2e       	mov	r2, r16
     c90:	31 2c       	mov	r3, r1
random():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/WMath.cpp:40
long random(long howbig)
{
  if (howbig == 0) {
    return 0;
  }
  return random() % howbig;
     c92:	84 e1       	ldi	r24, 0x14	; 20
     c94:	48 2e       	mov	r4, r24
     c96:	51 2c       	mov	r5, r1
     c98:	61 2c       	mov	r6, r1
     c9a:	71 2c       	mov	r7, r1
     c9c:	c1 2c       	mov	r12, r1
     c9e:	d1 2c       	mov	r13, r1
     ca0:	76 01       	movw	r14, r12
     ca2:	ca 94       	dec	r12
hsv2rgb_rainbow():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:391
                // 110
                //case 6: // P -- K
                r = K85 + third;
                g = 0;
                FORCE_REFERENCE(g);
                b = K171 - third;
     ca4:	db ea       	ldi	r29, 0xAB	; 171
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:49


}

void loop() {
	for(i = 0; i < FrameDelay; i++)	{
     ca6:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <i>
     caa:	10 91 18 01 	lds	r17, 0x0118	; 0x800118 <i>
     cae:	80 91 17 01 	lds	r24, 0x0117	; 0x800117 <FrameDelay>
     cb2:	18 17       	cp	r17, r24
     cb4:	20 f5       	brcc	.+72     	; 0xcfe <main+0x1d6>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:50
		if(digitalRead(BUTTON_PIN) == 0) {
     cb6:	10 da       	rcall	.-3040   	; 0xd8 <digitalRead.constprop.10>
     cb8:	89 2b       	or	r24, r25
     cba:	c1 f5       	brne	.+112    	; 0xd2c <main+0x204>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:51
			delay(30);											//Debounce.
     cbc:	6e e1       	ldi	r22, 0x1E	; 30
     cbe:	70 e0       	ldi	r23, 0x00	; 0
     cc0:	80 e0       	ldi	r24, 0x00	; 0
     cc2:	90 e0       	ldi	r25, 0x00	; 0
     cc4:	82 db       	rcall	.-2300   	; 0x3ca <delay>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:52
			if(digitalRead(BUTTON_PIN) == 0)	{
     cc6:	08 da       	rcall	.-3056   	; 0xd8 <digitalRead.constprop.10>
     cc8:	89 2b       	or	r24, r25
     cca:	81 f5       	brne	.+96     	; 0xd2c <main+0x204>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:53
				Status += 1;
     ccc:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     cd0:	8f 5f       	subi	r24, 0xFF	; 255
     cd2:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:54
				iFrame = 0;
     cd6:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <iFrame>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:55
				xFrame = 0;
     cda:	10 92 15 01 	sts	0x0115, r1	; 0x800115 <xFrame>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:56
				CountDir = CountUp;
     cde:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <CountDir>
_ZN8CFastLED13setBrightnessEh():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.h:553
     ce2:	92 e3       	ldi	r25, 0x32	; 50
     ce4:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <FastLED>
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:58
				FastLED.setBrightness(BRIGHTNESS);
				ResetStatus = 1;
     ce8:	91 e0       	ldi	r25, 0x01	; 1
     cea:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <ResetStatus>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:60
				//Write status to rom
				EEAR = 0x00;
     cee:	1f ba       	out	0x1f, r1	; 31
     cf0:	1e ba       	out	0x1e, r1	; 30
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:61
				EEDR = Status;
     cf2:	8d bb       	out	0x1d, r24	; 29
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:64
				
				//asm volatile ("sbi EECR,EEMWE");			//Write enable on;
				asm volatile ("sbi 0x1C,2");			//Write enable on;
     cf4:	e2 9a       	sbi	0x1c, 2	; 28
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:66
				//asm volatile ("sbi EECR,EEWE");			//Start write;
				asm volatile ("sbi 0x1C,1");			//Start write;
     cf6:	e1 9a       	sbi	0x1c, 1	; 28
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:67
				while(digitalRead(BUTTON_PIN) == 0)	{}		//Wait button release.
     cf8:	ef d9       	rcall	.-3106   	; 0xd8 <digitalRead.constprop.10>
     cfa:	89 2b       	or	r24, r25
     cfc:	e9 f3       	breq	.-6      	; 0xcf8 <main+0x1d0>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:74
			}
		}
		delay(5);
	}
	//////////////////// STATUS 0 ///////////////////////
	if(Status == 0)	{
     cfe:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:75
		ColorLeds(CRGB::Red);
     d02:	6f ef       	ldi	r22, 0xFF	; 255
     d04:	70 e0       	ldi	r23, 0x00	; 0
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:74
			}
		}
		delay(5);
	}
	//////////////////// STATUS 0 ///////////////////////
	if(Status == 0)	{
     d06:	88 23       	and	r24, r24
     d08:	29 f0       	breq	.+10     	; 0xd14 <main+0x1ec>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:81
		//FastLED.setBrightness(BRIGHTNESS);
		FastLED.show();
		FrameDelay = 255;
	}
	//////////////////// STATUS 1 ///////////////////////
	else if(Status == 1)	{
     d0a:	81 30       	cpi	r24, 0x01	; 1
     d0c:	c1 f4       	brne	.+48     	; 0xd3e <main+0x216>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:82
		ColorLeds(CRGB::Green);
     d0e:	60 e0       	ldi	r22, 0x00	; 0
     d10:	70 e8       	ldi	r23, 0x80	; 128
     d12:	80 e0       	ldi	r24, 0x00	; 0
     d14:	4f de       	rcall	.-866    	; 0x9b4 <ColorLeds(CRGB)>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:84
		//FastLED.setBrightness(BRIGHTNESS);
		FastLED.show();
     d16:	37 da       	rcall	.-2962   	; 0x186 <CFastLED::show() [clone .constprop.13]>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:85
		FrameDelay = 255;
     d18:	8f ef       	ldi	r24, 0xFF	; 255
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:152
  	else if(Status == 8)  {
		fill_rainbow_circular(leds,NUM_LEDS,iFrame);
		//FastLED.setBrightness(BRIGHTNESS);
		FastLED.show();
		iFrame += 10;
		FrameDelay = 5;
     d1a:	80 93 17 01 	sts	0x0117, r24	; 0x800117 <FrameDelay>
main():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/main.cpp:47
  
  setup();
    
  for (;;) {
    loop();
    if (serialEventRun) serialEventRun();
     d1e:	e0 e0       	ldi	r30, 0x00	; 0
     d20:	f0 e0       	ldi	r31, 0x00	; 0
     d22:	ef 2b       	or	r30, r31
     d24:	09 f4       	brne	.+2      	; 0xd28 <main+0x200>
     d26:	bf cf       	rjmp	.-130    	; 0xca6 <main+0x17e>
     d28:	6b d9       	rcall	.-3370   	; 0x0 <__vectors>
     d2a:	bc cf       	rjmp	.-136    	; 0xca4 <main+0x17c>
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:71
				asm volatile ("sbi 0x1C,1");			//Start write;
				while(digitalRead(BUTTON_PIN) == 0)	{}		//Wait button release.
				break;
			}
		}
		delay(5);
     d2c:	65 e0       	ldi	r22, 0x05	; 5
     d2e:	70 e0       	ldi	r23, 0x00	; 0
     d30:	80 e0       	ldi	r24, 0x00	; 0
     d32:	90 e0       	ldi	r25, 0x00	; 0
     d34:	4a db       	rcall	.-2412   	; 0x3ca <delay>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:49


}

void loop() {
	for(i = 0; i < FrameDelay; i++)	{
     d36:	1f 5f       	subi	r17, 0xFF	; 255
     d38:	10 93 18 01 	sts	0x0118, r17	; 0x800118 <i>
     d3c:	b6 cf       	rjmp	.-148    	; 0xcaa <main+0x182>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:88
		//FastLED.setBrightness(BRIGHTNESS);
		FastLED.show();
		FrameDelay = 255;
	}
	//////////////////// STATUS 2 ///////////////////////
	else if(Status == 2)	{
     d3e:	82 30       	cpi	r24, 0x02	; 2
     d40:	21 f4       	brne	.+8      	; 0xd4a <main+0x222>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:89
		ColorLeds(CRGB::Blue);
     d42:	60 e0       	ldi	r22, 0x00	; 0
     d44:	70 e0       	ldi	r23, 0x00	; 0
     d46:	8f ef       	ldi	r24, 0xFF	; 255
     d48:	e5 cf       	rjmp	.-54     	; 0xd14 <main+0x1ec>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:96
		FastLED.show();
		FrameDelay = 255;
	}

	//////////////////// STATUS 3 ///////////////////////
	else if(Status == 3)	{
     d4a:	83 30       	cpi	r24, 0x03	; 3
     d4c:	21 f4       	brne	.+8      	; 0xd56 <main+0x22e>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:97
		ColorLeds(CRGB::Purple);
     d4e:	60 e8       	ldi	r22, 0x80	; 128
     d50:	70 e0       	ldi	r23, 0x00	; 0
     d52:	80 e8       	ldi	r24, 0x80	; 128
     d54:	df cf       	rjmp	.-66     	; 0xd14 <main+0x1ec>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:104
		FastLED.show();
		FrameDelay = 255;
	}
	//////////////////// STATUS 4 ///////////////////////
	else if(Status == 4)	{
		ColorLeds(CRGB::Red);
     d56:	6f ef       	ldi	r22, 0xFF	; 255
     d58:	70 e0       	ldi	r23, 0x00	; 0
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:103
		//FastLED.setBrightness(BRIGHTNESS);
		FastLED.show();
		FrameDelay = 255;
	}
	//////////////////// STATUS 4 ///////////////////////
	else if(Status == 4)	{
     d5a:	84 30       	cpi	r24, 0x04	; 4
     d5c:	21 f0       	breq	.+8      	; 0xd66 <main+0x23e>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:114
		if		(CountDir == CountUp)		{ iFrame ++;}
		else								{ iFrame --;}
		FrameDelay = 5;
	}
	//////////////////// STATUS 5 ///////////////////////
	else if(Status == 5)	{
     d5e:	85 30       	cpi	r24, 0x05	; 5
     d60:	d9 f4       	brne	.+54     	; 0xd98 <main+0x270>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:115
		ColorLeds(CRGB::Green);
     d62:	60 e0       	ldi	r22, 0x00	; 0
     d64:	70 e8       	ldi	r23, 0x80	; 128
     d66:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:137
		else								{ iFrame --;}
		FrameDelay = 5;
	}
	//////////////////// STATUS 7 ///////////////////////
	else if(Status == 7)	{
		ColorLeds(CRGB::Purple);
     d68:	25 de       	rcall	.-950    	; 0x9b4 <ColorLeds(CRGB)>
_ZN8CFastLED13setBrightnessEh():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.h:553
     d6a:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <iFrame>
     d6e:	80 93 29 01 	sts	0x0129, r24	; 0x800129 <FastLED>
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:139
		FastLED.setBrightness(iFrame);
		FastLED.show();
     d72:	09 da       	rcall	.-3054   	; 0x186 <CFastLED::show() [clone .constprop.13]>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:140
		if			(iFrame == BRIGHTNESS)	{ CountDir = CountDown;}
     d74:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <iFrame>
     d78:	82 33       	cpi	r24, 0x32	; 50
     d7a:	d1 f4       	brne	.+52     	; 0xdb0 <main+0x288>
     d7c:	91 e0       	ldi	r25, 0x01	; 1
     d7e:	90 93 14 01 	sts	0x0114, r25	; 0x800114 <CountDir>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:142
		else if		(iFrame == 0)			{ CountDir = CountUp;}
		if			(CountDir == CountUp)	{ iFrame ++;}
     d82:	90 91 14 01 	lds	r25, 0x0114	; 0x800114 <CountDir>
     d86:	91 11       	cpse	r25, r1
     d88:	02 c0       	rjmp	.+4      	; 0xd8e <main+0x266>
     d8a:	8f 5f       	subi	r24, 0xFF	; 255
     d8c:	01 c0       	rjmp	.+2      	; 0xd90 <main+0x268>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:110
		FastLED.setBrightness(iFrame);
		FastLED.show();
		if		(iFrame == BRIGHTNESS)		{ CountDir = CountDown;}
		else if	(iFrame == 0)             	{ CountDir = CountUp;}
		if		(CountDir == CountUp)		{ iFrame ++;}
		else								{ iFrame --;}
     d8e:	81 50       	subi	r24, 0x01	; 1
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:151
	//////////////////// STATUS 8 ///////////////////////
  	else if(Status == 8)  {
		fill_rainbow_circular(leds,NUM_LEDS,iFrame);
		//FastLED.setBrightness(BRIGHTNESS);
		FastLED.show();
		iFrame += 10;
     d90:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <iFrame>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:152
		FrameDelay = 5;
     d94:	85 e0       	ldi	r24, 0x05	; 5
     d96:	c1 cf       	rjmp	.-126    	; 0xd1a <main+0x1f2>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:125
		if		(CountDir == CountUp)		{ iFrame ++;}
		else								{ iFrame --;}
		FrameDelay = 5;
	}
	//////////////////// STATUS 6 ///////////////////////
	else if(Status == 6)	{
     d98:	86 30       	cpi	r24, 0x06	; 6
     d9a:	21 f4       	brne	.+8      	; 0xda4 <main+0x27c>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:126
		ColorLeds(CRGB::Blue);
     d9c:	60 e0       	ldi	r22, 0x00	; 0
     d9e:	70 e0       	ldi	r23, 0x00	; 0
     da0:	8f ef       	ldi	r24, 0xFF	; 255
     da2:	e2 cf       	rjmp	.-60     	; 0xd68 <main+0x240>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:136
		if		(CountDir == CountUp)		{ iFrame ++;}
		else								{ iFrame --;}
		FrameDelay = 5;
	}
	//////////////////// STATUS 7 ///////////////////////
	else if(Status == 7)	{
     da4:	87 30       	cpi	r24, 0x07	; 7
     da6:	49 f4       	brne	.+18     	; 0xdba <main+0x292>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:137
		ColorLeds(CRGB::Purple);
     da8:	60 e8       	ldi	r22, 0x80	; 128
     daa:	70 e0       	ldi	r23, 0x00	; 0
     dac:	80 e8       	ldi	r24, 0x80	; 128
     dae:	dc cf       	rjmp	.-72     	; 0xd68 <main+0x240>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:141
		FastLED.setBrightness(iFrame);
		FastLED.show();
		if			(iFrame == BRIGHTNESS)	{ CountDir = CountDown;}
		else if		(iFrame == 0)			{ CountDir = CountUp;}
     db0:	81 11       	cpse	r24, r1
     db2:	e7 cf       	rjmp	.-50     	; 0xd82 <main+0x25a>
     db4:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <CountDir>
     db8:	e4 cf       	rjmp	.-56     	; 0xd82 <main+0x25a>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:147
		if			(CountDir == CountUp)	{ iFrame ++;}
		else								{ iFrame --;}
		FrameDelay = 5;
	}
	//////////////////// STATUS 8 ///////////////////////
  	else if(Status == 8)  {
     dba:	88 30       	cpi	r24, 0x08	; 8
     dbc:	09 f0       	breq	.+2      	; 0xdc0 <main+0x298>
     dbe:	84 c0       	rjmp	.+264    	; 0xec8 <L_5428+0xa8>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:148
		fill_rainbow_circular(leds,NUM_LEDS,iFrame);
     dc0:	a0 91 16 01 	lds	r26, 0x0116	; 0x800116 <iFrame>
     dc4:	e7 ed       	ldi	r30, 0xD7	; 215
     dc6:	f0 e0       	ldi	r31, 0x00	; 0
fill_rainbow_circular():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/colorutils.cpp:73
void fill_rainbow_circular(struct CRGB* targetArray, int numToFill, uint8_t initialhue, bool reversed)
{
    if (numToFill == 0) return;  // avoiding div/0

    CHSV hsv;
    hsv.hue = initialhue;
     dc8:	4a 2f       	mov	r20, r26
main():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/colorutils.cpp:78
    hsv.val = 255;
    hsv.sat = 240;

    const uint16_t hueChange = 65535 / (uint16_t)numToFill;  // hue change for each LED, * 256 for precision (256 * 256 - 1)
    uint16_t hueOffset = 0;  // offset for hue value, with precision (*256)
     dca:	90 e0       	ldi	r25, 0x00	; 0
     dcc:	80 e0       	ldi	r24, 0x00	; 0
scale8():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/lib8tion/scale8.h:93
        "clr __zero_reg__    \n\t"

        : "+a" (i)      /* writes to i */
        : "a"  (scale)  /* uses scale */
        : "r0", "r1"    /* clobbers r0, r1 */
    );
     dce:	05 e5       	ldi	r16, 0x55	; 85
hsv2rgb_rainbow():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:398
            } else {
                // 111
                //case 7: // K -> R
                r = K170 + third;
                g = 0;
                FORCE_REFERENCE(g);
     dd0:	70 e0       	ldi	r23, 0x00	; 0
scale8_video():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/lib8tion/scale8.h:133
        "  subi %[j], 0xFF\n\t"
        "L_%=: \n\t"
        : [j] "+a" (j)
        : [i] "a" (i), [scale] "a" (scale)
        : "r0", "r1"
    );
     dd2:	1f e0       	ldi	r17, 0x0F	; 15
hsv2rgb_rainbow():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:289
        // It's much faster and smaller to just do three single-bit shifts
        // So this business is to force that.
        offset8 <<= 1;
        asm volatile("");
        offset8 <<= 1;
        asm volatile("");
     dd4:	34 2f       	mov	r19, r20
     dd6:	33 0f       	add	r19, r19
     dd8:	33 0f       	add	r19, r19
     dda:	33 0f       	add	r19, r19
scale8():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/lib8tion/scale8.h:93
        "clr __zero_reg__    \n\t"

        : "+a" (i)      /* writes to i */
        : "a"  (scale)  /* uses scale */
        : "r0", "r1"    /* clobbers r0, r1 */
    );
     ddc:	23 2f       	mov	r18, r19
     dde:	20 9f       	mul	r18, r16
     de0:	02 0e       	add	r0, r18
     de2:	20 e0       	ldi	r18, 0x00	; 0
     de4:	21 1d       	adc	r18, r1
     de6:	11 24       	eor	r1, r1
     de8:	64 2f       	mov	r22, r20
     dea:	60 74       	andi	r22, 0x40	; 64
     dec:	54 2f       	mov	r21, r20
     dee:	50 72       	andi	r21, 0x20	; 32
hsv2rgb_rainbow():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:301
    
    uint8_t third = scale8( offset8, (256 / 3)); // max = 85
    
    uint8_t r, g, b;
    
    if( ! (hue & 0x80) ) {
     df0:	47 fd       	sbrc	r20, 7
     df2:	4c c0       	rjmp	.+152    	; 0xe8c <L_5428+0x6c>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:303
        // 0XX
        if( ! (hue & 0x40) ) {
     df4:	61 11       	cpse	r22, r1
     df6:	38 c0       	rjmp	.+112    	; 0xe68 <L_5428+0x48>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:306
            // 00X
            //section 0-1
            if( ! (hue & 0x20) ) {
     df8:	51 11       	cpse	r21, r1
     dfa:	06 c0       	rjmp	.+12     	; 0xe08 <main+0x2e0>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:309
                // 000
                //case 0: // R -> O
                r = K255 - third;
     dfc:	32 2f       	mov	r19, r18
     dfe:	30 95       	com	r19
main():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:310
                g = third;
     e00:	42 2f       	mov	r20, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:340
                // 010
                //case 2: // Y -> G
                if( Y1 ) {
                    //uint8_t twothirds = (third << 1);
                    uint8_t twothirds = scale8( offset8, ((256 * 2) / 3)); // max=170
                    r = K171 - twothirds;
     e02:	23 2f       	mov	r18, r19
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:342
                    g = K170 + third;
                    b = 0;
     e04:	30 e0       	ldi	r19, 0x00	; 0
     e06:	04 c0       	rjmp	.+8      	; 0xe10 <main+0x2e8>
hsv2rgb_rainbow():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:318
            } else {
                // 001
                //case 1: // O -> Y
                if( Y1 ) {
                    r = K171;
                    g = K85 + third ;
     e08:	45 e5       	ldi	r20, 0x55	; 85
     e0a:	42 0f       	add	r20, r18
main():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:319
                    b = 0;
     e0c:	30 e0       	ldi	r19, 0x00	; 0
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:317
                FORCE_REFERENCE(b);
            } else {
                // 001
                //case 1: // O -> Y
                if( Y1 ) {
                    r = K171;
     e0e:	2b ea       	ldi	r18, 0xAB	; 171
scale8_video():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/lib8tion/scale8.h:133
        "  subi %[j], 0xFF\n\t"
        "L_%=: \n\t"
        : [j] "+a" (j)
        : [i] "a" (i), [scale] "a" (scale)
        : "r0", "r1"
    );
     e10:	57 2f       	mov	r21, r23
     e12:	11 23       	and	r17, r17
     e14:	29 f0       	breq	.+10     	; 0xe20 <L_5428>
     e16:	11 9f       	mul	r17, r17
     e18:	51 2d       	mov	r21, r1
     e1a:	11 24       	eor	r1, r1
     e1c:	11 11       	cpse	r17, r1
     e1e:	5f 5f       	subi	r21, 0xFF	; 255

00000e20 <L_5428>:
hsv2rgb_rainbow():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:419
            r = 255; b = 255; g = 255;
        } else {
            uint8_t desat = 255 - sat;
            desat = scale8_video( desat, desat);

            uint8_t satscale = 255 - desat;
     e20:	65 2f       	mov	r22, r21
     e22:	60 95       	com	r22
scale8_LEAVING_R1_DIRTY():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/lib8tion/scale8.h:199
        /* R1 IS LEFT DIRTY HERE; YOU MUST ZERO IT OUT YOURSELF  */
        /* "clr __zero_reg__    \n\t" */
        : "+a" (i)      /* writes to i */
        : "a"  (scale)  /* uses scale */
        : "r0", "r1"    /* clobbers r0, r1 */
    );
     e24:	26 9f       	mul	r18, r22
     e26:	02 0e       	add	r0, r18
     e28:	20 e0       	ldi	r18, 0x00	; 0
     e2a:	21 1d       	adc	r18, r1
     e2c:	46 9f       	mul	r20, r22
     e2e:	04 0e       	add	r0, r20
     e30:	40 e0       	ldi	r20, 0x00	; 0
     e32:	41 1d       	adc	r20, r1
     e34:	36 9f       	mul	r19, r22
     e36:	03 0e       	add	r0, r19
     e38:	30 e0       	ldi	r19, 0x00	; 0
     e3a:	31 1d       	adc	r19, r1
cleanup_R1():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/lib8tion/scale8.h:340
/// @ingroup ScalingDirty
LIB8STATIC_ALWAYS_INLINE void cleanup_R1()
{
#if CLEANUP_R1_AVRASM == 1
    // Restore r1 to "0"; it's expected to always be that
    asm volatile( "clr __zero_reg__  \n\t" : : : "r1" );
     e3c:	11 24       	eor	r1, r1
hsv2rgb_rainbow():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:434
            if( r ) r = scale8( r, satscale) + 1;
            if( g ) g = scale8( g, satscale) + 1;
            if( b ) b = scale8( b, satscale) + 1;
#endif
            uint8_t brightness_floor = desat;
            r += brightness_floor;
     e3e:	25 0f       	add	r18, r21
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:467
    // It turns out that fixing it winds up costing more than
    // not fixing it.
    // To paraphrase Dr Bronner, profile! profile! profile!
    //asm volatile(  ""  :  :  : "r26", "r27" );
    //asm volatile (" movw r30, r26 \n" : : : "r30", "r31");
    rgb.r = r;
     e40:	20 83       	st	Z, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:435
            if( g ) g = scale8( g, satscale) + 1;
            if( b ) b = scale8( b, satscale) + 1;
#endif
            uint8_t brightness_floor = desat;
            r += brightness_floor;
            g += brightness_floor;
     e42:	45 0f       	add	r20, r21
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:468
    // not fixing it.
    // To paraphrase Dr Bronner, profile! profile! profile!
    //asm volatile(  ""  :  :  : "r26", "r27" );
    //asm volatile (" movw r30, r26 \n" : : : "r30", "r31");
    rgb.r = r;
    rgb.g = g;
     e44:	41 83       	std	Z+1, r20	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:436
            if( b ) b = scale8( b, satscale) + 1;
#endif
            uint8_t brightness_floor = desat;
            r += brightness_floor;
            g += brightness_floor;
            b += brightness_floor;
     e46:	35 0f       	add	r19, r21
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:469
    // To paraphrase Dr Bronner, profile! profile! profile!
    //asm volatile(  ""  :  :  : "r26", "r27" );
    //asm volatile (" movw r30, r26 \n" : : : "r30", "r31");
    rgb.r = r;
    rgb.g = g;
    rgb.b = b;
     e48:	32 83       	std	Z+2, r19	; 0x02
fill_rainbow_circular():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/colorutils.cpp:83

    for (int i = 0; i < numToFill; ++i) {
        targetArray[i] = hsv;
        if (reversed) hueOffset -= hueChange;
        else hueOffset += hueChange;
     e4a:	84 53       	subi	r24, 0x34	; 52
     e4c:	93 4f       	sbci	r25, 0xF3	; 243
     e4e:	33 96       	adiw	r30, 0x03	; 3
C:\Users\user\Documents\Arduino\libraries\FastLED\src/colorutils.cpp:84
        hsv.hue = initialhue + (uint8_t)(hueOffset >> 8);  // assign new hue with precise offset (as 8-bit)
     e50:	4a 2f       	mov	r20, r26
     e52:	49 0f       	add	r20, r25
C:\Users\user\Documents\Arduino\libraries\FastLED\src/colorutils.cpp:80
    hsv.sat = 240;

    const uint16_t hueChange = 65535 / (uint16_t)numToFill;  // hue change for each LED, * 256 for precision (256 * 256 - 1)
    uint16_t hueOffset = 0;  // offset for hue value, with precision (*256)

    for (int i = 0; i < numToFill; ++i) {
     e54:	80 3f       	cpi	r24, 0xF0	; 240
     e56:	bf ef       	ldi	r27, 0xFF	; 255
     e58:	9b 07       	cpc	r25, r27
     e5a:	09 f0       	breq	.+2      	; 0xe5e <L_5428+0x3e>
     e5c:	bb cf       	rjmp	.-138    	; 0xdd4 <main+0x2ac>
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:150
		//FastLED.setBrightness(BRIGHTNESS);
		FastLED.show();
     e5e:	93 d9       	rcall	.-3290   	; 0x186 <CFastLED::show() [clone .constprop.13]>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:151
		iFrame += 10;
     e60:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <iFrame>
     e64:	86 5f       	subi	r24, 0xF6	; 246
     e66:	94 cf       	rjmp	.-216    	; 0xd90 <main+0x268>
hsv2rgb_rainbow():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:334
                }
            }
        } else {
            //01X
            // section 2-3
            if( !  (hue & 0x20) ) {
     e68:	51 11       	cpse	r21, r1
     e6a:	0b c0       	rjmp	.+22     	; 0xe82 <L_5428+0x62>
scale8():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/lib8tion/scale8.h:93
        "clr __zero_reg__    \n\t"

        : "+a" (i)      /* writes to i */
        : "a"  (scale)  /* uses scale */
        : "r0", "r1"    /* clobbers r0, r1 */
    );
     e6c:	4a ea       	ldi	r20, 0xAA	; 170
     e6e:	34 9f       	mul	r19, r20
     e70:	03 0e       	add	r0, r19
     e72:	30 e0       	ldi	r19, 0x00	; 0
     e74:	31 1d       	adc	r19, r1
     e76:	11 24       	eor	r1, r1
hsv2rgb_rainbow():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:340
                // 010
                //case 2: // Y -> G
                if( Y1 ) {
                    //uint8_t twothirds = (third << 1);
                    uint8_t twothirds = scale8( offset8, ((256 * 2) / 3)); // max=170
                    r = K171 - twothirds;
     e78:	bd 2f       	mov	r27, r29
     e7a:	b3 1b       	sub	r27, r19
     e7c:	3b 2f       	mov	r19, r27
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:341
                    g = K170 + third;
     e7e:	42 0f       	add	r20, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:343
                    b = 0;
                    FORCE_REFERENCE(b);
     e80:	c0 cf       	rjmp	.-128    	; 0xe02 <main+0x2da>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:356
            } else {
                // 011
                // case 3: // G -> A
                r = 0;
                FORCE_REFERENCE(r);
                g = K255 - third;
     e82:	42 2f       	mov	r20, r18
     e84:	40 95       	com	r20
main():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:357
                b = third;
     e86:	32 2f       	mov	r19, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:368
        if( ! (hue & 0x40) ) {
            // 10X
            if( ! ( hue & 0x20) ) {
                // 100
                //case 4: // A -> B
                r = 0;
     e88:	20 e0       	ldi	r18, 0x00	; 0
     e8a:	c2 cf       	rjmp	.-124    	; 0xe10 <main+0x2e8>
hsv2rgb_rainbow():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:363
            }
        }
    } else {
        // section 4-7
        // 1XX
        if( ! (hue & 0x40) ) {
     e8c:	61 11       	cpse	r22, r1
     e8e:	10 c0       	rjmp	.+32     	; 0xeb0 <L_5428+0x90>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:365
            // 10X
            if( ! ( hue & 0x20) ) {
     e90:	51 11       	cpse	r21, r1
     e92:	0a c0       	rjmp	.+20     	; 0xea8 <L_5428+0x88>
scale8():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/lib8tion/scale8.h:93
     e94:	2a ea       	ldi	r18, 0xAA	; 170
     e96:	32 9f       	mul	r19, r18
     e98:	03 0e       	add	r0, r19
     e9a:	30 e0       	ldi	r19, 0x00	; 0
     e9c:	31 1d       	adc	r19, r1
     e9e:	11 24       	eor	r1, r1
hsv2rgb_rainbow():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:372
                //case 4: // A -> B
                r = 0;
                FORCE_REFERENCE(r);
                //uint8_t twothirds = (third << 1);
                uint8_t twothirds = scale8( offset8, ((256 * 2) / 3)); // max=170
                g = K171 - twothirds; //K170?
     ea0:	4d 2f       	mov	r20, r29
     ea2:	43 1b       	sub	r20, r19
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:373
                b = K85  + twothirds;
     ea4:	3b 5a       	subi	r19, 0xAB	; 171
     ea6:	f0 cf       	rjmp	.-32     	; 0xe88 <L_5428+0x68>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:381
                // 101
                //case 5: // B -> P
                r = third;
                g = 0;
                FORCE_REFERENCE(g);
                b = K255 - third;
     ea8:	32 2f       	mov	r19, r18
     eaa:	30 95       	com	r19
main():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:397
                
            } else {
                // 111
                //case 7: // K -> R
                r = K170 + third;
                g = 0;
     eac:	40 e0       	ldi	r20, 0x00	; 0
     eae:	b0 cf       	rjmp	.-160    	; 0xe10 <main+0x2e8>
hsv2rgb_rainbow():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:385
                FORCE_REFERENCE(g);
                b = K255 - third;
                
            }
        } else {
            if( !  (hue & 0x20)  ) {
     eb0:	51 11       	cpse	r21, r1
     eb2:	06 c0       	rjmp	.+12     	; 0xec0 <L_5428+0xa0>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:388
                // 110
                //case 6: // P -- K
                r = K85 + third;
     eb4:	45 e5       	ldi	r20, 0x55	; 85
     eb6:	42 0f       	add	r20, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:391
                g = 0;
                FORCE_REFERENCE(g);
                b = K171 - third;
     eb8:	3d 2f       	mov	r19, r29
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:399
                // 111
                //case 7: // K -> R
                r = K170 + third;
                g = 0;
                FORCE_REFERENCE(g);
                b = K85 - third;
     eba:	32 1b       	sub	r19, r18
main():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:396
                b = K171 - third;
                
            } else {
                // 111
                //case 7: // K -> R
                r = K170 + third;
     ebc:	24 2f       	mov	r18, r20
     ebe:	f6 cf       	rjmp	.-20     	; 0xeac <L_5428+0x8c>
hsv2rgb_rainbow():
     ec0:	4a ea       	ldi	r20, 0xAA	; 170
     ec2:	42 0f       	add	r20, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:399
                g = 0;
                FORCE_REFERENCE(g);
                b = K85 - third;
     ec4:	30 2f       	mov	r19, r16
     ec6:	f9 cf       	rjmp	.-14     	; 0xeba <L_5428+0x9a>
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:155
		FrameDelay = 5;
	}
  	//////////////////// STATUS 9 ///////////////////////
  	else if(Status == 9)  {
     ec8:	89 30       	cpi	r24, 0x09	; 9
     eca:	89 f5       	brne	.+98     	; 0xf2e <L_5428+0x10e>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:156
		ColorLeds(CRGB::Blue);
     ecc:	60 e0       	ldi	r22, 0x00	; 0
     ece:	70 e0       	ldi	r23, 0x00	; 0
     ed0:	8f ef       	ldi	r24, 0xFF	; 255
     ed2:	70 dd       	rcall	.-1312   	; 0x9b4 <ColorLeds(CRGB)>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:157
		for (iLed = iFrame; iLed < (iFrame + 5); iLed++) {
     ed4:	20 91 16 01 	lds	r18, 0x0116	; 0x800116 <iFrame>
     ed8:	82 2f       	mov	r24, r18
     eda:	90 e0       	ldi	r25, 0x00	; 0
     edc:	04 96       	adiw	r24, 0x04	; 4
     ede:	32 2f       	mov	r19, r18
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212

    /// Allow assignment from 32-bit (really 24-bit) 0xRRGGBB color code
    /// @param colorcode a packed 24 bit color code
    inline CRGB& operator= (const uint32_t colorcode) __attribute__((always_inline))
    {
        r = (colorcode >> 16) & 0xFF;
     ee0:	6f ef       	ldi	r22, 0xFF	; 255
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:157
     ee2:	e3 2f       	mov	r30, r19
     ee4:	f0 e0       	ldi	r31, 0x00	; 0
     ee6:	8e 17       	cp	r24, r30
     ee8:	9f 07       	cpc	r25, r31
     eea:	a4 f0       	brlt	.+40     	; 0xf14 <L_5428+0xf4>
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212
     eec:	af 01       	movw	r20, r30
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:158
			if(iLed < NUM_LEDS) {leds[iLed] = CRGB::Yellow;}
     eee:	34 31       	cpi	r19, 0x14	; 20
     ef0:	58 f4       	brcc	.+22     	; 0xf08 <L_5428+0xe8>
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212
     ef2:	44 0f       	add	r20, r20
     ef4:	55 1f       	adc	r21, r21
     ef6:	e4 0f       	add	r30, r20
     ef8:	f5 1f       	adc	r31, r21
     efa:	e9 52       	subi	r30, 0x29	; 41
     efc:	ff 4f       	sbci	r31, 0xFF	; 255
     efe:	60 83       	st	Z, r22
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:213
        g = (colorcode >>  8) & 0xFF;
     f00:	61 83       	std	Z+1, r22	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
        b = (colorcode >>  0) & 0xFF;
     f02:	12 82       	std	Z+2, r1	; 0x02
     f04:	3f 5f       	subi	r19, 0xFF	; 255
     f06:	ed cf       	rjmp	.-38     	; 0xee2 <L_5428+0xc2>
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:159
			else                {leds[iLed - NUM_LEDS] = CRGB::Yellow;}
     f08:	44 51       	subi	r20, 0x14	; 20
     f0a:	51 09       	sbc	r21, r1
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212

    /// Allow assignment from 32-bit (really 24-bit) 0xRRGGBB color code
    /// @param colorcode a packed 24 bit color code
    inline CRGB& operator= (const uint32_t colorcode) __attribute__((always_inline))
    {
        r = (colorcode >> 16) & 0xFF;
     f0c:	fa 01       	movw	r30, r20
     f0e:	ee 0f       	add	r30, r30
     f10:	ff 1f       	adc	r31, r31
     f12:	f1 cf       	rjmp	.-30     	; 0xef6 <L_5428+0xd6>
     f14:	30 93 d6 00 	sts	0x00D6, r19	; 0x8000d6 <iLed>
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:161
		}
		if  (iFrame == NUM_LEDS)        { iFrame = 0;}
     f18:	24 31       	cpi	r18, 0x14	; 20
     f1a:	19 f4       	brne	.+6      	; 0xf22 <L_5428+0x102>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:276
			ResetStatus = 0;
		}
		if(xFrame == 0)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) { leds[iLed] = CRGB(0,255,0); }
			xFrame++;
			iFrame = 0;
     f1c:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <iFrame>
     f20:	03 c0       	rjmp	.+6      	; 0xf28 <L_5428+0x108>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:162
		for (iLed = iFrame; iLed < (iFrame + 5); iLed++) {
			if(iLed < NUM_LEDS) {leds[iLed] = CRGB::Yellow;}
			else                {leds[iLed - NUM_LEDS] = CRGB::Yellow;}
		}
		if  (iFrame == NUM_LEDS)        { iFrame = 0;}
		else                            { iFrame++; }
     f22:	2f 5f       	subi	r18, 0xFF	; 255
     f24:	20 93 16 01 	sts	0x0116, r18	; 0x800116 <iFrame>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:163
		FastLED.show();
     f28:	2e d9       	rcall	.-3492   	; 0x186 <CFastLED::show() [clone .constprop.13]>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:164
		FrameDelay = 15;
     f2a:	8f e0       	ldi	r24, 0x0F	; 15
     f2c:	f6 ce       	rjmp	.-532    	; 0xd1a <main+0x1f2>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:167
  	}	
  	//////////////////// STATUS 10 ///////////////////////
  	else if(Status == 10)  {
     f2e:	8a 30       	cpi	r24, 0x0A	; 10
     f30:	29 f5       	brne	.+74     	; 0xf7c <L_5428+0x15c>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:168
    	if(iFrame == 0) {
     f32:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <iFrame>
     f36:	81 11       	cpse	r24, r1
     f38:	03 c0       	rjmp	.+6      	; 0xf40 <L_5428+0x120>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:169
			ColorLeds(CRGB::Black);
     f3a:	60 e0       	ldi	r22, 0x00	; 0
     f3c:	70 e0       	ldi	r23, 0x00	; 0
     f3e:	3a dd       	rcall	.-1420   	; 0x9b4 <ColorLeds(CRGB)>
random():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/WMath.cpp:40
     f40:	00 d5       	rcall	.+2560   	; 0x1942 <random>
     f42:	4b 01       	movw	r8, r22
     f44:	5c 01       	movw	r10, r24
     f46:	fd d4       	rcall	.+2554   	; 0x1942 <random>
     f48:	a3 01       	movw	r20, r6
     f4a:	92 01       	movw	r18, r4
     f4c:	4f d5       	rcall	.+2718   	; 0x19ec <__divmodsi4>
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:181
  	else if(Status == 11)  {
    	if(iFrame == 0) {
			ColorLeds(CRGB::Black);
		}
		iFrame = 1;
		leds[random(NUM_LEDS)] = CRGB(0, 0, random(255)); 
     f4e:	8b 01       	movw	r16, r22
     f50:	00 0f       	add	r16, r16
     f52:	11 1f       	adc	r17, r17
     f54:	06 0f       	add	r16, r22
     f56:	17 1f       	adc	r17, r23
     f58:	09 52       	subi	r16, 0x29	; 41
     f5a:	1f 4f       	sbci	r17, 0xFF	; 255
     f5c:	f8 01       	movw	r30, r16
     f5e:	10 82       	st	Z, r1
     f60:	11 82       	std	Z+1, r1	; 0x01
random():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/WMath.cpp:40
     f62:	c5 01       	movw	r24, r10
     f64:	b4 01       	movw	r22, r8
     f66:	a7 01       	movw	r20, r14
     f68:	96 01       	movw	r18, r12
     f6a:	40 d5       	rcall	.+2688   	; 0x19ec <__divmodsi4>
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:181
     f6c:	d8 01       	movw	r26, r16
     f6e:	12 96       	adiw	r26, 0x02	; 2
     f70:	6c 93       	st	X, r22
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:182
		FrameDelay = 10;
     f72:	8a e0       	ldi	r24, 0x0A	; 10
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:241
		else	{
			for (iLed=NUM_LEDS - 1; iLed > iFrame; iLed--) { leds[iLed] = CRGB::Yellow; }
			leds[iFrame] = CRGB::Blue;
			iFrame--;
		}
		FrameDelay = 5;
     f74:	80 93 17 01 	sts	0x0117, r24	; 0x800117 <FrameDelay>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:242
		FastLED.show();
     f78:	06 d9       	rcall	.-3572   	; 0x186 <CFastLED::show() [clone .constprop.13]>
     f7a:	d1 ce       	rjmp	.-606    	; 0xd1e <main+0x1f6>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:176
		leds[random(NUM_LEDS)] = CRGB(0, 0, random(255)); 
		FrameDelay = 10;
		FastLED.show();
  	}
  	//////////////////// STATUS 11 ///////////////////////
  	else if(Status == 11)  {
     f7c:	8b 30       	cpi	r24, 0x0B	; 11
     f7e:	59 f4       	brne	.+22     	; 0xf96 <L_5428+0x176>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:177
    	if(iFrame == 0) {
     f80:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <iFrame>
     f84:	81 11       	cpse	r24, r1
     f86:	03 c0       	rjmp	.+6      	; 0xf8e <L_5428+0x16e>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:178
			ColorLeds(CRGB::Black);
     f88:	60 e0       	ldi	r22, 0x00	; 0
     f8a:	70 e0       	ldi	r23, 0x00	; 0
     f8c:	13 dd       	rcall	.-1498   	; 0x9b4 <ColorLeds(CRGB)>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:180
		}
		iFrame = 1;
     f8e:	81 e0       	ldi	r24, 0x01	; 1
     f90:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <iFrame>
     f94:	d5 cf       	rjmp	.-86     	; 0xf40 <L_5428+0x120>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:186
		leds[random(NUM_LEDS)] = CRGB(0, 0, random(255)); 
		FrameDelay = 10;
		FastLED.show();
  	}
	//////////////////// STATUS 12 ///////////////////////
	else if(Status == 12)  {
     f96:	8c 30       	cpi	r24, 0x0C	; 12
     f98:	09 f0       	breq	.+2      	; 0xf9c <L_5428+0x17c>
     f9a:	57 c0       	rjmp	.+174    	; 0x104a <L_5428+0x22a>
     f9c:	e7 ed       	ldi	r30, 0xD7	; 215
     f9e:	f0 e0       	ldi	r31, 0x00	; 0
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:187
		for (iLed = 0; iLed<NUM_LEDS; iLed++) { leds[iLed] = CRGB::Black; }
     fa0:	85 e1       	ldi	r24, 0x15	; 21
     fa2:	81 50       	subi	r24, 0x01	; 1
     fa4:	29 f0       	breq	.+10     	; 0xfb0 <L_5428+0x190>
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212
     fa6:	10 82       	st	Z, r1
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:213
        g = (colorcode >>  8) & 0xFF;
     fa8:	11 82       	std	Z+1, r1	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
        b = (colorcode >>  0) & 0xFF;
     faa:	12 82       	std	Z+2, r1	; 0x02
     fac:	33 96       	adiw	r30, 0x03	; 3
     fae:	f9 cf       	rjmp	.-14     	; 0xfa2 <L_5428+0x182>
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:188
		for (iLed = iFrame; iLed < (iFrame + 2); iLed++) { leds[iLed] = CRGB::Blue;}
     fb0:	a0 91 16 01 	lds	r26, 0x0116	; 0x800116 <iFrame>
     fb4:	ba 2f       	mov	r27, r26
     fb6:	2a 2f       	mov	r18, r26
     fb8:	30 e0       	ldi	r19, 0x00	; 0
     fba:	b9 01       	movw	r22, r18
     fbc:	6f 5f       	subi	r22, 0xFF	; 255
     fbe:	7f 4f       	sbci	r23, 0xFF	; 255
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
     fc0:	1f ef       	ldi	r17, 0xFF	; 255
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:188
     fc2:	8b 2f       	mov	r24, r27
     fc4:	90 e0       	ldi	r25, 0x00	; 0
     fc6:	bf 5f       	subi	r27, 0xFF	; 255
     fc8:	68 17       	cp	r22, r24
     fca:	79 07       	cpc	r23, r25
     fcc:	64 f0       	brlt	.+24     	; 0xfe6 <L_5428+0x1c6>
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212

    /// Allow assignment from 32-bit (really 24-bit) 0xRRGGBB color code
    /// @param colorcode a packed 24 bit color code
    inline CRGB& operator= (const uint32_t colorcode) __attribute__((always_inline))
    {
        r = (colorcode >> 16) & 0xFF;
     fce:	ac 01       	movw	r20, r24
     fd0:	44 0f       	add	r20, r20
     fd2:	55 1f       	adc	r21, r21
     fd4:	84 0f       	add	r24, r20
     fd6:	95 1f       	adc	r25, r21
     fd8:	fc 01       	movw	r30, r24
     fda:	e9 52       	subi	r30, 0x29	; 41
     fdc:	ff 4f       	sbci	r31, 0xFF	; 255
     fde:	10 82       	st	Z, r1
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:213
        g = (colorcode >>  8) & 0xFF;
     fe0:	11 82       	std	Z+1, r1	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
        b = (colorcode >>  0) & 0xFF;
     fe2:	12 83       	std	Z+2, r17	; 0x02
     fe4:	ee cf       	rjmp	.-36     	; 0xfc2 <L_5428+0x1a2>
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:189
		for (iLed = NUM_LEDS - 1 - iFrame; iLed > (NUM_LEDS - 3 - iFrame); iLed--) { leds[iLed] = CRGB::Blue;}
     fe6:	83 e1       	ldi	r24, 0x13	; 19
     fe8:	8a 1b       	sub	r24, r26
     fea:	41 e1       	ldi	r20, 0x11	; 17
     fec:	50 e0       	ldi	r21, 0x00	; 0
     fee:	42 1b       	sub	r20, r18
     ff0:	53 0b       	sbc	r21, r19
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
     ff2:	7f ef       	ldi	r23, 0xFF	; 255
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:189
     ff4:	28 2f       	mov	r18, r24
     ff6:	30 e0       	ldi	r19, 0x00	; 0
     ff8:	6f ef       	ldi	r22, 0xFF	; 255
     ffa:	68 0f       	add	r22, r24
     ffc:	42 17       	cp	r20, r18
     ffe:	53 07       	cpc	r21, r19
    1000:	6c f4       	brge	.+26     	; 0x101c <L_5428+0x1fc>
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212

    /// Allow assignment from 32-bit (really 24-bit) 0xRRGGBB color code
    /// @param colorcode a packed 24 bit color code
    inline CRGB& operator= (const uint32_t colorcode) __attribute__((always_inline))
    {
        r = (colorcode >> 16) & 0xFF;
    1002:	c9 01       	movw	r24, r18
    1004:	88 0f       	add	r24, r24
    1006:	99 1f       	adc	r25, r25
    1008:	82 0f       	add	r24, r18
    100a:	93 1f       	adc	r25, r19
    100c:	fc 01       	movw	r30, r24
    100e:	e9 52       	subi	r30, 0x29	; 41
    1010:	ff 4f       	sbci	r31, 0xFF	; 255
    1012:	10 82       	st	Z, r1
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:213
        g = (colorcode >>  8) & 0xFF;
    1014:	11 82       	std	Z+1, r1	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
        b = (colorcode >>  0) & 0xFF;
    1016:	72 83       	std	Z+2, r23	; 0x02
    1018:	86 2f       	mov	r24, r22
    101a:	ec cf       	rjmp	.-40     	; 0xff4 <L_5428+0x1d4>
    101c:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <iLed>
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:190
		if		(iFrame + 2 == NUM_LEDS/2)	{CountDir = CountDown;}
    1020:	a8 30       	cpi	r26, 0x08	; 8
    1022:	61 f4       	brne	.+24     	; 0x103c <L_5428+0x21c>
    1024:	81 e0       	ldi	r24, 0x01	; 1
    1026:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <CountDir>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:192
		else if	(iFrame == 0)				{CountDir = CountUp;}
		if		(CountDir == CountUp)		{ iFrame ++;}
    102a:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <CountDir>
    102e:	81 11       	cpse	r24, r1
    1030:	0a c0       	rjmp	.+20     	; 0x1046 <L_5428+0x226>
    1032:	af 5f       	subi	r26, 0xFF	; 255
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:193
		else								{ iFrame --;}
    1034:	a0 93 16 01 	sts	0x0116, r26	; 0x800116 <iFrame>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:194
		FrameDelay = 20;
    1038:	84 e1       	ldi	r24, 0x14	; 20
    103a:	9c cf       	rjmp	.-200    	; 0xf74 <L_5428+0x154>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:191
	else if(Status == 12)  {
		for (iLed = 0; iLed<NUM_LEDS; iLed++) { leds[iLed] = CRGB::Black; }
		for (iLed = iFrame; iLed < (iFrame + 2); iLed++) { leds[iLed] = CRGB::Blue;}
		for (iLed = NUM_LEDS - 1 - iFrame; iLed > (NUM_LEDS - 3 - iFrame); iLed--) { leds[iLed] = CRGB::Blue;}
		if		(iFrame + 2 == NUM_LEDS/2)	{CountDir = CountDown;}
		else if	(iFrame == 0)				{CountDir = CountUp;}
    103c:	a1 11       	cpse	r26, r1
    103e:	f5 cf       	rjmp	.-22     	; 0x102a <L_5428+0x20a>
    1040:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <CountDir>
    1044:	f2 cf       	rjmp	.-28     	; 0x102a <L_5428+0x20a>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:193
		if		(CountDir == CountUp)		{ iFrame ++;}
		else								{ iFrame --;}
    1046:	a1 50       	subi	r26, 0x01	; 1
    1048:	f5 cf       	rjmp	.-22     	; 0x1034 <L_5428+0x214>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:198
		FrameDelay = 20;
		FastLED.show();
  	}
	//////////////////// STATUS 13 ///////////////////////
	else if(Status == 13)  {
    104a:	8d 30       	cpi	r24, 0x0D	; 13
    104c:	09 f0       	breq	.+2      	; 0x1050 <L_5428+0x230>
    104e:	bf c0       	rjmp	.+382    	; 0x11ce <L_5428+0x3ae>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:199
		if(ResetStatus == 1) {	
    1050:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <ResetStatus>
    1054:	81 30       	cpi	r24, 0x01	; 1
    1056:	69 f4       	brne	.+26     	; 0x1072 <L_5428+0x252>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:200
			ColorLeds(CRGB::Blue);
    1058:	60 e0       	ldi	r22, 0x00	; 0
    105a:	70 e0       	ldi	r23, 0x00	; 0
    105c:	8f ef       	ldi	r24, 0xFF	; 255
    105e:	aa dc       	rcall	.-1708   	; 0x9b4 <ColorLeds(CRGB)>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:201
			xFrame = NUM_LEDS;
    1060:	84 e1       	ldi	r24, 0x14	; 20
    1062:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <xFrame>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:202
			iFrame = 0;
    1066:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <iFrame>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:203
			CountDir = CountUp;
    106a:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <CountDir>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:204
			ResetStatus = 0;
    106e:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <ResetStatus>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:206
		}
		if(xFrame == 255)	{
    1072:	20 91 15 01 	lds	r18, 0x0115	; 0x800115 <xFrame>
    1076:	2f 3f       	cpi	r18, 0xFF	; 255
    1078:	b9 f4       	brne	.+46     	; 0x10a8 <L_5428+0x288>
    107a:	e7 ed       	ldi	r30, 0xD7	; 215
    107c:	f0 e0       	ldi	r31, 0x00	; 0
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:207
			for (iLed=0; iLed < NUM_LEDS; iLed++) 	{ leds[iLed] = CRGB::Yellow;}
    107e:	85 e1       	ldi	r24, 0x15	; 21
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212

    /// Allow assignment from 32-bit (really 24-bit) 0xRRGGBB color code
    /// @param colorcode a packed 24 bit color code
    inline CRGB& operator= (const uint32_t colorcode) __attribute__((always_inline))
    {
        r = (colorcode >> 16) & 0xFF;
    1080:	9f ef       	ldi	r25, 0xFF	; 255
    1082:	81 50       	subi	r24, 0x01	; 1
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:207
    1084:	29 f0       	breq	.+10     	; 0x1090 <L_5428+0x270>
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212
    1086:	90 83       	st	Z, r25
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:213
        g = (colorcode >>  8) & 0xFF;
    1088:	91 83       	std	Z+1, r25	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
        b = (colorcode >>  0) & 0xFF;
    108a:	12 82       	std	Z+2, r1	; 0x02
    108c:	33 96       	adiw	r30, 0x03	; 3
    108e:	f9 cf       	rjmp	.-14     	; 0x1082 <L_5428+0x262>
    1090:	84 e1       	ldi	r24, 0x14	; 20
    1092:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <iLed>
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:208
			CountDir = CountDown;
    1096:	81 e0       	ldi	r24, 0x01	; 1
    1098:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <CountDir>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:209
			xFrame = 0;
    109c:	10 92 15 01 	sts	0x0115, r1	; 0x800115 <xFrame>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:228
				iFrame = 0;
			}
			else{
				leds[iFrame] = CRGB::Blue;
				xFrame = xFrame + 1;
				iFrame = NUM_LEDS - 1;
    10a0:	83 e1       	ldi	r24, 0x13	; 19
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:239
			iFrame++;
		}
		else	{
			for (iLed=NUM_LEDS - 1; iLed > iFrame; iLed--) { leds[iLed] = CRGB::Yellow; }
			leds[iFrame] = CRGB::Blue;
			iFrame--;
    10a2:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <iFrame>
    10a6:	17 c0       	rjmp	.+46     	; 0x10d6 <L_5428+0x2b6>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:212
			for (iLed=0; iLed < NUM_LEDS; iLed++) 	{ leds[iLed] = CRGB::Yellow;}
			CountDir = CountDown;
			xFrame = 0;
			iFrame = NUM_LEDS - 1;
		}
		else if(xFrame == NUM_LEDS)	{
    10a8:	24 31       	cpi	r18, 0x14	; 20
    10aa:	b9 f4       	brne	.+46     	; 0x10da <L_5428+0x2ba>
    10ac:	e7 ed       	ldi	r30, 0xD7	; 215
    10ae:	f0 e0       	ldi	r31, 0x00	; 0
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:213
			for (iLed=0; iLed < NUM_LEDS; iLed++) 	{ leds[iLed] = CRGB::Blue;}
    10b0:	85 e1       	ldi	r24, 0x15	; 21
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
    10b2:	9f ef       	ldi	r25, 0xFF	; 255
    10b4:	81 50       	subi	r24, 0x01	; 1
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:213
    10b6:	29 f0       	breq	.+10     	; 0x10c2 <L_5428+0x2a2>
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212

    /// Allow assignment from 32-bit (really 24-bit) 0xRRGGBB color code
    /// @param colorcode a packed 24 bit color code
    inline CRGB& operator= (const uint32_t colorcode) __attribute__((always_inline))
    {
        r = (colorcode >> 16) & 0xFF;
    10b8:	10 82       	st	Z, r1
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:213
        g = (colorcode >>  8) & 0xFF;
    10ba:	11 82       	std	Z+1, r1	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
        b = (colorcode >>  0) & 0xFF;
    10bc:	92 83       	std	Z+2, r25	; 0x02
    10be:	33 96       	adiw	r30, 0x03	; 3
    10c0:	f9 cf       	rjmp	.-14     	; 0x10b4 <L_5428+0x294>
    10c2:	84 e1       	ldi	r24, 0x14	; 20
    10c4:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <iLed>
loop():
			CountDir = CountUp;
    10c8:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <CountDir>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:215
			xFrame = NUM_LEDS - 1;
    10cc:	83 e1       	ldi	r24, 0x13	; 19
    10ce:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <xFrame>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:223
		else if(iFrame == xFrame)	{
			for (iLed=0; iLed < iFrame; iLed++) 	{ leds[iLed] = CRGB::Blue;}
			for (; iLed < NUM_LEDS; iLed++) 		{ leds[iLed] = CRGB::Yellow;}	
			if(CountDir == CountUp)	{
				xFrame = xFrame - 1;
				iFrame = 0;
    10d2:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <iFrame>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:241
		else	{
			for (iLed=NUM_LEDS - 1; iLed > iFrame; iLed--) { leds[iLed] = CRGB::Yellow; }
			leds[iFrame] = CRGB::Blue;
			iFrame--;
		}
		FrameDelay = 5;
    10d6:	85 e0       	ldi	r24, 0x05	; 5
    10d8:	4d cf       	rjmp	.-358    	; 0xf74 <L_5428+0x154>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:218
			for (iLed=0; iLed < NUM_LEDS; iLed++) 	{ leds[iLed] = CRGB::Blue;}
			CountDir = CountUp;
			xFrame = NUM_LEDS - 1;
			iFrame = 0;
		}	
		else if(iFrame == xFrame)	{
    10da:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <iFrame>
    10de:	90 91 14 01 	lds	r25, 0x0114	; 0x800114 <CountDir>
    10e2:	e7 ed       	ldi	r30, 0xD7	; 215
    10e4:	f0 e0       	ldi	r31, 0x00	; 0
    10e6:	28 13       	cpse	r18, r24
    10e8:	32 c0       	rjmp	.+100    	; 0x114e <L_5428+0x32e>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:219
			for (iLed=0; iLed < iFrame; iLed++) 	{ leds[iLed] = CRGB::Blue;}
    10ea:	40 e0       	ldi	r20, 0x00	; 0
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
    10ec:	2f ef       	ldi	r18, 0xFF	; 255
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:219
    10ee:	84 13       	cpse	r24, r20
    10f0:	0f c0       	rjmp	.+30     	; 0x1110 <L_5428+0x2f0>
    10f2:	8c 9f       	mul	r24, r28
    10f4:	f0 01       	movw	r30, r0
    10f6:	11 24       	eor	r1, r1
    10f8:	e9 52       	subi	r30, 0x29	; 41
    10fa:	ff 4f       	sbci	r31, 0xFF	; 255
    10fc:	28 2f       	mov	r18, r24
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212

    /// Allow assignment from 32-bit (really 24-bit) 0xRRGGBB color code
    /// @param colorcode a packed 24 bit color code
    inline CRGB& operator= (const uint32_t colorcode) __attribute__((always_inline))
    {
        r = (colorcode >> 16) & 0xFF;
    10fe:	3f ef       	ldi	r19, 0xFF	; 255
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:220
			for (; iLed < NUM_LEDS; iLed++) 		{ leds[iLed] = CRGB::Yellow;}	
    1100:	24 31       	cpi	r18, 0x14	; 20
    1102:	60 f4       	brcc	.+24     	; 0x111c <L_5428+0x2fc>
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212
    1104:	30 83       	st	Z, r19
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:213
        g = (colorcode >>  8) & 0xFF;
    1106:	31 83       	std	Z+1, r19	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
        b = (colorcode >>  0) & 0xFF;
    1108:	12 82       	std	Z+2, r1	; 0x02
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:220
    110a:	2f 5f       	subi	r18, 0xFF	; 255
    110c:	33 96       	adiw	r30, 0x03	; 3
    110e:	f8 cf       	rjmp	.-16     	; 0x1100 <L_5428+0x2e0>
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212

    /// Allow assignment from 32-bit (really 24-bit) 0xRRGGBB color code
    /// @param colorcode a packed 24 bit color code
    inline CRGB& operator= (const uint32_t colorcode) __attribute__((always_inline))
    {
        r = (colorcode >> 16) & 0xFF;
    1110:	10 82       	st	Z, r1
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:213
        g = (colorcode >>  8) & 0xFF;
    1112:	11 82       	std	Z+1, r1	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
        b = (colorcode >>  0) & 0xFF;
    1114:	22 83       	std	Z+2, r18	; 0x02
    1116:	4f 5f       	subi	r20, 0xFF	; 255
    1118:	33 96       	adiw	r30, 0x03	; 3
    111a:	e9 cf       	rjmp	.-46     	; 0x10ee <L_5428+0x2ce>
    111c:	20 93 d6 00 	sts	0x00D6, r18	; 0x8000d6 <iLed>
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:221
			if(CountDir == CountUp)	{
    1120:	91 11       	cpse	r25, r1
    1122:	04 c0       	rjmp	.+8      	; 0x112c <L_5428+0x30c>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:222
				xFrame = xFrame - 1;
    1124:	41 50       	subi	r20, 0x01	; 1
    1126:	40 93 15 01 	sts	0x0115, r20	; 0x800115 <xFrame>
    112a:	d3 cf       	rjmp	.-90     	; 0x10d2 <L_5428+0x2b2>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:226
				iFrame = 0;
			}
			else{
				leds[iFrame] = CRGB::Blue;
    112c:	90 e0       	ldi	r25, 0x00	; 0
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212

    /// Allow assignment from 32-bit (really 24-bit) 0xRRGGBB color code
    /// @param colorcode a packed 24 bit color code
    inline CRGB& operator= (const uint32_t colorcode) __attribute__((always_inline))
    {
        r = (colorcode >> 16) & 0xFF;
    112e:	9c 01       	movw	r18, r24
    1130:	22 0f       	add	r18, r18
    1132:	33 1f       	adc	r19, r19
    1134:	82 0f       	add	r24, r18
    1136:	93 1f       	adc	r25, r19
    1138:	fc 01       	movw	r30, r24
    113a:	e9 52       	subi	r30, 0x29	; 41
    113c:	ff 4f       	sbci	r31, 0xFF	; 255
    113e:	10 82       	st	Z, r1
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:213
        g = (colorcode >>  8) & 0xFF;
    1140:	11 82       	std	Z+1, r1	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
        b = (colorcode >>  0) & 0xFF;
    1142:	8f ef       	ldi	r24, 0xFF	; 255
    1144:	82 83       	std	Z+2, r24	; 0x02
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:227
				xFrame = xFrame + 1;
    1146:	4f 5f       	subi	r20, 0xFF	; 255
    1148:	40 93 15 01 	sts	0x0115, r20	; 0x800115 <xFrame>
    114c:	a9 cf       	rjmp	.-174    	; 0x10a0 <L_5428+0x280>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:231
				iFrame = NUM_LEDS - 1;
			}
		}
		else if(CountDir == CountUp)	{
    114e:	91 11       	cpse	r25, r1
    1150:	1e c0       	rjmp	.+60     	; 0x118e <L_5428+0x36e>
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
    1152:	2f ef       	ldi	r18, 0xFF	; 255
    1154:	41 e0       	ldi	r20, 0x01	; 1
    1156:	49 0f       	add	r20, r25
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:232
			for (iLed=0; iLed < iFrame; iLed++) { leds[iLed] = CRGB::Blue;	}
    1158:	98 17       	cp	r25, r24
    115a:	31 f0       	breq	.+12     	; 0x1168 <L_5428+0x348>
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212

    /// Allow assignment from 32-bit (really 24-bit) 0xRRGGBB color code
    /// @param colorcode a packed 24 bit color code
    inline CRGB& operator= (const uint32_t colorcode) __attribute__((always_inline))
    {
        r = (colorcode >> 16) & 0xFF;
    115c:	10 82       	st	Z, r1
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:213
        g = (colorcode >>  8) & 0xFF;
    115e:	11 82       	std	Z+1, r1	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
        b = (colorcode >>  0) & 0xFF;
    1160:	22 83       	std	Z+2, r18	; 0x02
    1162:	94 2f       	mov	r25, r20
    1164:	33 96       	adiw	r30, 0x03	; 3
    1166:	f6 cf       	rjmp	.-20     	; 0x1154 <L_5428+0x334>
    1168:	90 93 d6 00 	sts	0x00D6, r25	; 0x8000d6 <iLed>
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:233
			leds[iFrame] = CRGB::Yellow;	
    116c:	89 2f       	mov	r24, r25
    116e:	90 e0       	ldi	r25, 0x00	; 0
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212

    /// Allow assignment from 32-bit (really 24-bit) 0xRRGGBB color code
    /// @param colorcode a packed 24 bit color code
    inline CRGB& operator= (const uint32_t colorcode) __attribute__((always_inline))
    {
        r = (colorcode >> 16) & 0xFF;
    1170:	9c 01       	movw	r18, r24
    1172:	22 0f       	add	r18, r18
    1174:	33 1f       	adc	r19, r19
    1176:	82 0f       	add	r24, r18
    1178:	93 1f       	adc	r25, r19
    117a:	fc 01       	movw	r30, r24
    117c:	e9 52       	subi	r30, 0x29	; 41
    117e:	ff 4f       	sbci	r31, 0xFF	; 255
    1180:	8f ef       	ldi	r24, 0xFF	; 255
    1182:	80 83       	st	Z, r24
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:213
        g = (colorcode >>  8) & 0xFF;
    1184:	81 83       	std	Z+1, r24	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
        b = (colorcode >>  0) & 0xFF;
    1186:	12 82       	std	Z+2, r1	; 0x02
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:234
			iFrame++;
    1188:	40 93 16 01 	sts	0x0116, r20	; 0x800116 <iFrame>
    118c:	a4 cf       	rjmp	.-184    	; 0x10d6 <L_5428+0x2b6>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:237
		}
		else	{
			for (iLed=NUM_LEDS - 1; iLed > iFrame; iLed--) { leds[iLed] = CRGB::Yellow; }
    118e:	93 e1       	ldi	r25, 0x13	; 19
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212

    /// Allow assignment from 32-bit (really 24-bit) 0xRRGGBB color code
    /// @param colorcode a packed 24 bit color code
    inline CRGB& operator= (const uint32_t colorcode) __attribute__((always_inline))
    {
        r = (colorcode >> 16) & 0xFF;
    1190:	2f ef       	ldi	r18, 0xFF	; 255
    1192:	33 97       	sbiw	r30, 0x03	; 3
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:237
    1194:	89 17       	cp	r24, r25
    1196:	28 f4       	brcc	.+10     	; 0x11a2 <L_5428+0x382>
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212
    1198:	24 af       	std	Z+60, r18	; 0x3c
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:213
        g = (colorcode >>  8) & 0xFF;
    119a:	25 af       	std	Z+61, r18	; 0x3d
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
        b = (colorcode >>  0) & 0xFF;
    119c:	16 ae       	std	Z+62, r1	; 0x3e
    119e:	91 50       	subi	r25, 0x01	; 1
    11a0:	f8 cf       	rjmp	.-16     	; 0x1192 <L_5428+0x372>
    11a2:	98 2f       	mov	r25, r24
    11a4:	84 31       	cpi	r24, 0x14	; 20
    11a6:	08 f0       	brcs	.+2      	; 0x11aa <L_5428+0x38a>
    11a8:	93 e1       	ldi	r25, 0x13	; 19
    11aa:	90 93 d6 00 	sts	0x00D6, r25	; 0x8000d6 <iLed>
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:238
			leds[iFrame] = CRGB::Blue;
    11ae:	48 2f       	mov	r20, r24
    11b0:	50 e0       	ldi	r21, 0x00	; 0
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212

    /// Allow assignment from 32-bit (really 24-bit) 0xRRGGBB color code
    /// @param colorcode a packed 24 bit color code
    inline CRGB& operator= (const uint32_t colorcode) __attribute__((always_inline))
    {
        r = (colorcode >> 16) & 0xFF;
    11b2:	9a 01       	movw	r18, r20
    11b4:	22 0f       	add	r18, r18
    11b6:	33 1f       	adc	r19, r19
    11b8:	24 0f       	add	r18, r20
    11ba:	35 1f       	adc	r19, r21
    11bc:	f9 01       	movw	r30, r18
    11be:	e9 52       	subi	r30, 0x29	; 41
    11c0:	ff 4f       	sbci	r31, 0xFF	; 255
    11c2:	10 82       	st	Z, r1
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:213
        g = (colorcode >>  8) & 0xFF;
    11c4:	11 82       	std	Z+1, r1	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
        b = (colorcode >>  0) & 0xFF;
    11c6:	9f ef       	ldi	r25, 0xFF	; 255
    11c8:	92 83       	std	Z+2, r25	; 0x02
loop():
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:239
			iFrame--;
    11ca:	81 50       	subi	r24, 0x01	; 1
    11cc:	6a cf       	rjmp	.-300    	; 0x10a2 <L_5428+0x282>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:245
		}
		FrameDelay = 5;
		FastLED.show();
  	}	
  	//////////////////// STATUS 14 ///////////////////////
  	else if(Status == 14)  {
    11ce:	8e 30       	cpi	r24, 0x0E	; 14
    11d0:	41 f5       	brne	.+80     	; 0x1222 <L_5428+0x402>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:247
		for (iLed=0; iLed<NUM_LEDS; iLed++) {
			if(iLed + iFrame >= NUM_LEDS)	{ leds[iLed] = CRGB(0, 0, Tri[iLed + iFrame - NUM_LEDS]);}
    11d2:	60 91 16 01 	lds	r22, 0x0116	; 0x800116 <iFrame>
    11d6:	e7 ed       	ldi	r30, 0xD7	; 215
    11d8:	f0 e0       	ldi	r31, 0x00	; 0
    11da:	30 e0       	ldi	r19, 0x00	; 0
    11dc:	20 e0       	ldi	r18, 0x00	; 0
    11de:	46 2f       	mov	r20, r22
    11e0:	50 e0       	ldi	r21, 0x00	; 0
    11e2:	ca 01       	movw	r24, r20
    11e4:	82 0f       	add	r24, r18
    11e6:	93 1f       	adc	r25, r19
    11e8:	84 31       	cpi	r24, 0x14	; 20
    11ea:	91 05       	cpc	r25, r1
    11ec:	b8 f0       	brcs	.+46     	; 0x121c <L_5428+0x3fc>
    11ee:	89 58       	subi	r24, 0x89	; 137
    11f0:	9f 4f       	sbci	r25, 0xFF	; 255
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:248
			else									{ leds[iLed] = CRGB(0, 0, Tri[iLed + iFrame]);} 
    11f2:	dc 01       	movw	r26, r24
    11f4:	8c 91       	ld	r24, X
    11f6:	10 82       	st	Z, r1
    11f8:	11 82       	std	Z+1, r1	; 0x01
    11fa:	82 83       	std	Z+2, r24	; 0x02
    11fc:	2f 5f       	subi	r18, 0xFF	; 255
    11fe:	3f 4f       	sbci	r19, 0xFF	; 255
    1200:	33 96       	adiw	r30, 0x03	; 3
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:246
		FrameDelay = 5;
		FastLED.show();
  	}	
  	//////////////////// STATUS 14 ///////////////////////
  	else if(Status == 14)  {
		for (iLed=0; iLed<NUM_LEDS; iLed++) {
    1202:	24 31       	cpi	r18, 0x14	; 20
    1204:	31 05       	cpc	r19, r1
    1206:	69 f7       	brne	.-38     	; 0x11e2 <L_5428+0x3c2>
    1208:	84 e1       	ldi	r24, 0x14	; 20
    120a:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <iLed>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:250
			if(iLed + iFrame >= NUM_LEDS)	{ leds[iLed] = CRGB(0, 0, Tri[iLed + iFrame - NUM_LEDS]);}
			else									{ leds[iLed] = CRGB(0, 0, Tri[iLed + iFrame]);} 
		}
		if  (iFrame == NUM_LEDS - 1)    { iFrame = 0;}
    120e:	63 31       	cpi	r22, 0x13	; 19
    1210:	09 f4       	brne	.+2      	; 0x1214 <L_5428+0x3f4>
    1212:	84 ce       	rjmp	.-760    	; 0xf1c <L_5428+0xfc>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:251
		else                            { iFrame++; }
    1214:	6f 5f       	subi	r22, 0xFF	; 255
    1216:	60 93 16 01 	sts	0x0116, r22	; 0x800116 <iFrame>
    121a:	86 ce       	rjmp	.-756    	; 0xf28 <L_5428+0x108>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:248
  	}	
  	//////////////////// STATUS 14 ///////////////////////
  	else if(Status == 14)  {
		for (iLed=0; iLed<NUM_LEDS; iLed++) {
			if(iLed + iFrame >= NUM_LEDS)	{ leds[iLed] = CRGB(0, 0, Tri[iLed + iFrame - NUM_LEDS]);}
			else									{ leds[iLed] = CRGB(0, 0, Tri[iLed + iFrame]);} 
    121c:	85 57       	subi	r24, 0x75	; 117
    121e:	9f 4f       	sbci	r25, 0xFF	; 255
    1220:	e8 cf       	rjmp	.-48     	; 0x11f2 <L_5428+0x3d2>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:256
		else                            { iFrame++; }
		FastLED.show();
		FrameDelay = 15;
  	}
  	//////////////////// STATUS 15 ///////////////////////
  	else if(Status == 15)  {
    1222:	8f 30       	cpi	r24, 0x0F	; 15
    1224:	91 f4       	brne	.+36     	; 0x124a <L_5428+0x42a>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:257
		if(ResetStatus)	{
    1226:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <ResetStatus>
    122a:	88 23       	and	r24, r24
    122c:	19 f0       	breq	.+6      	; 0x1234 <L_5428+0x414>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:258
			RampInit();
    122e:	b3 db       	rcall	.-2202   	; 0x996 <RampInit()>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:259
			ResetStatus = 0;
    1230:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <ResetStatus>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:441
		Vect[3] = 255;
		Vect[NUM_LEDS/2] = 255;
		Vect[NUM_LEDS/2 + 1] = 255;
		Vect[NUM_LEDS/2 + 2] = 255;
		Vect[NUM_LEDS/2 + 3] = 255;
		ShiftLed(BlueDD);
    1234:	82 e0       	ldi	r24, 0x02	; 2
    1236:	dd db       	rcall	.-2118   	; 0x9f2 <ShiftLed(unsigned char)>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:442
		if  (iFrame == NUM_LEDS - 1)    { iFrame = 0;}
    1238:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <iFrame>
    123c:	83 31       	cpi	r24, 0x13	; 19
    123e:	09 f4       	brne	.+2      	; 0x1242 <L_5428+0x422>
    1240:	6d ce       	rjmp	.-806    	; 0xf1c <L_5428+0xfc>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:443
		else                            { iFrame++; }
    1242:	8f 5f       	subi	r24, 0xFF	; 255
    1244:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <iFrame>
    1248:	6f ce       	rjmp	.-802    	; 0xf28 <L_5428+0x108>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:268
		else                            { iFrame++; }
		FastLED.show();
		FrameDelay = 15;
  	}
  	//////////////////// STATUS 16 ///////////////////////
  	else if(Status == 16)  {
    124a:	80 31       	cpi	r24, 0x10	; 16
    124c:	09 f0       	breq	.+2      	; 0x1250 <L_5428+0x430>
    124e:	66 c2       	rjmp	.+1228   	; 0x171c <L_5428+0x8fc>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:269
		if(ResetStatus)	{
    1250:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <ResetStatus>
    1254:	88 23       	and	r24, r24
    1256:	19 f0       	breq	.+6      	; 0x125e <L_5428+0x43e>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:270
			RampInit();
    1258:	9e db       	rcall	.-2244   	; 0x996 <RampInit()>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:271
			ResetStatus = 0;
    125a:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <ResetStatus>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:273
		}
		if(xFrame == 0)	{
    125e:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <xFrame>
    1262:	81 11       	cpse	r24, r1
    1264:	17 c0       	rjmp	.+46     	; 0x1294 <L_5428+0x474>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:274
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) { leds[iLed] = CRGB(0,255,0); }
    1266:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <iFrame>
    126a:	e7 ed       	ldi	r30, 0xD7	; 215
    126c:	f0 e0       	ldi	r31, 0x00	; 0
    126e:	93 e1       	ldi	r25, 0x13	; 19
    1270:	2f ef       	ldi	r18, 0xFF	; 255
    1272:	33 97       	sbiw	r30, 0x03	; 3
    1274:	89 17       	cp	r24, r25
    1276:	28 f4       	brcc	.+10     	; 0x1282 <L_5428+0x462>
    1278:	14 ae       	std	Z+60, r1	; 0x3c
    127a:	25 af       	std	Z+61, r18	; 0x3d
    127c:	16 ae       	std	Z+62, r1	; 0x3e
    127e:	91 50       	subi	r25, 0x01	; 1
    1280:	f8 cf       	rjmp	.-16     	; 0x1272 <L_5428+0x452>
    1282:	84 31       	cpi	r24, 0x14	; 20
    1284:	08 f0       	brcs	.+2      	; 0x1288 <L_5428+0x468>
    1286:	83 e1       	ldi	r24, 0x13	; 19
    1288:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <iLed>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:275
			xFrame++;
    128c:	81 e0       	ldi	r24, 0x01	; 1
    128e:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <xFrame>
    1292:	44 ce       	rjmp	.-888    	; 0xf1c <L_5428+0xfc>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:279
			iFrame = 0;
		}
		//Fade Blue
		else if(xFrame ==1)	{
    1294:	81 30       	cpi	r24, 0x01	; 1
    1296:	81 f5       	brne	.+96     	; 0x12f8 <L_5428+0x4d8>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:280
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    1298:	20 91 16 01 	lds	r18, 0x0116	; 0x800116 <iFrame>
    129c:	e7 ed       	ldi	r30, 0xD7	; 215
    129e:	f0 e0       	ldi	r31, 0x00	; 0
    12a0:	83 e1       	ldi	r24, 0x13	; 19
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:281
				leds[iLed] = CRGB(0,255,0);
    12a2:	9f ef       	ldi	r25, 0xFF	; 255
    12a4:	33 97       	sbiw	r30, 0x03	; 3
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:280
			xFrame++;
			iFrame = 0;
		}
		//Fade Blue
		else if(xFrame ==1)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    12a6:	28 17       	cp	r18, r24
    12a8:	10 f1       	brcs	.+68     	; 0x12ee <L_5428+0x4ce>
    12aa:	32 2f       	mov	r19, r18
    12ac:	24 31       	cpi	r18, 0x14	; 20
    12ae:	08 f0       	brcs	.+2      	; 0x12b2 <L_5428+0x492>
    12b0:	33 e1       	ldi	r19, 0x13	; 19
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:284
				leds[iLed] = CRGB(0,255,0);
			}		
			for (;iLed != 255; iLed--) {
				leds[iLed] = CRGB(0, 255, Vect[iFrame - iLed]);
    12b2:	82 2f       	mov	r24, r18
    12b4:	90 e0       	ldi	r25, 0x00	; 0
    12b6:	4f ef       	ldi	r20, 0xFF	; 255
    12b8:	fc 01       	movw	r30, r24
    12ba:	e3 1b       	sub	r30, r19
    12bc:	f1 09       	sbc	r31, r1
    12be:	ee 53       	subi	r30, 0x3E	; 62
    12c0:	ff 4f       	sbci	r31, 0xFF	; 255
    12c2:	50 81       	ld	r21, Z
    12c4:	3c 9f       	mul	r19, r28
    12c6:	f0 01       	movw	r30, r0
    12c8:	11 24       	eor	r1, r1
    12ca:	e9 52       	subi	r30, 0x29	; 41
    12cc:	ff 4f       	sbci	r31, 0xFF	; 255
    12ce:	10 82       	st	Z, r1
    12d0:	41 83       	std	Z+1, r20	; 0x01
    12d2:	52 83       	std	Z+2, r21	; 0x02
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:283
		//Fade Blue
		else if(xFrame ==1)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(0,255,0);
			}		
			for (;iLed != 255; iLed--) {
    12d4:	31 50       	subi	r19, 0x01	; 1
    12d6:	80 f7       	brcc	.-32     	; 0x12b8 <L_5428+0x498>
    12d8:	30 93 d6 00 	sts	0x00D6, r19	; 0x8000d6 <iLed>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:286
				leds[iLed] = CRGB(0, 255, Vect[iFrame - iLed]);
			}			
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
    12dc:	23 31       	cpi	r18, 0x13	; 19
    12de:	09 f0       	breq	.+2      	; 0x12e2 <L_5428+0x4c2>
    12e0:	20 ce       	rjmp	.-960    	; 0xf22 <L_5428+0x102>
    12e2:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <iFrame>
    12e6:	82 e0       	ldi	r24, 0x02	; 2
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:407
				leds[iLed] = CRGB(Vect[iLed - iFrame], 255, 0);
			}
			for (;iLed != 255; iLed--) {
				leds[iLed] = CRGB(0, 255, 0);
			}
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame = 1;}
    12e8:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <xFrame>
    12ec:	1d ce       	rjmp	.-966    	; 0xf28 <L_5428+0x108>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:281
			iFrame = 0;
		}
		//Fade Blue
		else if(xFrame ==1)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(0,255,0);
    12ee:	14 ae       	std	Z+60, r1	; 0x3c
    12f0:	95 af       	std	Z+61, r25	; 0x3d
    12f2:	16 ae       	std	Z+62, r1	; 0x3e
    12f4:	81 50       	subi	r24, 0x01	; 1
    12f6:	d6 cf       	rjmp	.-84     	; 0x12a4 <L_5428+0x484>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:290
			}			
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Fill Blue
		else if(xFrame == 2)	{
    12f8:	82 30       	cpi	r24, 0x02	; 2
    12fa:	69 f5       	brne	.+90     	; 0x1356 <L_5428+0x536>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:291
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    12fc:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <iFrame>
    1300:	a8 2f       	mov	r26, r24
    1302:	b0 e0       	ldi	r27, 0x00	; 0
    1304:	ae 53       	subi	r26, 0x3E	; 62
    1306:	bf 4f       	sbci	r27, 0xFF	; 255
    1308:	e7 ed       	ldi	r30, 0xD7	; 215
    130a:	f0 e0       	ldi	r31, 0x00	; 0
    130c:	93 e1       	ldi	r25, 0x13	; 19
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:292
				leds[iLed] = CRGB(0, 255, Vect[NUM_LEDS - 1 - iLed + iFrame]);
    130e:	3f ef       	ldi	r19, 0xFF	; 255
    1310:	33 97       	sbiw	r30, 0x03	; 3
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:291
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Fill Blue
		else if(xFrame == 2)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    1312:	89 17       	cp	r24, r25
    1314:	d0 f0       	brcs	.+52     	; 0x134a <L_5428+0x52a>
    1316:	98 2f       	mov	r25, r24
    1318:	84 31       	cpi	r24, 0x14	; 20
    131a:	08 f0       	brcs	.+2      	; 0x131e <L_5428+0x4fe>
    131c:	93 e1       	ldi	r25, 0x13	; 19
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:295
				leds[iLed] = CRGB(0, 255, Vect[NUM_LEDS - 1 - iLed + iFrame]);
			}
			for (;iLed != 255; iLed--) {
				leds[iLed] = CRGB(0, 255, 255);
    131e:	2f ef       	ldi	r18, 0xFF	; 255
    1320:	9c 9f       	mul	r25, r28
    1322:	f0 01       	movw	r30, r0
    1324:	11 24       	eor	r1, r1
    1326:	e9 52       	subi	r30, 0x29	; 41
    1328:	ff 4f       	sbci	r31, 0xFF	; 255
    132a:	10 82       	st	Z, r1
    132c:	21 83       	std	Z+1, r18	; 0x01
    132e:	22 83       	std	Z+2, r18	; 0x02
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:294
		//Fill Blue
		else if(xFrame == 2)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(0, 255, Vect[NUM_LEDS - 1 - iLed + iFrame]);
			}
			for (;iLed != 255; iLed--) {
    1330:	91 50       	subi	r25, 0x01	; 1
    1332:	b0 f7       	brcc	.-20     	; 0x1320 <L_5428+0x500>
    1334:	90 93 d6 00 	sts	0x00D6, r25	; 0x8000d6 <iLed>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:297
				leds[iLed] = CRGB(0, 255, 255);
			}
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
    1338:	83 31       	cpi	r24, 0x13	; 19
    133a:	09 f0       	breq	.+2      	; 0x133e <L_5428+0x51e>
    133c:	82 cf       	rjmp	.-252    	; 0x1242 <L_5428+0x422>
    133e:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <iFrame>
    1342:	b3 e0       	ldi	r27, 0x03	; 3
    1344:	b0 93 15 01 	sts	0x0115, r27	; 0x800115 <xFrame>
    1348:	ef cd       	rjmp	.-1058   	; 0xf28 <L_5428+0x108>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:292
			else						{iFrame++;}		
		}
		//Fill Blue
		else if(xFrame == 2)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(0, 255, Vect[NUM_LEDS - 1 - iLed + iFrame]);
    134a:	2d 91       	ld	r18, X+
    134c:	14 ae       	std	Z+60, r1	; 0x3c
    134e:	35 af       	std	Z+61, r19	; 0x3d
    1350:	26 af       	std	Z+62, r18	; 0x3e
    1352:	91 50       	subi	r25, 0x01	; 1
    1354:	dd cf       	rjmp	.-70     	; 0x1310 <L_5428+0x4f0>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:301
			}
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Fade Green out
		else if(xFrame == 3)	{
    1356:	83 30       	cpi	r24, 0x03	; 3
    1358:	79 f5       	brne	.+94     	; 0x13b8 <L_5428+0x598>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:302
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    135a:	20 91 16 01 	lds	r18, 0x0116	; 0x800116 <iFrame>
    135e:	e7 ed       	ldi	r30, 0xD7	; 215
    1360:	f0 e0       	ldi	r31, 0x00	; 0
    1362:	83 e1       	ldi	r24, 0x13	; 19
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:303
				leds[iLed] = CRGB(0, 255, 255);
    1364:	9f ef       	ldi	r25, 0xFF	; 255
    1366:	33 97       	sbiw	r30, 0x03	; 3
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:302
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Fade Green out
		else if(xFrame == 3)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    1368:	28 17       	cp	r18, r24
    136a:	08 f1       	brcs	.+66     	; 0x13ae <L_5428+0x58e>
    136c:	32 2f       	mov	r19, r18
    136e:	24 31       	cpi	r18, 0x14	; 20
    1370:	08 f0       	brcs	.+2      	; 0x1374 <L_5428+0x554>
    1372:	33 e1       	ldi	r19, 0x13	; 19
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:306
				leds[iLed] = CRGB(0, 255, 255);
			}
			for (;iLed != 255; iLed--) {
				leds[iLed] = CRGB(0, Vect[NUM_LEDS - 1 - iFrame + iLed], 255);
    1374:	c1 01       	movw	r24, r2
    1376:	82 1b       	sub	r24, r18
    1378:	91 09       	sbc	r25, r1
    137a:	8e 53       	subi	r24, 0x3E	; 62
    137c:	9f 4f       	sbci	r25, 0xFF	; 255
    137e:	4f ef       	ldi	r20, 0xFF	; 255
    1380:	fc 01       	movw	r30, r24
    1382:	e3 0f       	add	r30, r19
    1384:	f1 1d       	adc	r31, r1
    1386:	50 81       	ld	r21, Z
    1388:	3c 9f       	mul	r19, r28
    138a:	f0 01       	movw	r30, r0
    138c:	11 24       	eor	r1, r1
    138e:	e9 52       	subi	r30, 0x29	; 41
    1390:	ff 4f       	sbci	r31, 0xFF	; 255
    1392:	10 82       	st	Z, r1
    1394:	51 83       	std	Z+1, r21	; 0x01
    1396:	42 83       	std	Z+2, r20	; 0x02
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:305
		//Fade Green out
		else if(xFrame == 3)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(0, 255, 255);
			}
			for (;iLed != 255; iLed--) {
    1398:	31 50       	subi	r19, 0x01	; 1
    139a:	90 f7       	brcc	.-28     	; 0x1380 <L_5428+0x560>
    139c:	30 93 d6 00 	sts	0x00D6, r19	; 0x8000d6 <iLed>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:308
				leds[iLed] = CRGB(0, Vect[NUM_LEDS - 1 - iFrame + iLed], 255);
			}
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
    13a0:	23 31       	cpi	r18, 0x13	; 19
    13a2:	09 f0       	breq	.+2      	; 0x13a6 <L_5428+0x586>
    13a4:	be cd       	rjmp	.-1156   	; 0xf22 <L_5428+0x102>
    13a6:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <iFrame>
    13aa:	84 e0       	ldi	r24, 0x04	; 4
    13ac:	9d cf       	rjmp	.-198    	; 0x12e8 <L_5428+0x4c8>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:303
			else						{iFrame++;}		
		}
		//Fade Green out
		else if(xFrame == 3)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(0, 255, 255);
    13ae:	14 ae       	std	Z+60, r1	; 0x3c
    13b0:	95 af       	std	Z+61, r25	; 0x3d
    13b2:	96 af       	std	Z+62, r25	; 0x3e
    13b4:	81 50       	subi	r24, 0x01	; 1
    13b6:	d7 cf       	rjmp	.-82     	; 0x1366 <L_5428+0x546>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:312
			}
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Turn off green
		else if(xFrame == 4)	{
    13b8:	84 30       	cpi	r24, 0x04	; 4
    13ba:	69 f5       	brne	.+90     	; 0x1416 <L_5428+0x5f6>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:313
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    13bc:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <iFrame>
    13c0:	a4 e1       	ldi	r26, 0x14	; 20
    13c2:	b0 e0       	ldi	r27, 0x00	; 0
    13c4:	a8 1b       	sub	r26, r24
    13c6:	b1 09       	sbc	r27, r1
    13c8:	ae 53       	subi	r26, 0x3E	; 62
    13ca:	bf 4f       	sbci	r27, 0xFF	; 255
    13cc:	e7 ed       	ldi	r30, 0xD7	; 215
    13ce:	f0 e0       	ldi	r31, 0x00	; 0
    13d0:	93 e1       	ldi	r25, 0x13	; 19
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:314
				leds[iLed] = CRGB(0, Vect[iLed - iFrame], 255);
    13d2:	2f ef       	ldi	r18, 0xFF	; 255
    13d4:	33 97       	sbiw	r30, 0x03	; 3
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:313
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Turn off green
		else if(xFrame == 4)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    13d6:	89 17       	cp	r24, r25
    13d8:	c0 f0       	brcs	.+48     	; 0x140a <L_5428+0x5ea>
    13da:	98 2f       	mov	r25, r24
    13dc:	84 31       	cpi	r24, 0x14	; 20
    13de:	08 f0       	brcs	.+2      	; 0x13e2 <L_5428+0x5c2>
    13e0:	93 e1       	ldi	r25, 0x13	; 19
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:317
				leds[iLed] = CRGB(0, Vect[iLed - iFrame], 255);
			}
			for (;iLed != 255; iLed--) {
				leds[iLed] = CRGB(0, 0, 255);
    13e2:	2f ef       	ldi	r18, 0xFF	; 255
    13e4:	9c 9f       	mul	r25, r28
    13e6:	f0 01       	movw	r30, r0
    13e8:	11 24       	eor	r1, r1
    13ea:	e9 52       	subi	r30, 0x29	; 41
    13ec:	ff 4f       	sbci	r31, 0xFF	; 255
    13ee:	10 82       	st	Z, r1
    13f0:	11 82       	std	Z+1, r1	; 0x01
    13f2:	22 83       	std	Z+2, r18	; 0x02
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:316
		//Turn off green
		else if(xFrame == 4)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(0, Vect[iLed - iFrame], 255);
			}
			for (;iLed != 255; iLed--) {
    13f4:	91 50       	subi	r25, 0x01	; 1
    13f6:	b0 f7       	brcc	.-20     	; 0x13e4 <L_5428+0x5c4>
    13f8:	90 93 d6 00 	sts	0x00D6, r25	; 0x8000d6 <iLed>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:319
				leds[iLed] = CRGB(0, 0, 255);
			}
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
    13fc:	83 31       	cpi	r24, 0x13	; 19
    13fe:	09 f0       	breq	.+2      	; 0x1402 <L_5428+0x5e2>
    1400:	20 cf       	rjmp	.-448    	; 0x1242 <L_5428+0x422>
    1402:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <iFrame>
    1406:	85 e0       	ldi	r24, 0x05	; 5
    1408:	6f cf       	rjmp	.-290    	; 0x12e8 <L_5428+0x4c8>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:314
			else						{iFrame++;}		
		}
		//Turn off green
		else if(xFrame == 4)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(0, Vect[iLed - iFrame], 255);
    140a:	3e 91       	ld	r19, -X
    140c:	14 ae       	std	Z+60, r1	; 0x3c
    140e:	35 af       	std	Z+61, r19	; 0x3d
    1410:	26 af       	std	Z+62, r18	; 0x3e
    1412:	91 50       	subi	r25, 0x01	; 1
    1414:	df cf       	rjmp	.-66     	; 0x13d4 <L_5428+0x5b4>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:323
			}
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}	
		//Fade red
		else if(xFrame == 5)	{
    1416:	85 30       	cpi	r24, 0x05	; 5
    1418:	71 f5       	brne	.+92     	; 0x1476 <L_5428+0x656>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:324
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    141a:	20 91 16 01 	lds	r18, 0x0116	; 0x800116 <iFrame>
    141e:	e7 ed       	ldi	r30, 0xD7	; 215
    1420:	f0 e0       	ldi	r31, 0x00	; 0
    1422:	83 e1       	ldi	r24, 0x13	; 19
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:325
				leds[iLed] = CRGB(0,0,255);
    1424:	9f ef       	ldi	r25, 0xFF	; 255
    1426:	33 97       	sbiw	r30, 0x03	; 3
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:324
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}	
		//Fade red
		else if(xFrame == 5)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    1428:	28 17       	cp	r18, r24
    142a:	00 f1       	brcs	.+64     	; 0x146c <L_5428+0x64c>
    142c:	32 2f       	mov	r19, r18
    142e:	24 31       	cpi	r18, 0x14	; 20
    1430:	08 f0       	brcs	.+2      	; 0x1434 <L_5428+0x614>
    1432:	33 e1       	ldi	r19, 0x13	; 19
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:328
				leds[iLed] = CRGB(0,0,255);
			}		
			for (;iLed != 255; iLed--) {
				leds[iLed] = CRGB(Vect[iFrame - iLed], 0, 255);
    1434:	82 2f       	mov	r24, r18
    1436:	90 e0       	ldi	r25, 0x00	; 0
    1438:	4f ef       	ldi	r20, 0xFF	; 255
    143a:	3c 9f       	mul	r19, r28
    143c:	f0 01       	movw	r30, r0
    143e:	11 24       	eor	r1, r1
    1440:	e9 52       	subi	r30, 0x29	; 41
    1442:	ff 4f       	sbci	r31, 0xFF	; 255
    1444:	dc 01       	movw	r26, r24
    1446:	a3 1b       	sub	r26, r19
    1448:	b1 09       	sbc	r27, r1
    144a:	ae 53       	subi	r26, 0x3E	; 62
    144c:	bf 4f       	sbci	r27, 0xFF	; 255
    144e:	5c 91       	ld	r21, X
    1450:	50 83       	st	Z, r21
    1452:	11 82       	std	Z+1, r1	; 0x01
    1454:	42 83       	std	Z+2, r20	; 0x02
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:327
		//Fade red
		else if(xFrame == 5)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(0,0,255);
			}		
			for (;iLed != 255; iLed--) {
    1456:	31 50       	subi	r19, 0x01	; 1
    1458:	80 f7       	brcc	.-32     	; 0x143a <L_5428+0x61a>
    145a:	30 93 d6 00 	sts	0x00D6, r19	; 0x8000d6 <iLed>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:330
				leds[iLed] = CRGB(Vect[iFrame - iLed], 0, 255);
			}			
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
    145e:	23 31       	cpi	r18, 0x13	; 19
    1460:	09 f0       	breq	.+2      	; 0x1464 <L_5428+0x644>
    1462:	5f cd       	rjmp	.-1346   	; 0xf22 <L_5428+0x102>
    1464:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <iFrame>
    1468:	86 e0       	ldi	r24, 0x06	; 6
    146a:	3e cf       	rjmp	.-388    	; 0x12e8 <L_5428+0x4c8>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:325
			else						{iFrame++;}		
		}	
		//Fade red
		else if(xFrame == 5)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(0,0,255);
    146c:	14 ae       	std	Z+60, r1	; 0x3c
    146e:	15 ae       	std	Z+61, r1	; 0x3d
    1470:	96 af       	std	Z+62, r25	; 0x3e
    1472:	81 50       	subi	r24, 0x01	; 1
    1474:	d8 cf       	rjmp	.-80     	; 0x1426 <L_5428+0x606>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:334
			}			
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Fill red
		else if(xFrame == 6)	{
    1476:	86 30       	cpi	r24, 0x06	; 6
    1478:	59 f5       	brne	.+86     	; 0x14d0 <L_5428+0x6b0>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:335
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    147a:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <iFrame>
    147e:	a8 2f       	mov	r26, r24
    1480:	b0 e0       	ldi	r27, 0x00	; 0
    1482:	ae 53       	subi	r26, 0x3E	; 62
    1484:	bf 4f       	sbci	r27, 0xFF	; 255
    1486:	e7 ed       	ldi	r30, 0xD7	; 215
    1488:	f0 e0       	ldi	r31, 0x00	; 0
    148a:	93 e1       	ldi	r25, 0x13	; 19
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:336
				leds[iLed] = CRGB(Vect[NUM_LEDS - 1 - iLed + iFrame], 0, 255);
    148c:	2f ef       	ldi	r18, 0xFF	; 255
    148e:	33 97       	sbiw	r30, 0x03	; 3
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:335
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Fill red
		else if(xFrame == 6)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    1490:	89 17       	cp	r24, r25
    1492:	c0 f0       	brcs	.+48     	; 0x14c4 <L_5428+0x6a4>
    1494:	98 2f       	mov	r25, r24
    1496:	84 31       	cpi	r24, 0x14	; 20
    1498:	08 f0       	brcs	.+2      	; 0x149c <L_5428+0x67c>
    149a:	93 e1       	ldi	r25, 0x13	; 19
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:339
				leds[iLed] = CRGB(Vect[NUM_LEDS - 1 - iLed + iFrame], 0, 255);
			}
			for (;iLed != 255; iLed--) {
				leds[iLed] = CRGB(255, 0, 255);
    149c:	2f ef       	ldi	r18, 0xFF	; 255
    149e:	9c 9f       	mul	r25, r28
    14a0:	f0 01       	movw	r30, r0
    14a2:	11 24       	eor	r1, r1
    14a4:	e9 52       	subi	r30, 0x29	; 41
    14a6:	ff 4f       	sbci	r31, 0xFF	; 255
    14a8:	20 83       	st	Z, r18
    14aa:	11 82       	std	Z+1, r1	; 0x01
    14ac:	22 83       	std	Z+2, r18	; 0x02
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:338
		//Fill red
		else if(xFrame == 6)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(Vect[NUM_LEDS - 1 - iLed + iFrame], 0, 255);
			}
			for (;iLed != 255; iLed--) {
    14ae:	91 50       	subi	r25, 0x01	; 1
    14b0:	b0 f7       	brcc	.-20     	; 0x149e <L_5428+0x67e>
    14b2:	90 93 d6 00 	sts	0x00D6, r25	; 0x8000d6 <iLed>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:341
				leds[iLed] = CRGB(255, 0, 255);
			}
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
    14b6:	83 31       	cpi	r24, 0x13	; 19
    14b8:	09 f0       	breq	.+2      	; 0x14bc <L_5428+0x69c>
    14ba:	c3 ce       	rjmp	.-634    	; 0x1242 <L_5428+0x422>
    14bc:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <iFrame>
    14c0:	87 e0       	ldi	r24, 0x07	; 7
    14c2:	12 cf       	rjmp	.-476    	; 0x12e8 <L_5428+0x4c8>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:336
			else						{iFrame++;}		
		}
		//Fill red
		else if(xFrame == 6)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(Vect[NUM_LEDS - 1 - iLed + iFrame], 0, 255);
    14c4:	3d 91       	ld	r19, X+
    14c6:	34 af       	std	Z+60, r19	; 0x3c
    14c8:	15 ae       	std	Z+61, r1	; 0x3d
    14ca:	26 af       	std	Z+62, r18	; 0x3e
    14cc:	91 50       	subi	r25, 0x01	; 1
    14ce:	df cf       	rjmp	.-66     	; 0x148e <L_5428+0x66e>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:345
			}
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Fade blue out		
		else if(xFrame == 7)	{
    14d0:	87 30       	cpi	r24, 0x07	; 7
    14d2:	79 f5       	brne	.+94     	; 0x1532 <L_5428+0x712>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:346
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    14d4:	20 91 16 01 	lds	r18, 0x0116	; 0x800116 <iFrame>
    14d8:	e7 ed       	ldi	r30, 0xD7	; 215
    14da:	f0 e0       	ldi	r31, 0x00	; 0
    14dc:	83 e1       	ldi	r24, 0x13	; 19
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:347
				leds[iLed] = CRGB(255, 0, 255);
    14de:	9f ef       	ldi	r25, 0xFF	; 255
    14e0:	33 97       	sbiw	r30, 0x03	; 3
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:346
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Fade blue out		
		else if(xFrame == 7)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    14e2:	28 17       	cp	r18, r24
    14e4:	08 f1       	brcs	.+66     	; 0x1528 <L_5428+0x708>
    14e6:	32 2f       	mov	r19, r18
    14e8:	24 31       	cpi	r18, 0x14	; 20
    14ea:	08 f0       	brcs	.+2      	; 0x14ee <L_5428+0x6ce>
    14ec:	33 e1       	ldi	r19, 0x13	; 19
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:350
				leds[iLed] = CRGB(255, 0, 255);
			}
			for (;iLed != 255; iLed--) {
				leds[iLed] = CRGB(255, 0, Vect[NUM_LEDS - 1 - iFrame + iLed]);
    14ee:	c1 01       	movw	r24, r2
    14f0:	82 1b       	sub	r24, r18
    14f2:	91 09       	sbc	r25, r1
    14f4:	8e 53       	subi	r24, 0x3E	; 62
    14f6:	9f 4f       	sbci	r25, 0xFF	; 255
    14f8:	4f ef       	ldi	r20, 0xFF	; 255
    14fa:	fc 01       	movw	r30, r24
    14fc:	e3 0f       	add	r30, r19
    14fe:	f1 1d       	adc	r31, r1
    1500:	50 81       	ld	r21, Z
    1502:	3c 9f       	mul	r19, r28
    1504:	f0 01       	movw	r30, r0
    1506:	11 24       	eor	r1, r1
    1508:	e9 52       	subi	r30, 0x29	; 41
    150a:	ff 4f       	sbci	r31, 0xFF	; 255
    150c:	40 83       	st	Z, r20
    150e:	11 82       	std	Z+1, r1	; 0x01
    1510:	52 83       	std	Z+2, r21	; 0x02
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:349
		//Fade blue out		
		else if(xFrame == 7)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(255, 0, 255);
			}
			for (;iLed != 255; iLed--) {
    1512:	31 50       	subi	r19, 0x01	; 1
    1514:	90 f7       	brcc	.-28     	; 0x14fa <L_5428+0x6da>
    1516:	30 93 d6 00 	sts	0x00D6, r19	; 0x8000d6 <iLed>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:352
				leds[iLed] = CRGB(255, 0, Vect[NUM_LEDS - 1 - iFrame + iLed]);
			}
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
    151a:	23 31       	cpi	r18, 0x13	; 19
    151c:	09 f0       	breq	.+2      	; 0x1520 <L_5428+0x700>
    151e:	01 cd       	rjmp	.-1534   	; 0xf22 <L_5428+0x102>
    1520:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <iFrame>
    1524:	88 e0       	ldi	r24, 0x08	; 8
    1526:	e0 ce       	rjmp	.-576    	; 0x12e8 <L_5428+0x4c8>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:347
			else						{iFrame++;}		
		}
		//Fade blue out		
		else if(xFrame == 7)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(255, 0, 255);
    1528:	94 af       	std	Z+60, r25	; 0x3c
    152a:	15 ae       	std	Z+61, r1	; 0x3d
    152c:	96 af       	std	Z+62, r25	; 0x3e
    152e:	81 50       	subi	r24, 0x01	; 1
    1530:	d7 cf       	rjmp	.-82     	; 0x14e0 <L_5428+0x6c0>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:356
			}
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Turn off blue
		else if(xFrame == 8)	{
    1532:	88 30       	cpi	r24, 0x08	; 8
    1534:	69 f5       	brne	.+90     	; 0x1590 <L_5428+0x770>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:357
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    1536:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <iFrame>
    153a:	a4 e1       	ldi	r26, 0x14	; 20
    153c:	b0 e0       	ldi	r27, 0x00	; 0
    153e:	a8 1b       	sub	r26, r24
    1540:	b1 09       	sbc	r27, r1
    1542:	ae 53       	subi	r26, 0x3E	; 62
    1544:	bf 4f       	sbci	r27, 0xFF	; 255
    1546:	e7 ed       	ldi	r30, 0xD7	; 215
    1548:	f0 e0       	ldi	r31, 0x00	; 0
    154a:	93 e1       	ldi	r25, 0x13	; 19
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:358
				leds[iLed] = CRGB(255, 0, Vect[iLed - iFrame]);
    154c:	3f ef       	ldi	r19, 0xFF	; 255
    154e:	33 97       	sbiw	r30, 0x03	; 3
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:357
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Turn off blue
		else if(xFrame == 8)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    1550:	89 17       	cp	r24, r25
    1552:	c0 f0       	brcs	.+48     	; 0x1584 <L_5428+0x764>
    1554:	98 2f       	mov	r25, r24
    1556:	84 31       	cpi	r24, 0x14	; 20
    1558:	08 f0       	brcs	.+2      	; 0x155c <L_5428+0x73c>
    155a:	93 e1       	ldi	r25, 0x13	; 19
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:361
				leds[iLed] = CRGB(255, 0, Vect[iLed - iFrame]);
			}
			for (;iLed != 255; iLed--) {
				leds[iLed] = CRGB(255, 0, 0);
    155c:	2f ef       	ldi	r18, 0xFF	; 255
    155e:	9c 9f       	mul	r25, r28
    1560:	f0 01       	movw	r30, r0
    1562:	11 24       	eor	r1, r1
    1564:	e9 52       	subi	r30, 0x29	; 41
    1566:	ff 4f       	sbci	r31, 0xFF	; 255
    1568:	20 83       	st	Z, r18
    156a:	11 82       	std	Z+1, r1	; 0x01
    156c:	12 82       	std	Z+2, r1	; 0x02
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:360
		//Turn off blue
		else if(xFrame == 8)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(255, 0, Vect[iLed - iFrame]);
			}
			for (;iLed != 255; iLed--) {
    156e:	91 50       	subi	r25, 0x01	; 1
    1570:	b0 f7       	brcc	.-20     	; 0x155e <L_5428+0x73e>
    1572:	90 93 d6 00 	sts	0x00D6, r25	; 0x8000d6 <iLed>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:363
				leds[iLed] = CRGB(255, 0, 0);
			}
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
    1576:	83 31       	cpi	r24, 0x13	; 19
    1578:	09 f0       	breq	.+2      	; 0x157c <L_5428+0x75c>
    157a:	63 ce       	rjmp	.-826    	; 0x1242 <L_5428+0x422>
    157c:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <iFrame>
    1580:	89 e0       	ldi	r24, 0x09	; 9
    1582:	b2 ce       	rjmp	.-668    	; 0x12e8 <L_5428+0x4c8>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:358
			else						{iFrame++;}		
		}
		//Turn off blue
		else if(xFrame == 8)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(255, 0, Vect[iLed - iFrame]);
    1584:	2e 91       	ld	r18, -X
    1586:	34 af       	std	Z+60, r19	; 0x3c
    1588:	15 ae       	std	Z+61, r1	; 0x3d
    158a:	26 af       	std	Z+62, r18	; 0x3e
    158c:	91 50       	subi	r25, 0x01	; 1
    158e:	df cf       	rjmp	.-66     	; 0x154e <L_5428+0x72e>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:367
			}
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}		
		//Fade in Green
		else if(xFrame == 9)	{
    1590:	89 30       	cpi	r24, 0x09	; 9
    1592:	71 f5       	brne	.+92     	; 0x15f0 <L_5428+0x7d0>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:368
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    1594:	20 91 16 01 	lds	r18, 0x0116	; 0x800116 <iFrame>
    1598:	e7 ed       	ldi	r30, 0xD7	; 215
    159a:	f0 e0       	ldi	r31, 0x00	; 0
    159c:	83 e1       	ldi	r24, 0x13	; 19
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:369
				leds[iLed] = CRGB(255,0,0);
    159e:	9f ef       	ldi	r25, 0xFF	; 255
    15a0:	33 97       	sbiw	r30, 0x03	; 3
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:368
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}		
		//Fade in Green
		else if(xFrame == 9)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    15a2:	28 17       	cp	r18, r24
    15a4:	00 f1       	brcs	.+64     	; 0x15e6 <L_5428+0x7c6>
    15a6:	32 2f       	mov	r19, r18
    15a8:	24 31       	cpi	r18, 0x14	; 20
    15aa:	08 f0       	brcs	.+2      	; 0x15ae <L_5428+0x78e>
    15ac:	33 e1       	ldi	r19, 0x13	; 19
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:372
				leds[iLed] = CRGB(255,0,0);
			}		
			for (;iLed != 255; iLed--) {
				leds[iLed] = CRGB(255,Vect[iFrame - iLed], 0);
    15ae:	82 2f       	mov	r24, r18
    15b0:	90 e0       	ldi	r25, 0x00	; 0
    15b2:	4f ef       	ldi	r20, 0xFF	; 255
    15b4:	fc 01       	movw	r30, r24
    15b6:	e3 1b       	sub	r30, r19
    15b8:	f1 09       	sbc	r31, r1
    15ba:	ee 53       	subi	r30, 0x3E	; 62
    15bc:	ff 4f       	sbci	r31, 0xFF	; 255
    15be:	50 81       	ld	r21, Z
    15c0:	3c 9f       	mul	r19, r28
    15c2:	f0 01       	movw	r30, r0
    15c4:	11 24       	eor	r1, r1
    15c6:	e9 52       	subi	r30, 0x29	; 41
    15c8:	ff 4f       	sbci	r31, 0xFF	; 255
    15ca:	40 83       	st	Z, r20
    15cc:	51 83       	std	Z+1, r21	; 0x01
    15ce:	12 82       	std	Z+2, r1	; 0x02
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:371
		//Fade in Green
		else if(xFrame == 9)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(255,0,0);
			}		
			for (;iLed != 255; iLed--) {
    15d0:	31 50       	subi	r19, 0x01	; 1
    15d2:	80 f7       	brcc	.-32     	; 0x15b4 <L_5428+0x794>
    15d4:	30 93 d6 00 	sts	0x00D6, r19	; 0x8000d6 <iLed>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:374
				leds[iLed] = CRGB(255,Vect[iFrame - iLed], 0);
			}			
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
    15d8:	23 31       	cpi	r18, 0x13	; 19
    15da:	09 f0       	breq	.+2      	; 0x15de <L_5428+0x7be>
    15dc:	a2 cc       	rjmp	.-1724   	; 0xf22 <L_5428+0x102>
    15de:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <iFrame>
    15e2:	8a e0       	ldi	r24, 0x0A	; 10
    15e4:	81 ce       	rjmp	.-766    	; 0x12e8 <L_5428+0x4c8>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:369
			else						{iFrame++;}		
		}		
		//Fade in Green
		else if(xFrame == 9)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(255,0,0);
    15e6:	94 af       	std	Z+60, r25	; 0x3c
    15e8:	15 ae       	std	Z+61, r1	; 0x3d
    15ea:	16 ae       	std	Z+62, r1	; 0x3e
    15ec:	81 50       	subi	r24, 0x01	; 1
    15ee:	d8 cf       	rjmp	.-80     	; 0x15a0 <L_5428+0x780>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:378
			}			
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}			
		}		
		//Fill green
		else if(xFrame == 10)	{
    15f0:	8a 30       	cpi	r24, 0x0A	; 10
    15f2:	59 f5       	brne	.+86     	; 0x164a <L_5428+0x82a>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:379
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    15f4:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <iFrame>
    15f8:	a8 2f       	mov	r26, r24
    15fa:	b0 e0       	ldi	r27, 0x00	; 0
    15fc:	ae 53       	subi	r26, 0x3E	; 62
    15fe:	bf 4f       	sbci	r27, 0xFF	; 255
    1600:	e7 ed       	ldi	r30, 0xD7	; 215
    1602:	f0 e0       	ldi	r31, 0x00	; 0
    1604:	93 e1       	ldi	r25, 0x13	; 19
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:380
				leds[iLed] = CRGB(255,Vect[NUM_LEDS - 1 - iLed + iFrame], 0);
    1606:	3f ef       	ldi	r19, 0xFF	; 255
    1608:	33 97       	sbiw	r30, 0x03	; 3
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:379
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}			
		}		
		//Fill green
		else if(xFrame == 10)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    160a:	89 17       	cp	r24, r25
    160c:	c0 f0       	brcs	.+48     	; 0x163e <L_5428+0x81e>
    160e:	98 2f       	mov	r25, r24
    1610:	84 31       	cpi	r24, 0x14	; 20
    1612:	08 f0       	brcs	.+2      	; 0x1616 <L_5428+0x7f6>
    1614:	93 e1       	ldi	r25, 0x13	; 19
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:383
				leds[iLed] = CRGB(255,Vect[NUM_LEDS - 1 - iLed + iFrame], 0);
			}
			for (;iLed != 255; iLed--) {
				leds[iLed] = CRGB(255, 255, 0);
    1616:	2f ef       	ldi	r18, 0xFF	; 255
    1618:	9c 9f       	mul	r25, r28
    161a:	f0 01       	movw	r30, r0
    161c:	11 24       	eor	r1, r1
    161e:	e9 52       	subi	r30, 0x29	; 41
    1620:	ff 4f       	sbci	r31, 0xFF	; 255
    1622:	20 83       	st	Z, r18
    1624:	21 83       	std	Z+1, r18	; 0x01
    1626:	12 82       	std	Z+2, r1	; 0x02
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:382
		//Fill green
		else if(xFrame == 10)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(255,Vect[NUM_LEDS - 1 - iLed + iFrame], 0);
			}
			for (;iLed != 255; iLed--) {
    1628:	91 50       	subi	r25, 0x01	; 1
    162a:	b0 f7       	brcc	.-20     	; 0x1618 <L_5428+0x7f8>
    162c:	90 93 d6 00 	sts	0x00D6, r25	; 0x8000d6 <iLed>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:385
				leds[iLed] = CRGB(255, 255, 0);
			}
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
    1630:	83 31       	cpi	r24, 0x13	; 19
    1632:	09 f0       	breq	.+2      	; 0x1636 <L_5428+0x816>
    1634:	06 ce       	rjmp	.-1012   	; 0x1242 <L_5428+0x422>
    1636:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <iFrame>
    163a:	8b e0       	ldi	r24, 0x0B	; 11
    163c:	55 ce       	rjmp	.-854    	; 0x12e8 <L_5428+0x4c8>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:380
			else						{iFrame++;}			
		}		
		//Fill green
		else if(xFrame == 10)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(255,Vect[NUM_LEDS - 1 - iLed + iFrame], 0);
    163e:	2d 91       	ld	r18, X+
    1640:	34 af       	std	Z+60, r19	; 0x3c
    1642:	25 af       	std	Z+61, r18	; 0x3d
    1644:	16 ae       	std	Z+62, r1	; 0x3e
    1646:	91 50       	subi	r25, 0x01	; 1
    1648:	df cf       	rjmp	.-66     	; 0x1608 <L_5428+0x7e8>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:389
			}
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Fade red out		
		else if(xFrame == 11)	{
    164a:	8b 30       	cpi	r24, 0x0B	; 11
    164c:	b9 f5       	brne	.+110    	; 0x16bc <L_5428+0x89c>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:390
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    164e:	20 91 16 01 	lds	r18, 0x0116	; 0x800116 <iFrame>
    1652:	e7 ed       	ldi	r30, 0xD7	; 215
    1654:	f0 e0       	ldi	r31, 0x00	; 0
    1656:	83 e1       	ldi	r24, 0x13	; 19
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:391
				leds[iLed] = CRGB(255, 255, 0);
    1658:	9f ef       	ldi	r25, 0xFF	; 255
    165a:	33 97       	sbiw	r30, 0x03	; 3
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:390
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Fade red out		
		else if(xFrame == 11)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    165c:	28 17       	cp	r18, r24
    165e:	f8 f0       	brcs	.+62     	; 0x169e <L_5428+0x87e>
    1660:	e2 2f       	mov	r30, r18
    1662:	24 31       	cpi	r18, 0x14	; 20
    1664:	08 f0       	brcs	.+2      	; 0x1668 <L_5428+0x848>
    1666:	e3 e1       	ldi	r30, 0x13	; 19
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:394
				leds[iLed] = CRGB(255, 255, 0);
			}
			for (;iLed != 255; iLed--) {
				leds[iLed] = CRGB(Vect[NUM_LEDS - 1 - iFrame + iLed], 255, 0);
    1668:	c1 01       	movw	r24, r2
    166a:	82 1b       	sub	r24, r18
    166c:	91 09       	sbc	r25, r1
    166e:	8e 53       	subi	r24, 0x3E	; 62
    1670:	9f 4f       	sbci	r25, 0xFF	; 255
    1672:	4f ef       	ldi	r20, 0xFF	; 255
    1674:	3f ef       	ldi	r19, 0xFF	; 255
    1676:	3e 0f       	add	r19, r30
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:393
		//Fade red out		
		else if(xFrame == 11)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(255, 255, 0);
			}
			for (;iLed != 255; iLed--) {
    1678:	3e 3f       	cpi	r19, 0xFE	; 254
    167a:	b1 f0       	breq	.+44     	; 0x16a8 <L_5428+0x888>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:394
				leds[iLed] = CRGB(Vect[NUM_LEDS - 1 - iFrame + iLed], 255, 0);
    167c:	ec 9f       	mul	r30, r28
    167e:	d0 01       	movw	r26, r0
    1680:	11 24       	eor	r1, r1
    1682:	a9 52       	subi	r26, 0x29	; 41
    1684:	bf 4f       	sbci	r27, 0xFF	; 255
    1686:	e8 0f       	add	r30, r24
    1688:	f9 2f       	mov	r31, r25
    168a:	f1 1d       	adc	r31, r1
    168c:	50 81       	ld	r21, Z
    168e:	5c 93       	st	X, r21
    1690:	11 96       	adiw	r26, 0x01	; 1
    1692:	4c 93       	st	X, r20
    1694:	11 97       	sbiw	r26, 0x01	; 1
    1696:	12 96       	adiw	r26, 0x02	; 2
    1698:	1c 92       	st	X, r1
    169a:	e3 2f       	mov	r30, r19
    169c:	eb cf       	rjmp	.-42     	; 0x1674 <L_5428+0x854>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:391
			else						{iFrame++;}		
		}
		//Fade red out		
		else if(xFrame == 11)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(255, 255, 0);
    169e:	94 af       	std	Z+60, r25	; 0x3c
    16a0:	95 af       	std	Z+61, r25	; 0x3d
    16a2:	16 ae       	std	Z+62, r1	; 0x3e
    16a4:	81 50       	subi	r24, 0x01	; 1
    16a6:	d9 cf       	rjmp	.-78     	; 0x165a <L_5428+0x83a>
    16a8:	8f ef       	ldi	r24, 0xFF	; 255
    16aa:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <iLed>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:396
			}
			for (;iLed != 255; iLed--) {
				leds[iLed] = CRGB(Vect[NUM_LEDS - 1 - iFrame + iLed], 255, 0);
			}
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
    16ae:	23 31       	cpi	r18, 0x13	; 19
    16b0:	09 f0       	breq	.+2      	; 0x16b4 <L_5428+0x894>
    16b2:	37 cc       	rjmp	.-1938   	; 0xf22 <L_5428+0x102>
    16b4:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <iFrame>
    16b8:	8c e0       	ldi	r24, 0x0C	; 12
    16ba:	16 ce       	rjmp	.-980    	; 0x12e8 <L_5428+0x4c8>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:400
			else						{iFrame++;}		
		}
		//Turn off red
		else if(xFrame == 12)	{
    16bc:	8c 30       	cpi	r24, 0x0C	; 12
    16be:	09 f0       	breq	.+2      	; 0x16c2 <L_5428+0x8a2>
    16c0:	33 cc       	rjmp	.-1946   	; 0xf28 <L_5428+0x108>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:401
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    16c2:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <iFrame>
    16c6:	a4 e1       	ldi	r26, 0x14	; 20
    16c8:	b0 e0       	ldi	r27, 0x00	; 0
    16ca:	a8 1b       	sub	r26, r24
    16cc:	b1 09       	sbc	r27, r1
    16ce:	ae 53       	subi	r26, 0x3E	; 62
    16d0:	bf 4f       	sbci	r27, 0xFF	; 255
    16d2:	e7 ed       	ldi	r30, 0xD7	; 215
    16d4:	f0 e0       	ldi	r31, 0x00	; 0
    16d6:	93 e1       	ldi	r25, 0x13	; 19
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:402
				leds[iLed] = CRGB(Vect[iLed - iFrame], 255, 0);
    16d8:	2f ef       	ldi	r18, 0xFF	; 255
    16da:	33 97       	sbiw	r30, 0x03	; 3
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:401
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Turn off red
		else if(xFrame == 12)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    16dc:	89 17       	cp	r24, r25
    16de:	c0 f0       	brcs	.+48     	; 0x1710 <L_5428+0x8f0>
    16e0:	98 2f       	mov	r25, r24
    16e2:	84 31       	cpi	r24, 0x14	; 20
    16e4:	08 f0       	brcs	.+2      	; 0x16e8 <L_5428+0x8c8>
    16e6:	93 e1       	ldi	r25, 0x13	; 19
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:405
				leds[iLed] = CRGB(Vect[iLed - iFrame], 255, 0);
			}
			for (;iLed != 255; iLed--) {
				leds[iLed] = CRGB(0, 255, 0);
    16e8:	2f ef       	ldi	r18, 0xFF	; 255
    16ea:	9c 9f       	mul	r25, r28
    16ec:	f0 01       	movw	r30, r0
    16ee:	11 24       	eor	r1, r1
    16f0:	e9 52       	subi	r30, 0x29	; 41
    16f2:	ff 4f       	sbci	r31, 0xFF	; 255
    16f4:	10 82       	st	Z, r1
    16f6:	21 83       	std	Z+1, r18	; 0x01
    16f8:	12 82       	std	Z+2, r1	; 0x02
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:404
		//Turn off red
		else if(xFrame == 12)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(Vect[iLed - iFrame], 255, 0);
			}
			for (;iLed != 255; iLed--) {
    16fa:	91 50       	subi	r25, 0x01	; 1
    16fc:	b0 f7       	brcc	.-20     	; 0x16ea <L_5428+0x8ca>
    16fe:	90 93 d6 00 	sts	0x00D6, r25	; 0x8000d6 <iLed>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:407
				leds[iLed] = CRGB(0, 255, 0);
			}
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame = 1;}
    1702:	83 31       	cpi	r24, 0x13	; 19
    1704:	09 f0       	breq	.+2      	; 0x1708 <L_5428+0x8e8>
    1706:	9d cd       	rjmp	.-1222   	; 0x1242 <L_5428+0x422>
    1708:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <iFrame>
    170c:	81 e0       	ldi	r24, 0x01	; 1
    170e:	ec cd       	rjmp	.-1064   	; 0x12e8 <L_5428+0x4c8>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:402
			else						{iFrame++;}		
		}
		//Turn off red
		else if(xFrame == 12)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(Vect[iLed - iFrame], 255, 0);
    1710:	3e 91       	ld	r19, -X
    1712:	34 af       	std	Z+60, r19	; 0x3c
    1714:	25 af       	std	Z+61, r18	; 0x3d
    1716:	16 ae       	std	Z+62, r1	; 0x3e
    1718:	91 50       	subi	r25, 0x01	; 1
    171a:	df cf       	rjmp	.-66     	; 0x16da <L_5428+0x8ba>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:416
		FastLED.show();
		FrameDelay = 15;
  	}

  	//////////////////// STATUS 17 ///////////////////////
  	else if(Status == 17)  {
    171c:	81 31       	cpi	r24, 0x11	; 17
    171e:	71 f5       	brne	.+92     	; 0x177c <L_5428+0x95c>
    1720:	e2 ec       	ldi	r30, 0xC2	; 194
    1722:	f0 e0       	ldi	r31, 0x00	; 0
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:417
		for (iLed=0; 			iLed<NUM_LEDS; 		iLed++)	{ Vect[iLed] = 0; }
    1724:	85 e1       	ldi	r24, 0x15	; 21
    1726:	81 50       	subi	r24, 0x01	; 1
    1728:	11 f0       	breq	.+4      	; 0x172e <L_5428+0x90e>
    172a:	11 92       	st	Z+, r1
    172c:	fc cf       	rjmp	.-8      	; 0x1726 <L_5428+0x906>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:418
		for (iLed=0; 			iLed<NUM_LEDS/4; 	iLed++) { Vect[iLed] = 255; }
    172e:	8f ef       	ldi	r24, 0xFF	; 255
    1730:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <Vect>
    1734:	80 93 c3 00 	sts	0x00C3, r24	; 0x8000c3 <Vect+0x1>
    1738:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <Vect+0x2>
    173c:	80 93 c5 00 	sts	0x00C5, r24	; 0x8000c5 <Vect+0x3>
    1740:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <Vect+0x4>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:419
		for (iLed=NUM_LEDS/2; 	iLed<NUM_LEDS*3/4;	iLed++) { Vect[iLed] = 255; }
    1744:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <Vect+0xa>
    1748:	80 93 cd 00 	sts	0x00CD, r24	; 0x8000cd <Vect+0xb>
    174c:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <Vect+0xc>
    1750:	80 93 cf 00 	sts	0x00CF, r24	; 0x8000cf <Vect+0xd>
    1754:	80 93 d0 00 	sts	0x00D0, r24	; 0x8000d0 <Vect+0xe>
    1758:	8f e0       	ldi	r24, 0x0F	; 15
    175a:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <iLed>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:420
		ShiftLed(GreenDD);
    175e:	81 e0       	ldi	r24, 0x01	; 1
    1760:	48 d9       	rcall	.-3440   	; 0x9f2 <ShiftLed(unsigned char)>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:421
		if(iFrame) {
    1762:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <iFrame>
    1766:	88 23       	and	r24, r24
    1768:	29 f0       	breq	.+10     	; 0x1774 <L_5428+0x954>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:422
			iFrame = 0;
    176a:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <iFrame>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:427
		}
		else{
			iFrame += NUM_LEDS/4;
		}
		FastLED.show();
    176e:	0b d5       	rcall	.+2582   	; 0x2186 <__TEXT_REGION_LENGTH__+0x186>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:428
		FrameDelay = 80;
    1770:	80 e5       	ldi	r24, 0x50	; 80
    1772:	d3 ca       	rjmp	.-2650   	; 0xd1a <main+0x1f2>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:425
		ShiftLed(GreenDD);
		if(iFrame) {
			iFrame = 0;
		}
		else{
			iFrame += NUM_LEDS/4;
    1774:	85 e0       	ldi	r24, 0x05	; 5
    1776:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <iFrame>
    177a:	f9 cf       	rjmp	.-14     	; 0x176e <L_5428+0x94e>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:431
		}
		FastLED.show();
		FrameDelay = 80;
  	}
  	//////////////////// STATUS 18 ///////////////////////
  	else if(Status == 18)  {
    177c:	82 31       	cpi	r24, 0x12	; 18
    177e:	e1 f4       	brne	.+56     	; 0x17b8 <L_5428+0x998>
    1780:	e2 ec       	ldi	r30, 0xC2	; 194
    1782:	f0 e0       	ldi	r31, 0x00	; 0
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:432
		for (iLed=0; iLed<NUM_LEDS; iLed++) { Vect[iLed] = 0; }
    1784:	85 e1       	ldi	r24, 0x15	; 21
    1786:	81 50       	subi	r24, 0x01	; 1
    1788:	11 f0       	breq	.+4      	; 0x178e <L_5428+0x96e>
    178a:	11 92       	st	Z+, r1
    178c:	fc cf       	rjmp	.-8      	; 0x1786 <L_5428+0x966>
    178e:	84 e1       	ldi	r24, 0x14	; 20
    1790:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <iLed>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:433
		Vect[0] = 255;
    1794:	8f ef       	ldi	r24, 0xFF	; 255
    1796:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <Vect>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:434
		Vect[1] = 255;
    179a:	80 93 c3 00 	sts	0x00C3, r24	; 0x8000c3 <Vect+0x1>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:435
		Vect[2] = 255;
    179e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <Vect+0x2>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:436
		Vect[3] = 255;
    17a2:	80 93 c5 00 	sts	0x00C5, r24	; 0x8000c5 <Vect+0x3>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:437
		Vect[NUM_LEDS/2] = 255;
    17a6:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <Vect+0xa>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:438
		Vect[NUM_LEDS/2 + 1] = 255;
    17aa:	80 93 cd 00 	sts	0x00CD, r24	; 0x8000cd <Vect+0xb>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:439
		Vect[NUM_LEDS/2 + 2] = 255;
    17ae:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <Vect+0xc>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:440
		Vect[NUM_LEDS/2 + 3] = 255;
    17b2:	80 93 cf 00 	sts	0x00CF, r24	; 0x8000cf <Vect+0xd>
    17b6:	3e cd       	rjmp	.-1412   	; 0x1234 <L_5428+0x414>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:448
		else                            { iFrame++; }
		FastLED.show();
		FrameDelay = 15;
  	}
  	//////////////////// STATUS 19 ///////////////////////
  	else if(Status == 19)  {
    17b8:	83 31       	cpi	r24, 0x13	; 19
    17ba:	69 f5       	brne	.+90     	; 0x1816 <L_5428+0x9f6>
    17bc:	e2 ec       	ldi	r30, 0xC2	; 194
    17be:	f0 e0       	ldi	r31, 0x00	; 0
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:449
		for (iLed=0; iLed<NUM_LEDS; iLed++) { Vect[iLed] = 0; }
    17c0:	85 e1       	ldi	r24, 0x15	; 21
    17c2:	81 50       	subi	r24, 0x01	; 1
    17c4:	11 f0       	breq	.+4      	; 0x17ca <L_5428+0x9aa>
    17c6:	11 92       	st	Z+, r1
    17c8:	fc cf       	rjmp	.-8      	; 0x17c2 <L_5428+0x9a2>
    17ca:	84 e1       	ldi	r24, 0x14	; 20
    17cc:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <iLed>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:450
		Vect[NUM_LEDS - 1] = 255;
    17d0:	8f ef       	ldi	r24, 0xFF	; 255
    17d2:	80 93 d5 00 	sts	0x00D5, r24	; 0x8000d5 <Vect+0x13>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:451
		Vect[NUM_LEDS - 2] = 255;
    17d6:	80 93 d4 00 	sts	0x00D4, r24	; 0x8000d4 <Vect+0x12>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:452
		Vect[NUM_LEDS - 3] = 255;
    17da:	80 93 d3 00 	sts	0x00D3, r24	; 0x8000d3 <Vect+0x11>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:453
		Vect[NUM_LEDS - 4] = 255;
    17de:	80 93 d2 00 	sts	0x00D2, r24	; 0x8000d2 <Vect+0x10>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:454
		ShiftLed(GreenDD);
    17e2:	81 e0       	ldi	r24, 0x01	; 1
    17e4:	06 d9       	rcall	.-3572   	; 0x9f2 <ShiftLed(unsigned char)>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:455
		if		(iFrame == NUM_LEDS - 4)	{ CountDir = CountDown;}
    17e6:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <iFrame>
    17ea:	80 31       	cpi	r24, 0x10	; 16
    17ec:	69 f4       	brne	.+26     	; 0x1808 <L_5428+0x9e8>
    17ee:	91 e0       	ldi	r25, 0x01	; 1
    17f0:	90 93 14 01 	sts	0x0114, r25	; 0x800114 <CountDir>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:457
		else if	(iFrame == 0)             	{ CountDir = CountUp;}
		if		(CountDir == CountUp)		{ iFrame ++;}
    17f4:	90 91 14 01 	lds	r25, 0x0114	; 0x800114 <CountDir>
    17f8:	91 11       	cpse	r25, r1
    17fa:	0b c0       	rjmp	.+22     	; 0x1812 <L_5428+0x9f2>
    17fc:	8f 5f       	subi	r24, 0xFF	; 255
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:458
		else								{ iFrame --;}
    17fe:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <iFrame>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:459
		FastLED.show();
    1802:	c1 d4       	rcall	.+2434   	; 0x2186 <__TEXT_REGION_LENGTH__+0x186>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:460
		FrameDelay = 8;
    1804:	88 e0       	ldi	r24, 0x08	; 8
    1806:	89 ca       	rjmp	.-2798   	; 0xd1a <main+0x1f2>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:456
		Vect[NUM_LEDS - 2] = 255;
		Vect[NUM_LEDS - 3] = 255;
		Vect[NUM_LEDS - 4] = 255;
		ShiftLed(GreenDD);
		if		(iFrame == NUM_LEDS - 4)	{ CountDir = CountDown;}
		else if	(iFrame == 0)             	{ CountDir = CountUp;}
    1808:	81 11       	cpse	r24, r1
    180a:	f4 cf       	rjmp	.-24     	; 0x17f4 <L_5428+0x9d4>
    180c:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <CountDir>
    1810:	f1 cf       	rjmp	.-30     	; 0x17f4 <L_5428+0x9d4>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:458
		if		(CountDir == CountUp)		{ iFrame ++;}
		else								{ iFrame --;}
    1812:	81 50       	subi	r24, 0x01	; 1
    1814:	f4 cf       	rjmp	.-24     	; 0x17fe <L_5428+0x9de>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:463
		FastLED.show();
		FrameDelay = 8;
  	}
  	//////////////////// STATUS 20 ///////////////////////
  	else if(Status == 20)  {
    1816:	84 31       	cpi	r24, 0x14	; 20
    1818:	c1 f5       	brne	.+112    	; 0x188a <L_5428+0xa6a>
    181a:	e2 ec       	ldi	r30, 0xC2	; 194
    181c:	f0 e0       	ldi	r31, 0x00	; 0
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:464
		for (iLed=0; iLed<NUM_LEDS; iLed++) { Vect[iLed] = 0; }
    181e:	85 e1       	ldi	r24, 0x15	; 21
    1820:	81 50       	subi	r24, 0x01	; 1
    1822:	11 f0       	breq	.+4      	; 0x1828 <L_5428+0xa08>
    1824:	11 92       	st	Z+, r1
    1826:	fc cf       	rjmp	.-8      	; 0x1820 <L_5428+0xa00>
    1828:	84 e1       	ldi	r24, 0x14	; 20
    182a:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <iLed>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:465
		Vect[NUM_LEDS - 1] = 255;
    182e:	8f ef       	ldi	r24, 0xFF	; 255
    1830:	80 93 d5 00 	sts	0x00D5, r24	; 0x8000d5 <Vect+0x13>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:466
		Vect[NUM_LEDS - 2] = 255;
    1834:	80 93 d4 00 	sts	0x00D4, r24	; 0x8000d4 <Vect+0x12>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:467
		Vect[NUM_LEDS - 3] = 255;
    1838:	80 93 d3 00 	sts	0x00D3, r24	; 0x8000d3 <Vect+0x11>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:468
		Vect[NUM_LEDS - 4] = 255;
    183c:	80 93 d2 00 	sts	0x00D2, r24	; 0x8000d2 <Vect+0x10>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:469
		ShiftLed(RedDD);
    1840:	80 e0       	ldi	r24, 0x00	; 0
    1842:	d7 d8       	rcall	.-3666   	; 0x9f2 <ShiftLed(unsigned char)>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:470
		if  (iFrame == NUM_LEDS - 1)    { 
    1844:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <iFrame>
    1848:	83 31       	cpi	r24, 0x13	; 19
    184a:	d9 f4       	brne	.+54     	; 0x1882 <L_5428+0xa62>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:471
			iFrame = 0;
    184c:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <iFrame>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:472
			if		(xFrame == 8)			{ CountDir = CountDown;}
    1850:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <xFrame>
    1854:	88 30       	cpi	r24, 0x08	; 8
    1856:	71 f4       	brne	.+28     	; 0x1874 <L_5428+0xa54>
    1858:	91 e0       	ldi	r25, 0x01	; 1
    185a:	90 93 14 01 	sts	0x0114, r25	; 0x800114 <CountDir>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:474
			else if	(xFrame == 1)       	{ CountDir = CountUp;}
			if		(CountDir == CountUp)	{ xFrame++;}
    185e:	90 91 14 01 	lds	r25, 0x0114	; 0x800114 <CountDir>
    1862:	91 11       	cpse	r25, r1
    1864:	0c c0       	rjmp	.+24     	; 0x187e <L_5428+0xa5e>
    1866:	8f 5f       	subi	r24, 0xFF	; 255
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:475
			else							{ xFrame--;}
    1868:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <xFrame>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:480
		}
		else                            { 
			iFrame++; 
		}
		FastLED.show();
    186c:	8c d4       	rcall	.+2328   	; 0x2186 <__TEXT_REGION_LENGTH__+0x186>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:481
		FrameDelay = xFrame;
    186e:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <xFrame>
    1872:	53 ca       	rjmp	.-2906   	; 0xd1a <main+0x1f2>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:473
		Vect[NUM_LEDS - 4] = 255;
		ShiftLed(RedDD);
		if  (iFrame == NUM_LEDS - 1)    { 
			iFrame = 0;
			if		(xFrame == 8)			{ CountDir = CountDown;}
			else if	(xFrame == 1)       	{ CountDir = CountUp;}
    1874:	81 30       	cpi	r24, 0x01	; 1
    1876:	99 f7       	brne	.-26     	; 0x185e <L_5428+0xa3e>
    1878:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <CountDir>
    187c:	f0 cf       	rjmp	.-32     	; 0x185e <L_5428+0xa3e>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:475
			if		(CountDir == CountUp)	{ xFrame++;}
			else							{ xFrame--;}
    187e:	81 50       	subi	r24, 0x01	; 1
    1880:	f3 cf       	rjmp	.-26     	; 0x1868 <L_5428+0xa48>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:478
		}
		else                            { 
			iFrame++; 
    1882:	8f 5f       	subi	r24, 0xFF	; 255
    1884:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <iFrame>
    1888:	f1 cf       	rjmp	.-30     	; 0x186c <L_5428+0xa4c>
C:\Users\user\Desktop\LedDriver\LedDriver2/LedDriver2.ino:485
		FastLED.show();
		FrameDelay = xFrame;
  	}
	//////////////////// STATUS OTHERS ///////////////////////
	else	{
		Status = 0;
    188a:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
    188e:	47 ca       	rjmp	.-2930   	; 0xd1e <main+0x1f6>

00001890 <_GLOBAL__sub_I_pSmartMatrix>:
_GLOBAL__sub_I_pSmartMatrix():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:36
// uint32_t CRGB::Squant = ((uint32_t)((__TIME__[4]-'0') * 28))<<16 | ((__TIME__[6]-'0')*50)<<8 | ((__TIME__[7]-'0')*28);

CFastLED::CFastLED() {
	// clear out the array of led controllers
	// m_nControllers = 0;
	m_Scale = 255;
    1890:	e9 e2       	ldi	r30, 0x29	; 41
    1892:	f1 e0       	ldi	r31, 0x01	; 1
    1894:	8f ef       	ldi	r24, 0xFF	; 255
    1896:	80 83       	st	Z, r24
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:37
	m_nFPS = 0;
    1898:	12 82       	std	Z+2, r1	; 0x02
    189a:	11 82       	std	Z+1, r1	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:38
	m_pPowerFunc = NULL;
    189c:	14 86       	std	Z+12, r1	; 0x0c
    189e:	13 86       	std	Z+11, r1	; 0x0b
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:39
	m_nPowerData = 0xFFFFFFFF;
    18a0:	8f ef       	ldi	r24, 0xFF	; 255
    18a2:	9f ef       	ldi	r25, 0xFF	; 255
    18a4:	dc 01       	movw	r26, r24
    18a6:	87 83       	std	Z+7, r24	; 0x07
    18a8:	90 87       	std	Z+8, r25	; 0x08
    18aa:	a1 87       	std	Z+9, r26	; 0x09
    18ac:	b2 87       	std	Z+10, r27	; 0x0a
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:254
}

/// Called at program exit when run in a desktop environment. 
/// Extra C definition that some environments may need. 
/// @returns 0 to indicate success
extern "C" int atexit(void (* /*func*/ )()) { return 0; }
    18ae:	08 95       	ret

000018b0 <random_r>:
random_r():
    18b0:	8f 92       	push	r8
    18b2:	9f 92       	push	r9
    18b4:	af 92       	push	r10
    18b6:	bf 92       	push	r11
    18b8:	cf 92       	push	r12
    18ba:	df 92       	push	r13
    18bc:	ef 92       	push	r14
    18be:	ff 92       	push	r15
    18c0:	cf 93       	push	r28
    18c2:	df 93       	push	r29
    18c4:	ec 01       	movw	r28, r24
    18c6:	68 81       	ld	r22, Y
    18c8:	79 81       	ldd	r23, Y+1	; 0x01
    18ca:	8a 81       	ldd	r24, Y+2	; 0x02
    18cc:	9b 81       	ldd	r25, Y+3	; 0x03
    18ce:	61 15       	cp	r22, r1
    18d0:	71 05       	cpc	r23, r1
    18d2:	81 05       	cpc	r24, r1
    18d4:	91 05       	cpc	r25, r1
    18d6:	21 f4       	brne	.+8      	; 0x18e0 <random_r+0x30>
    18d8:	64 e2       	ldi	r22, 0x24	; 36
    18da:	79 ed       	ldi	r23, 0xD9	; 217
    18dc:	8b e5       	ldi	r24, 0x5B	; 91
    18de:	97 e0       	ldi	r25, 0x07	; 7
    18e0:	2d e1       	ldi	r18, 0x1D	; 29
    18e2:	33 ef       	ldi	r19, 0xF3	; 243
    18e4:	41 e0       	ldi	r20, 0x01	; 1
    18e6:	50 e0       	ldi	r21, 0x00	; 0
    18e8:	81 d0       	rcall	.+258    	; 0x19ec <__divmodsi4>
    18ea:	49 01       	movw	r8, r18
    18ec:	5a 01       	movw	r10, r20
    18ee:	9b 01       	movw	r18, r22
    18f0:	ac 01       	movw	r20, r24
    18f2:	a7 ea       	ldi	r26, 0xA7	; 167
    18f4:	b1 e4       	ldi	r27, 0x41	; 65
    18f6:	96 d0       	rcall	.+300    	; 0x1a24 <__muluhisi3>
    18f8:	6b 01       	movw	r12, r22
    18fa:	7c 01       	movw	r14, r24
    18fc:	ac ee       	ldi	r26, 0xEC	; 236
    18fe:	b4 ef       	ldi	r27, 0xF4	; 244
    1900:	a5 01       	movw	r20, r10
    1902:	94 01       	movw	r18, r8
    1904:	9b d0       	rcall	.+310    	; 0x1a3c <__mulohisi3>
    1906:	c6 0e       	add	r12, r22
    1908:	d7 1e       	adc	r13, r23
    190a:	e8 1e       	adc	r14, r24
    190c:	f9 1e       	adc	r15, r25
    190e:	f7 fe       	sbrs	r15, 7
    1910:	06 c0       	rjmp	.+12     	; 0x191e <random_r+0x6e>
    1912:	81 e0       	ldi	r24, 0x01	; 1
    1914:	c8 1a       	sub	r12, r24
    1916:	d1 08       	sbc	r13, r1
    1918:	e1 08       	sbc	r14, r1
    191a:	80 e8       	ldi	r24, 0x80	; 128
    191c:	f8 0a       	sbc	r15, r24
    191e:	c8 82       	st	Y, r12
    1920:	d9 82       	std	Y+1, r13	; 0x01
    1922:	ea 82       	std	Y+2, r14	; 0x02
    1924:	fb 82       	std	Y+3, r15	; 0x03
    1926:	c7 01       	movw	r24, r14
    1928:	b6 01       	movw	r22, r12
    192a:	9f 77       	andi	r25, 0x7F	; 127
    192c:	df 91       	pop	r29
    192e:	cf 91       	pop	r28
    1930:	ff 90       	pop	r15
    1932:	ef 90       	pop	r14
    1934:	df 90       	pop	r13
    1936:	cf 90       	pop	r12
    1938:	bf 90       	pop	r11
    193a:	af 90       	pop	r10
    193c:	9f 90       	pop	r9
    193e:	8f 90       	pop	r8
    1940:	08 95       	ret

00001942 <random>:
random():
    1942:	8f 92       	push	r8
    1944:	9f 92       	push	r9
    1946:	af 92       	push	r10
    1948:	bf 92       	push	r11
    194a:	cf 92       	push	r12
    194c:	df 92       	push	r13
    194e:	ef 92       	push	r14
    1950:	ff 92       	push	r15
    1952:	60 91 61 00 	lds	r22, 0x0061	; 0x800061 <next>
    1956:	70 91 62 00 	lds	r23, 0x0062	; 0x800062 <next+0x1>
    195a:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <next+0x2>
    195e:	90 91 64 00 	lds	r25, 0x0064	; 0x800064 <next+0x3>
    1962:	61 15       	cp	r22, r1
    1964:	71 05       	cpc	r23, r1
    1966:	81 05       	cpc	r24, r1
    1968:	91 05       	cpc	r25, r1
    196a:	21 f4       	brne	.+8      	; 0x1974 <random+0x32>
    196c:	64 e2       	ldi	r22, 0x24	; 36
    196e:	79 ed       	ldi	r23, 0xD9	; 217
    1970:	8b e5       	ldi	r24, 0x5B	; 91
    1972:	97 e0       	ldi	r25, 0x07	; 7
    1974:	2d e1       	ldi	r18, 0x1D	; 29
    1976:	33 ef       	ldi	r19, 0xF3	; 243
    1978:	41 e0       	ldi	r20, 0x01	; 1
    197a:	50 e0       	ldi	r21, 0x00	; 0
    197c:	37 d0       	rcall	.+110    	; 0x19ec <__divmodsi4>
    197e:	49 01       	movw	r8, r18
    1980:	5a 01       	movw	r10, r20
    1982:	9b 01       	movw	r18, r22
    1984:	ac 01       	movw	r20, r24
    1986:	a7 ea       	ldi	r26, 0xA7	; 167
    1988:	b1 e4       	ldi	r27, 0x41	; 65
    198a:	4c d0       	rcall	.+152    	; 0x1a24 <__muluhisi3>
    198c:	6b 01       	movw	r12, r22
    198e:	7c 01       	movw	r14, r24
    1990:	ac ee       	ldi	r26, 0xEC	; 236
    1992:	b4 ef       	ldi	r27, 0xF4	; 244
    1994:	a5 01       	movw	r20, r10
    1996:	94 01       	movw	r18, r8
    1998:	51 d0       	rcall	.+162    	; 0x1a3c <__mulohisi3>
    199a:	c6 0e       	add	r12, r22
    199c:	d7 1e       	adc	r13, r23
    199e:	e8 1e       	adc	r14, r24
    19a0:	f9 1e       	adc	r15, r25
    19a2:	f7 fe       	sbrs	r15, 7
    19a4:	06 c0       	rjmp	.+12     	; 0x19b2 <random+0x70>
    19a6:	81 e0       	ldi	r24, 0x01	; 1
    19a8:	c8 1a       	sub	r12, r24
    19aa:	d1 08       	sbc	r13, r1
    19ac:	e1 08       	sbc	r14, r1
    19ae:	80 e8       	ldi	r24, 0x80	; 128
    19b0:	f8 0a       	sbc	r15, r24
    19b2:	c0 92 61 00 	sts	0x0061, r12	; 0x800061 <next>
    19b6:	d0 92 62 00 	sts	0x0062, r13	; 0x800062 <next+0x1>
    19ba:	e0 92 63 00 	sts	0x0063, r14	; 0x800063 <next+0x2>
    19be:	f0 92 64 00 	sts	0x0064, r15	; 0x800064 <next+0x3>
    19c2:	c7 01       	movw	r24, r14
    19c4:	b6 01       	movw	r22, r12
    19c6:	9f 77       	andi	r25, 0x7F	; 127
    19c8:	ff 90       	pop	r15
    19ca:	ef 90       	pop	r14
    19cc:	df 90       	pop	r13
    19ce:	cf 90       	pop	r12
    19d0:	bf 90       	pop	r11
    19d2:	af 90       	pop	r10
    19d4:	9f 90       	pop	r9
    19d6:	8f 90       	pop	r8
    19d8:	08 95       	ret

000019da <srandom>:
srandom():
    19da:	60 93 61 00 	sts	0x0061, r22	; 0x800061 <next>
    19de:	70 93 62 00 	sts	0x0062, r23	; 0x800062 <next+0x1>
    19e2:	80 93 63 00 	sts	0x0063, r24	; 0x800063 <next+0x2>
    19e6:	90 93 64 00 	sts	0x0064, r25	; 0x800064 <next+0x3>
    19ea:	08 95       	ret

000019ec <__divmodsi4>:
__divmodsi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1686
    19ec:	05 2e       	mov	r0, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1687
    19ee:	97 fb       	bst	r25, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1688
    19f0:	16 f4       	brtc	.+4      	; 0x19f6 <__divmodsi4+0xa>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1689
    19f2:	00 94       	com	r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1690
    19f4:	0f d0       	rcall	.+30     	; 0x1a14 <__negsi2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1692
    19f6:	57 fd       	sbrc	r21, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1693
    19f8:	05 d0       	rcall	.+10     	; 0x1a04 <__divmodsi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1694
    19fa:	24 d0       	rcall	.+72     	; 0x1a44 <__udivmodsi4>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1695
    19fc:	07 fc       	sbrc	r0, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1696
    19fe:	02 d0       	rcall	.+4      	; 0x1a04 <__divmodsi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1697
    1a00:	46 f4       	brtc	.+16     	; 0x1a12 <__divmodsi4_exit>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1698
    1a02:	08 c0       	rjmp	.+16     	; 0x1a14 <__negsi2>

00001a04 <__divmodsi4_neg2>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1701
    1a04:	50 95       	com	r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1702
    1a06:	40 95       	com	r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1703
    1a08:	30 95       	com	r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1704
    1a0a:	21 95       	neg	r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1705
    1a0c:	3f 4f       	sbci	r19, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1706
    1a0e:	4f 4f       	sbci	r20, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1707
    1a10:	5f 4f       	sbci	r21, 0xFF	; 255

00001a12 <__divmodsi4_exit>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1709
    1a12:	08 95       	ret

00001a14 <__negsi2>:
__negsi2():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1718
    1a14:	90 95       	com	r25
    1a16:	80 95       	com	r24
    1a18:	70 95       	com	r23
    1a1a:	61 95       	neg	r22
    1a1c:	7f 4f       	sbci	r23, 0xFF	; 255
    1a1e:	8f 4f       	sbci	r24, 0xFF	; 255
    1a20:	9f 4f       	sbci	r25, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1719
    1a22:	08 95       	ret

00001a24 <__muluhisi3>:
__muluhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:626
    1a24:	31 d0       	rcall	.+98     	; 0x1a88 <__umulhisi3>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:627
    1a26:	a5 9f       	mul	r26, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:628
    1a28:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:629
    1a2a:	b4 9f       	mul	r27, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:630
    1a2c:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:631
    1a2e:	a4 9f       	mul	r26, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:632
    1a30:	80 0d       	add	r24, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:633
    1a32:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:634
    1a34:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:635
    1a36:	08 95       	ret

00001a38 <__mulshisi3>:
__mulshisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:603
    1a38:	b7 ff       	sbrs	r27, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:605
    1a3a:	f4 cf       	rjmp	.-24     	; 0x1a24 <__muluhisi3>

00001a3c <__mulohisi3>:
__mulohisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:613
    1a3c:	f3 df       	rcall	.-26     	; 0x1a24 <__muluhisi3>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:615
    1a3e:	82 1b       	sub	r24, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:616
    1a40:	93 0b       	sbc	r25, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:617
    1a42:	08 95       	ret

00001a44 <__udivmodsi4>:
__udivmodsi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1638
    1a44:	a1 e2       	ldi	r26, 0x21	; 33
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1639
    1a46:	1a 2e       	mov	r1, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1640
    1a48:	aa 1b       	sub	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1641
    1a4a:	bb 1b       	sub	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1642
    1a4c:	fd 01       	movw	r30, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1644
    1a4e:	0d c0       	rjmp	.+26     	; 0x1a6a <__udivmodsi4_ep>

00001a50 <__udivmodsi4_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1646
    1a50:	aa 1f       	adc	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1647
    1a52:	bb 1f       	adc	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1648
    1a54:	ee 1f       	adc	r30, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1649
    1a56:	ff 1f       	adc	r31, r31
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1650
    1a58:	a2 17       	cp	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1651
    1a5a:	b3 07       	cpc	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1652
    1a5c:	e4 07       	cpc	r30, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1653
    1a5e:	f5 07       	cpc	r31, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1654
    1a60:	20 f0       	brcs	.+8      	; 0x1a6a <__udivmodsi4_ep>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1655
    1a62:	a2 1b       	sub	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1656
    1a64:	b3 0b       	sbc	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1657
    1a66:	e4 0b       	sbc	r30, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1658
    1a68:	f5 0b       	sbc	r31, r21

00001a6a <__udivmodsi4_ep>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1660
    1a6a:	66 1f       	adc	r22, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1661
    1a6c:	77 1f       	adc	r23, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1662
    1a6e:	88 1f       	adc	r24, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1663
    1a70:	99 1f       	adc	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1664
    1a72:	1a 94       	dec	r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1665
    1a74:	69 f7       	brne	.-38     	; 0x1a50 <__udivmodsi4_loop>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1667
    1a76:	60 95       	com	r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1668
    1a78:	70 95       	com	r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1669
    1a7a:	80 95       	com	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1670
    1a7c:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1672
    1a7e:	9b 01       	movw	r18, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1674
    1a80:	ac 01       	movw	r20, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1676
    1a82:	bd 01       	movw	r22, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1678
    1a84:	cf 01       	movw	r24, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1680
    1a86:	08 95       	ret

00001a88 <__umulhisi3>:
__umulhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:564
    1a88:	a2 9f       	mul	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:565
    1a8a:	b0 01       	movw	r22, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:566
    1a8c:	b3 9f       	mul	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:567
    1a8e:	c0 01       	movw	r24, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:568
    1a90:	a3 9f       	mul	r26, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:578
    1a92:	01 d0       	rcall	.+2      	; 0x1a96 <__umulhisi3+0xe>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:580
    1a94:	b2 9f       	mul	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:581
    1a96:	70 0d       	add	r23, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:582
    1a98:	81 1d       	adc	r24, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:583
    1a9a:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:584
    1a9c:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:585
    1a9e:	08 95       	ret

00001aa0 <__mulsi3>:
__mulsi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:648
    1aa0:	db 01       	movw	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:649
    1aa2:	8f 93       	push	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:650
    1aa4:	9f 93       	push	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:651
    1aa6:	be df       	rcall	.-132    	; 0x1a24 <__muluhisi3>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:652
    1aa8:	bf 91       	pop	r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:653
    1aaa:	af 91       	pop	r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:655
    1aac:	a2 9f       	mul	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:656
    1aae:	80 0d       	add	r24, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:657
    1ab0:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:658
    1ab2:	a3 9f       	mul	r26, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:659
    1ab4:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:660
    1ab6:	b2 9f       	mul	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:661
    1ab8:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:662
    1aba:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:663
    1abc:	08 95       	ret

00001abe <__divmodhi4>:
__divmodhi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1440
    1abe:	97 fb       	bst	r25, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1441
    1ac0:	07 2e       	mov	r0, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1442
    1ac2:	16 f4       	brtc	.+4      	; 0x1ac8 <__divmodhi4+0xa>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1443
    1ac4:	00 94       	com	r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1444
    1ac6:	06 d0       	rcall	.+12     	; 0x1ad4 <__divmodhi4_neg1>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1446
    1ac8:	77 fd       	sbrc	r23, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1447
    1aca:	08 d0       	rcall	.+16     	; 0x1adc <__divmodhi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1448
    1acc:	11 d0       	rcall	.+34     	; 0x1af0 <__udivmodhi4>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1449
    1ace:	07 fc       	sbrc	r0, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1450
    1ad0:	05 d0       	rcall	.+10     	; 0x1adc <__divmodhi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1451
    1ad2:	3e f4       	brtc	.+14     	; 0x1ae2 <__divmodhi4_exit>

00001ad4 <__divmodhi4_neg1>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1454
    1ad4:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1455
    1ad6:	81 95       	neg	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1456
    1ad8:	9f 4f       	sbci	r25, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1457
    1ada:	08 95       	ret

00001adc <__divmodhi4_neg2>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1460
    1adc:	70 95       	com	r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1461
    1ade:	61 95       	neg	r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1462
    1ae0:	7f 4f       	sbci	r23, 0xFF	; 255

00001ae2 <__divmodhi4_exit>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1464
    1ae2:	08 95       	ret

00001ae4 <__usmulhisi3>:
__usmulhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:545
    1ae4:	d1 df       	rcall	.-94     	; 0x1a88 <__umulhisi3>

00001ae6 <__usmulhisi3_tail>:
__usmulhisi3_tail():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:551
    1ae6:	b7 ff       	sbrs	r27, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:552
    1ae8:	08 95       	ret
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:553
    1aea:	82 1b       	sub	r24, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:554
    1aec:	93 0b       	sbc	r25, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:555
    1aee:	08 95       	ret

00001af0 <__udivmodhi4>:
__udivmodhi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1408
    1af0:	aa 1b       	sub	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1409
    1af2:	bb 1b       	sub	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1410
    1af4:	51 e1       	ldi	r21, 0x11	; 17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1411
    1af6:	07 c0       	rjmp	.+14     	; 0x1b06 <__udivmodhi4_ep>

00001af8 <__udivmodhi4_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1413
    1af8:	aa 1f       	adc	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1414
    1afa:	bb 1f       	adc	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1415
    1afc:	a6 17       	cp	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1416
    1afe:	b7 07       	cpc	r27, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1417
    1b00:	10 f0       	brcs	.+4      	; 0x1b06 <__udivmodhi4_ep>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1418
    1b02:	a6 1b       	sub	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1419
    1b04:	b7 0b       	sbc	r27, r23

00001b06 <__udivmodhi4_ep>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1421
    1b06:	88 1f       	adc	r24, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1422
    1b08:	99 1f       	adc	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1423
    1b0a:	5a 95       	dec	r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1424
    1b0c:	a9 f7       	brne	.-22     	; 0x1af8 <__udivmodhi4_loop>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1425
    1b0e:	80 95       	com	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1426
    1b10:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1428
    1b12:	bc 01       	movw	r22, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1430
    1b14:	cd 01       	movw	r24, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1432
    1b16:	08 95       	ret

00001b18 <__tablejump2__>:
__tablejump2__():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2296
    1b18:	ee 0f       	add	r30, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2297
    1b1a:	ff 1f       	adc	r31, r31
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2328
    1b1c:	05 90       	lpm	r0, Z+
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2329
    1b1e:	f4 91       	lpm	r31, Z
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2330
    1b20:	e0 2d       	mov	r30, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2331
    1b22:	09 94       	ijmp

00001b24 <abort>:
abort():
    1b24:	81 e0       	ldi	r24, 0x01	; 1
    1b26:	90 e0       	ldi	r25, 0x00	; 0
    1b28:	f8 94       	cli
    1b2a:	00 c0       	rjmp	.+0      	; 0x1b2c <_exit>

00001b2c <_exit>:
exit():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2278
    1b2c:	f8 94       	cli

00001b2e <__stop_program>:
__stop_program():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2280
    1b2e:	ff cf       	rjmp	.-2      	; 0x1b2e <__stop_program>
