
C:\Users\user\AppData\Local\Temp\arduino_build_764420/LedDriver2.ino.elf:     file format elf32-avr


Disassembly of section .text:

00000000 <__vectors>:
__vectors():
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	69 c0       	rjmp	.+210    	; 0xd6 <__bad_interrupt>
       4:	68 c0       	rjmp	.+208    	; 0xd6 <__bad_interrupt>
       6:	67 c0       	rjmp	.+206    	; 0xd6 <__bad_interrupt>
       8:	66 c0       	rjmp	.+204    	; 0xd6 <__bad_interrupt>
       a:	65 c0       	rjmp	.+202    	; 0xd6 <__bad_interrupt>
       c:	64 c0       	rjmp	.+200    	; 0xd6 <__bad_interrupt>
       e:	63 c0       	rjmp	.+198    	; 0xd6 <__bad_interrupt>
      10:	62 c0       	rjmp	.+196    	; 0xd6 <__bad_interrupt>
      12:	0d c4       	rjmp	.+2074   	; 0x82e <__vector_9>
      14:	60 c0       	rjmp	.+192    	; 0xd6 <__bad_interrupt>
      16:	5f c0       	rjmp	.+190    	; 0xd6 <__bad_interrupt>
      18:	5e c0       	rjmp	.+188    	; 0xd6 <__bad_interrupt>
      1a:	5d c0       	rjmp	.+186    	; 0xd6 <__bad_interrupt>
      1c:	5c c0       	rjmp	.+184    	; 0xd6 <__bad_interrupt>
      1e:	5b c0       	rjmp	.+182    	; 0xd6 <__bad_interrupt>
      20:	5a c0       	rjmp	.+180    	; 0xd6 <__bad_interrupt>
      22:	59 c0       	rjmp	.+178    	; 0xd6 <__bad_interrupt>
      24:	58 c0       	rjmp	.+176    	; 0xd6 <__bad_interrupt>

00000026 <__trampolines_end>:
__trampolines_start():
      26:	00 00       	nop
      28:	00 00       	nop
      2a:	38 00       	.word	0x0038	; ????
      2c:	35 00       	.word	0x0035	; ????
      2e:	32 00       	.word	0x0032	; ????

00000030 <port_to_mode_PGM>:
      30:	00 00 00 00 37 00 34 00 31 00                       ....7.4.1.

0000003a <port_to_input_PGM>:
      3a:	00 00 00 00 36 00 33 00 30 00                       ....6.3.0.

00000044 <digital_pin_to_port_PGM>:
      44:	04 04 04 04 04 04 04 04 02 02 02 02 02 02 03 03     ................
      54:	03 03 03 03 02 02 03                                .......

0000005b <digital_pin_to_bit_mask_PGM>:
      5b:	01 02 04 08 10 20 40 80 01 02 04 08 10 20 01 02     ..... @...... ..
      6b:	04 08 10 20 40 80 40                                ... @.@

00000072 <digital_pin_to_timer_PGM>:
	...
      7a:	00 04 05 07 00 00 00 00 00 00 00 00 00 00 00 00     ................

0000008a <__ctors_start>:
__ctors_start():
      8a:	12 0c       	add	r1, r2

0000008c <__ctors_end>:
__dtors_end():
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf e5       	ldi	r28, 0x5F	; 95
      92:	d4 e0       	ldi	r29, 0x04	; 4
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
__do_copy_data():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2409
      98:	10 e0       	ldi	r17, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2410
      9a:	a0 e6       	ldi	r26, 0x60	; 96
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2411
      9c:	b0 e0       	ldi	r27, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2412
      9e:	e4 ec       	ldi	r30, 0xC4	; 196
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2413
      a0:	fa e1       	ldi	r31, 0x1A	; 26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2414
      a2:	02 c0       	rjmp	.+4      	; 0xa8 <__do_copy_data+0x10>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2417
      a4:	05 90       	lpm	r0, Z+
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2422
      a6:	0d 92       	st	X+, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2424
      a8:	a6 3a       	cpi	r26, 0xA6	; 166
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2425
      aa:	b1 07       	cpc	r27, r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2426
      ac:	d9 f7       	brne	.-10     	; 0xa4 <__do_copy_data+0xc>

000000ae <__do_clear_bss>:
__do_clear_bss():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2441
      ae:	21 e0       	ldi	r18, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2442
      b0:	a6 ea       	ldi	r26, 0xA6	; 166
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2443
      b2:	b0 e0       	ldi	r27, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2444
      b4:	01 c0       	rjmp	.+2      	; 0xb8 <.do_clear_bss_start>

000000b6 <.do_clear_bss_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2446
      b6:	1d 92       	st	X+, r1

000000b8 <.do_clear_bss_start>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2448
      b8:	a1 36       	cpi	r26, 0x61	; 97
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2449
      ba:	b2 07       	cpc	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2450
      bc:	e1 f7       	brne	.-8      	; 0xb6 <.do_clear_bss_loop>

000000be <__do_global_ctors>:
__do_global_ctors():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2466
      be:	10 e0       	ldi	r17, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2467
      c0:	c6 e4       	ldi	r28, 0x46	; 70
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2468
      c2:	d0 e0       	ldi	r29, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2472
      c4:	03 c0       	rjmp	.+6      	; 0xcc <__do_global_ctors+0xe>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2474
      c6:	21 97       	sbiw	r28, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2480
      c8:	fe 01       	movw	r30, r28
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2481
      ca:	f0 dc       	rcall	.-1568   	; 0xfffffaac <__eeprom_end+0xff7efaac>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2483
      cc:	c5 34       	cpi	r28, 0x45	; 69
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2484
      ce:	d1 07       	cpc	r29, r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2489
      d0:	d1 f7       	brne	.-12     	; 0xc6 <__do_global_ctors+0x8>
      d2:	f7 d3       	rcall	.+2030   	; 0x8c2 <main>
      d4:	f5 cc       	rjmp	.-1558   	; 0xfffffac0 <__eeprom_end+0xff7efac0>

000000d6 <__bad_interrupt>:
__vector_1():
      d6:	94 cf       	rjmp	.-216    	; 0x0 <__vectors>

000000d8 <digitalRead.constprop.10>:
digitalRead.constprop.10():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:216
  SREG = oldSREG;
}

int digitalRead(uint8_t pin)
{
  uint8_t timer = digitalPinToTimer(pin);
      d8:	e0 e8       	ldi	r30, 0x80	; 128
      da:	f0 e0       	ldi	r31, 0x00	; 0
      dc:	84 91       	lpm	r24, Z
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:217
  uint8_t bit = digitalPinToBitMask(pin);
      de:	e9 e6       	ldi	r30, 0x69	; 105
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	94 91       	lpm	r25, Z
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:218
  uint8_t port = digitalPinToPort(pin);
      e4:	e2 e5       	ldi	r30, 0x52	; 82
      e6:	f0 e0       	ldi	r31, 0x00	; 0
      e8:	e4 91       	lpm	r30, Z
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:220

  if (port == NOT_A_PIN) return LOW;
      ea:	ee 23       	and	r30, r30
      ec:	01 f1       	breq	.+64     	; 0x12e <digitalRead.constprop.10+0x56>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:224

  // If the pin that support PWM output, we need to turn it off
  // before getting a digital reading.
  if (timer != NOT_ON_TIMER) turnOffPWM(timer);
      ee:	88 23       	and	r24, r24
      f0:	49 f0       	breq	.+18     	; 0x104 <digitalRead.constprop.10+0x2c>
turnOffPWM():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:77
//
//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));
//static inline void turnOffPWM(uint8_t timer)
static void turnOffPWM(uint8_t timer)
{
  switch (timer)
      f2:	85 30       	cpi	r24, 0x05	; 5
      f4:	a9 f0       	breq	.+42     	; 0x120 <digitalRead.constprop.10+0x48>
      f6:	87 30       	cpi	r24, 0x07	; 7
      f8:	b1 f0       	breq	.+44     	; 0x126 <digitalRead.constprop.10+0x4e>
      fa:	84 30       	cpi	r24, 0x04	; 4
      fc:	19 f4       	brne	.+6      	; 0x104 <digitalRead.constprop.10+0x2c>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:82
  {
    // Timer1
    #if defined(TCCR1A) && defined(COM1A1)
      case TIMER1A:
        TCCR1A &= ~_BV(COM1A1);
      fe:	8f b5       	in	r24, 0x2f	; 47
     100:	8f 77       	andi	r24, 0x7F	; 127
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:87
        break;
    #endif
    #if defined(TCCR1A) && defined(COM1B1)
      case TIMER1B:
        TCCR1A &= ~_BV(COM1B1);
     102:	8f bd       	out	0x2f, r24	; 47
digitalRead.constprop.10():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:226

  // If the pin that support PWM output, we need to turn it off
  // before getting a digital reading.
  if (timer != NOT_ON_TIMER) turnOffPWM(timer);

  if (*portInputRegister(port) & bit) return HIGH;
     104:	f0 e0       	ldi	r31, 0x00	; 0
     106:	ee 0f       	add	r30, r30
     108:	ff 1f       	adc	r31, r31
     10a:	e6 5c       	subi	r30, 0xC6	; 198
     10c:	ff 4f       	sbci	r31, 0xFF	; 255
     10e:	a5 91       	lpm	r26, Z+
     110:	b4 91       	lpm	r27, Z
     112:	ec 91       	ld	r30, X
     114:	e9 23       	and	r30, r25
     116:	81 e0       	ldi	r24, 0x01	; 1
     118:	90 e0       	ldi	r25, 0x00	; 0
     11a:	59 f4       	brne	.+22     	; 0x132 <digitalRead.constprop.10+0x5a>
     11c:	80 e0       	ldi	r24, 0x00	; 0
     11e:	08 95       	ret
turnOffPWM():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:87
        TCCR1A &= ~_BV(COM1A1);
        break;
    #endif
    #if defined(TCCR1A) && defined(COM1B1)
      case TIMER1B:
        TCCR1A &= ~_BV(COM1B1);
     120:	8f b5       	in	r24, 0x2f	; 47
     122:	8f 7d       	andi	r24, 0xDF	; 223
     124:	ee cf       	rjmp	.-36     	; 0x102 <digitalRead.constprop.10+0x2a>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:99
    #endif
    
    // Timer2
    #if defined(TCCR2) && defined(COM21)
      case TIMER2:
        TCCR2 &= ~_BV(COM21);
     126:	85 b5       	in	r24, 0x25	; 37
     128:	8f 7d       	andi	r24, 0xDF	; 223
     12a:	85 bd       	out	0x25, r24	; 37
     12c:	eb cf       	rjmp	.-42     	; 0x104 <digitalRead.constprop.10+0x2c>
digitalRead.constprop.10():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:220
{
  uint8_t timer = digitalPinToTimer(pin);
  uint8_t bit = digitalPinToBitMask(pin);
  uint8_t port = digitalPinToPort(pin);

  if (port == NOT_A_PIN) return LOW;
     12e:	80 e0       	ldi	r24, 0x00	; 0
     130:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:228
  // before getting a digital reading.
  if (timer != NOT_ON_TIMER) turnOffPWM(timer);

  if (*portInputRegister(port) & bit) return HIGH;
  return LOW;
}
     132:	08 95       	ret

00000134 <ClocklessController<(unsigned char)11, 2, 5, 3, (EOrder)66, 0, false, 10>::getMaxRefreshRate() const>:
_ZNK19ClocklessControllerILh11ELi2ELi5ELi3EL6EOrder66ELi0ELb0ELi10EE17getMaxRefreshRateEv():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:117
public:
	virtual void init() {
		FastPin<DATA_PIN>::setOutput();
	}

	virtual uint16_t getMaxRefreshRate() const { return 400; }
     134:	80 e9       	ldi	r24, 0x90	; 144
     136:	91 e0       	ldi	r25, 0x01	; 1
     138:	08 95       	ret

0000013a <micros>:
micros():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:237
  unsigned char f; // temporary storage for millis fraction counter
  unsigned char q = 0; // record whether an overflow is flagged
#endif
  // t will be the number where the timer0 counter stopped
  uint8_t t;
  uint8_t oldSREG = SREG;
     13a:	3f b7       	in	r19, 0x3f	; 63
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:240

  // Stop all interrupts
  cli();
     13c:	f8 94       	cli
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:247
#ifdef CORRECT_EXACT_MICROS
  // combine exact millisec and 8usec counters
  m = timer0_millis;
  f = timer0_fract;
#else
  m = timer0_overflow_count;
     13e:	80 91 a9 00 	lds	r24, 0x00A9	; 0x8000a9 <timer0_overflow_count>
     142:	90 91 aa 00 	lds	r25, 0x00AA	; 0x8000aa <timer0_overflow_count+0x1>
     146:	a0 91 ab 00 	lds	r26, 0x00AB	; 0x8000ab <timer0_overflow_count+0x2>
     14a:	b0 91 ac 00 	lds	r27, 0x00AC	; 0x8000ac <timer0_overflow_count+0x3>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:252
#endif

  // TCNT0 : The Timer Counter Register
#if defined(TCNT0)
  t = TCNT0;
     14e:	22 b7       	in	r18, 0x32	; 50
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:268
    m++;
#else
    q = 1;
#endif
#else
  if ((TIFR & _BV(TOV0)) && (t < 255))
     150:	08 b6       	in	r0, 0x38	; 56
     152:	00 fe       	sbrs	r0, 0
     154:	05 c0       	rjmp	.+10     	; 0x160 <micros+0x26>
     156:	2f 3f       	cpi	r18, 0xFF	; 255
     158:	19 f0       	breq	.+6      	; 0x160 <micros+0x26>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:270
#ifndef CORRECT_EXACT_MICROS
    m++;
     15a:	01 96       	adiw	r24, 0x01	; 1
     15c:	a1 1d       	adc	r26, r1
     15e:	b1 1d       	adc	r27, r1
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:276
#else
    q = 1;
#endif
#endif
  // Restore SREG
  SREG = oldSREG;
     160:	3f bf       	out	0x3f, r19	; 63
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:292
      ((t * MICROSECONDS_PER_TIMER0_OVERFLOW) >> 8);
  return q ? m + MICROSECONDS_PER_TIMER0_OVERFLOW : m;
#elif 1
  /* All power-of-two Megahertz frequencies enter here, as well as 12.8 MHz.
     We only end up here if right shift before multiplication is exact. */
  return ((m << 8) + t) * (MICROSECONDS_PER_TIMER0_OVERFLOW >> 8);
     162:	ba 2f       	mov	r27, r26
     164:	a9 2f       	mov	r26, r25
     166:	98 2f       	mov	r25, r24
     168:	88 27       	eor	r24, r24
     16a:	bc 01       	movw	r22, r24
     16c:	cd 01       	movw	r24, r26
     16e:	62 0f       	add	r22, r18
     170:	71 1d       	adc	r23, r1
     172:	81 1d       	adc	r24, r1
     174:	91 1d       	adc	r25, r1
     176:	43 e0       	ldi	r20, 0x03	; 3
     178:	66 0f       	add	r22, r22
     17a:	77 1f       	adc	r23, r23
     17c:	88 1f       	adc	r24, r24
     17e:	99 1f       	adc	r25, r25
     180:	4a 95       	dec	r20
     182:	d1 f7       	brne	.-12     	; 0x178 <micros+0x3e>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:393
  // m & t are multiplied by 4 (since it was already multiplied by 256)
  // t is multiplied by 4
  return ((m << 8) + t) * (64 / clockCyclesPerMicrosecond());
#endif
#endif // 0
}
     184:	08 95       	ret

00000186 <delay>:
delay():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:396

void delay(unsigned long ms)
{
     186:	8f 92       	push	r8
     188:	9f 92       	push	r9
     18a:	af 92       	push	r10
     18c:	bf 92       	push	r11
     18e:	cf 92       	push	r12
     190:	df 92       	push	r13
     192:	ef 92       	push	r14
     194:	ff 92       	push	r15
     196:	4b 01       	movw	r8, r22
     198:	5c 01       	movw	r10, r24
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:397
  unsigned long start = micros();
     19a:	cf df       	rcall	.-98     	; 0x13a <micros>
     19c:	6b 01       	movw	r12, r22
     19e:	7c 01       	movw	r14, r24
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:401

  while (ms > 0UL) {
    yield();
    while (ms > 0UL && (micros() - start) >= 1000UL) {
     1a0:	cc df       	rcall	.-104    	; 0x13a <micros>
     1a2:	6c 19       	sub	r22, r12
     1a4:	7d 09       	sbc	r23, r13
     1a6:	8e 09       	sbc	r24, r14
     1a8:	9f 09       	sbc	r25, r15
     1aa:	68 3e       	cpi	r22, 0xE8	; 232
     1ac:	73 40       	sbci	r23, 0x03	; 3
     1ae:	81 05       	cpc	r24, r1
     1b0:	91 05       	cpc	r25, r1
     1b2:	b0 f3       	brcs	.-20     	; 0x1a0 <delay+0x1a>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:402
      ms--;
     1b4:	21 e0       	ldi	r18, 0x01	; 1
     1b6:	82 1a       	sub	r8, r18
     1b8:	91 08       	sbc	r9, r1
     1ba:	a1 08       	sbc	r10, r1
     1bc:	b1 08       	sbc	r11, r1
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:403
      start += 1000UL;
     1be:	88 ee       	ldi	r24, 0xE8	; 232
     1c0:	c8 0e       	add	r12, r24
     1c2:	83 e0       	ldi	r24, 0x03	; 3
     1c4:	d8 1e       	adc	r13, r24
     1c6:	e1 1c       	adc	r14, r1
     1c8:	f1 1c       	adc	r15, r1
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:401
{
  unsigned long start = micros();

  while (ms > 0UL) {
    yield();
    while (ms > 0UL && (micros() - start) >= 1000UL) {
     1ca:	81 14       	cp	r8, r1
     1cc:	91 04       	cpc	r9, r1
     1ce:	a1 04       	cpc	r10, r1
     1d0:	b1 04       	cpc	r11, r1
     1d2:	31 f7       	brne	.-52     	; 0x1a0 <delay+0x1a>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:406
      ms--;
      start += 1000UL;
    }
  }
}
     1d4:	ff 90       	pop	r15
     1d6:	ef 90       	pop	r14
     1d8:	df 90       	pop	r13
     1da:	cf 90       	pop	r12
     1dc:	bf 90       	pop	r11
     1de:	af 90       	pop	r10
     1e0:	9f 90       	pop	r9
     1e2:	8f 90       	pop	r8
     1e4:	08 95       	ret

000001e6 <PixelController<(EOrder)66, 1, 4294967295ul>::init_binary_dithering()>:
_ZN15PixelControllerIL6EOrder66ELi1ELm4294967295EE21init_binary_ditheringEv():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:372

#endif


        /// Set up the values for binary dithering
        void init_binary_dithering() {
     1e6:	0f 93       	push	r16
     1e8:	1f 93       	push	r17
     1ea:	cf 93       	push	r28
     1ec:	df 93       	push	r29
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:376
#if !defined(NO_DITHERING) || (NO_DITHERING != 1)
            // R is the digther signal 'counter'.
            static uint8_t R = 0;
            ++R;
     1ee:	20 91 a7 00 	lds	r18, 0x00A7	; 0x8000a7 <PixelController<(EOrder)66, 1, 4294967295ul>::init_binary_dithering()::R>
     1f2:	2f 5f       	subi	r18, 0xFF	; 255
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:381

            // R is wrapped around at 2^ditherBits,
            // so if ditherBits is 2, R will cycle through (0,1,2,3)
            uint8_t ditherBits = VIRTUAL_BITS;
            R &= (0x01 << ditherBits) - 1;
     1f4:	32 2f       	mov	r19, r18
     1f6:	37 70       	andi	r19, 0x07	; 7
     1f8:	30 93 a7 00 	sts	0x00A7, r19	; 0x8000a7 <PixelController<(EOrder)66, 1, 4294967295ul>::init_binary_dithering()::R>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:390
            // If 'ditherBits' is 2, Q here will cycle through (0,128,64,192)
            uint8_t Q = 0;

            // Reverse bits in a byte
            {
                if(R & 0x01) { Q |= 0x80; }
     1fc:	20 ff       	sbrs	r18, 0
     1fe:	2a c0       	rjmp	.+84     	; 0x254 <PixelController<(EOrder)66, 1, 4294967295ul>::init_binary_dithering()+0x6e>
     200:	20 e8       	ldi	r18, 0x80	; 128
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:391
                if(R & 0x02) { Q |= 0x40; }
     202:	31 fd       	sbrc	r19, 1
     204:	20 64       	ori	r18, 0x40	; 64
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:392
                if(R & 0x04) { Q |= 0x20; }
     206:	34 70       	andi	r19, 0x04	; 4
     208:	09 f0       	breq	.+2      	; 0x20c <PixelController<(EOrder)66, 1, 4294967295ul>::init_binary_dithering()+0x26>
     20a:	20 62       	ori	r18, 0x20	; 32
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:405
            // Now we adjust Q to fall in the center of each range,
            // instead of at the start of the range.
            // If ditherBits is 2, Q will be (0, 128, 64, 192) at first,
            // and this adjustment makes it (31, 159, 95, 223).
            if( ditherBits < 8) {
                Q += 0x01 << (7 - ditherBits);
     20c:	20 5f       	subi	r18, 0xF0	; 240
     20e:	fc 01       	movw	r30, r24
     210:	ec 01       	movw	r28, r24
     212:	23 96       	adiw	r28, 0x03	; 3
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:415
            // actual dithering.

            // Setup the initial D and E values
            for(int i = 0; i < 3; ++i) {
                    uint8_t s = mScale.raw[i];
                    e[i] = s ? (256/s) + 1 : 0;
     214:	00 e0       	ldi	r16, 0x00	; 0
     216:	11 e0       	ldi	r17, 0x01	; 1
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:414
            // which is added to pixel values to affect the
            // actual dithering.

            // Setup the initial D and E values
            for(int i = 0; i < 3; ++i) {
                    uint8_t s = mScale.raw[i];
     218:	64 85       	ldd	r22, Z+12	; 0x0c
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:415
                    e[i] = s ? (256/s) + 1 : 0;
     21a:	66 23       	and	r22, r22
     21c:	21 f0       	breq	.+8      	; 0x226 <PixelController<(EOrder)66, 1, 4294967295ul>::init_binary_dithering()+0x40>
     21e:	70 e0       	ldi	r23, 0x00	; 0
     220:	c8 01       	movw	r24, r16
     222:	17 dc       	rcall	.-2002   	; 0xfffffa52 <__eeprom_end+0xff7efa52>
     224:	6f 5f       	subi	r22, 0xFF	; 255
     226:	61 87       	std	Z+9, r22	; 0x09
scale8():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/lib8tion/scale8.h:93
        "clr __zero_reg__    \n\t"

        : "+a" (i)      /* writes to i */
        : "a"  (scale)  /* uses scale */
        : "r0", "r1"    /* clobbers r0, r1 */
    );
     228:	32 2f       	mov	r19, r18
     22a:	36 9f       	mul	r19, r22
     22c:	03 0e       	add	r0, r19
     22e:	30 e0       	ldi	r19, 0x00	; 0
     230:	31 1d       	adc	r19, r1
     232:	11 24       	eor	r1, r1
_ZN15PixelControllerIL6EOrder66ELi1ELm4294967295EE21init_binary_ditheringEv():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:418
                    d[i] = scale8(Q, e[i]);
#if (FASTLED_SCALE8_FIXED == 1)
                    if(d[i]) (--d[i]);
     234:	31 11       	cpse	r19, r1
     236:	10 c0       	rjmp	.+32     	; 0x258 <PixelController<(EOrder)66, 1, 4294967295ul>::init_binary_dithering()+0x72>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:416

            // Setup the initial D and E values
            for(int i = 0; i < 3; ++i) {
                    uint8_t s = mScale.raw[i];
                    e[i] = s ? (256/s) + 1 : 0;
                    d[i] = scale8(Q, e[i]);
     238:	16 82       	std	Z+6, r1	; 0x06
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:420
#if (FASTLED_SCALE8_FIXED == 1)
                    if(d[i]) (--d[i]);
#endif
                    if(e[i]) --e[i];
     23a:	66 23       	and	r22, r22
     23c:	11 f0       	breq	.+4      	; 0x242 <PixelController<(EOrder)66, 1, 4294967295ul>::init_binary_dithering()+0x5c>
     23e:	61 50       	subi	r22, 0x01	; 1
     240:	61 87       	std	Z+9, r22	; 0x09
     242:	31 96       	adiw	r30, 0x01	; 1
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:413
            // D and E form the "scaled dither signal"
            // which is added to pixel values to affect the
            // actual dithering.

            // Setup the initial D and E values
            for(int i = 0; i < 3; ++i) {
     244:	ec 17       	cp	r30, r28
     246:	fd 07       	cpc	r31, r29
     248:	39 f7       	brne	.-50     	; 0x218 <PixelController<(EOrder)66, 1, 4294967295ul>::init_binary_dithering()+0x32>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:423
                    if(d[i]) (--d[i]);
#endif
                    if(e[i]) --e[i];
            }
#endif
        }
     24a:	df 91       	pop	r29
     24c:	cf 91       	pop	r28
     24e:	1f 91       	pop	r17
     250:	0f 91       	pop	r16
     252:	08 95       	ret
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:386
            R &= (0x01 << ditherBits) - 1;

            // Q is the "unscaled dither signal" itself.
            // It's initialized to the reversed bits of R.
            // If 'ditherBits' is 2, Q here will cycle through (0,128,64,192)
            uint8_t Q = 0;
     254:	20 e0       	ldi	r18, 0x00	; 0
     256:	d5 cf       	rjmp	.-86     	; 0x202 <PixelController<(EOrder)66, 1, 4294967295ul>::init_binary_dithering()+0x1c>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:418
            for(int i = 0; i < 3; ++i) {
                    uint8_t s = mScale.raw[i];
                    e[i] = s ? (256/s) + 1 : 0;
                    d[i] = scale8(Q, e[i]);
#if (FASTLED_SCALE8_FIXED == 1)
                    if(d[i]) (--d[i]);
     258:	31 50       	subi	r19, 0x01	; 1
     25a:	36 83       	std	Z+6, r19	; 0x06
     25c:	ee cf       	rjmp	.-36     	; 0x23a <PixelController<(EOrder)66, 1, 4294967295ul>::init_binary_dithering()+0x54>

0000025e <ClocklessController<(unsigned char)11, 2, 5, 3, (EOrder)66, 0, false, 10>::showPixels(PixelController<(EOrder)66, 1, 4294967295ul>&)>:
_ZN19ClocklessControllerILh11ELi2ELi5ELi3EL6EOrder66ELi0ELb0ELi10EE10showPixelsER15PixelControllerILS0_66ELi1ELm4294967295EE():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:120

protected:
	virtual void showPixels(PixelController<RGB_ORDER> & pixels) {
     25e:	4f 92       	push	r4
     260:	5f 92       	push	r5
     262:	7f 92       	push	r7
     264:	8f 92       	push	r8
     266:	9f 92       	push	r9
     268:	af 92       	push	r10
     26a:	bf 92       	push	r11
     26c:	cf 92       	push	r12
     26e:	df 92       	push	r13
     270:	ef 92       	push	r14
     272:	ff 92       	push	r15
     274:	0f 93       	push	r16
     276:	1f 93       	push	r17
     278:	cf 93       	push	r28
     27a:	df 93       	push	r29
     27c:	2c 01       	movw	r4, r24
     27e:	eb 01       	movw	r28, r22
wait():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/fastled_delay.h:28

	/// Blocking delay until WAIT time since mark() has passed
	void wait() {
		uint16_t diff;
		do {
			diff = (micros() & 0xFFFF) - mLastMicros;
     280:	5c df       	rcall	.-328    	; 0x13a <micros>
     282:	f2 01       	movw	r30, r4
     284:	27 85       	ldd	r18, Z+15	; 0x0f
     286:	30 89       	ldd	r19, Z+16	; 0x10
     288:	62 1b       	sub	r22, r18
     28a:	73 0b       	sbc	r23, r19
C:\Users\user\Documents\Arduino\libraries\FastLED\src/fastled_delay.h:29
		} while(diff < WAIT);
     28c:	6a 30       	cpi	r22, 0x0A	; 10
     28e:	71 05       	cpc	r23, r1
     290:	b8 f3       	brcs	.-18     	; 0x280 <ClocklessController<(unsigned char)11, 2, 5, 3, (EOrder)66, 0, false, 10>::showPixels(PixelController<(EOrder)66, 1, 4294967295ul>&)+0x22>
_ZN19ClocklessControllerILh11ELi2ELi5ELi3EL6EOrder66ELi0ELb0ELi10EE10showPixelsER15PixelControllerILS0_66ELi1ELm4294967295EE():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:123

		mWait.wait();
		cli();
     292:	f8 94       	cli
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:125

		if(pixels.mLen > 0) {
     294:	8a 81       	ldd	r24, Y+2	; 0x02
     296:	9b 81       	ldd	r25, Y+3	; 0x03
     298:	18 16       	cp	r1, r24
     29a:	19 06       	cpc	r1, r25
     29c:	0c f0       	brlt	.+2      	; 0x2a0 <ClocklessController<(unsigned char)11, 2, 5, 3, (EOrder)66, 0, false, 10>::showPixels(PixelController<(EOrder)66, 1, 4294967295ul>&)+0x42>
     29e:	40 c1       	rjmp	.+640    	; 0x520 <L_3386>
showRGBInternal():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:361
#define FL_FALLTHROUGH __attribute__ ((fallthrough));

	// This method is made static to force making register Y available to use for data on AVR - if the method is non-static, then
	// gcc will use register Y for the this pointer.
	static void /*__attribute__((optimize("O0")))*/  /*__attribute__ ((always_inline))*/  showRGBInternal(PixelController<RGB_ORDER> & pixels)  {
		uint8_t *data = (uint8_t*)pixels.mData;
     2a0:	e8 81       	ld	r30, Y
     2a2:	f9 81       	ldd	r31, Y+1	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:367
		data_ptr_t port = FastPin<DATA_PIN>::port();
		data_t mask = FastPin<DATA_PIN>::mask();
		uint8_t scale_base = 0;

		// FASTLED_REGISTER uint8_t *end = data + nLeds;
		data_t hi = *port | mask;
     2a4:	68 b3       	in	r22, 0x18	; 24
     2a6:	86 2e       	mov	r8, r22
     2a8:	68 94       	set
     2aa:	83 f8       	bld	r8, 3
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:368
		data_t lo = *port & ~mask;
     2ac:	38 b3       	in	r19, 0x18	; 24
     2ae:	37 7f       	andi	r19, 0xF7	; 247
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:369
		*port = lo;
     2b0:	38 bb       	out	0x18, r19	; 24
_ZN15PixelControllerIL6EOrder66ELi1ELm4294967295EE25preStepFirstByteDitheringEv():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:471
                d[2] = e[2] - d[2];
        }

        /// Some chipsets pre-cycle the first byte, which means we want to cycle byte 0's dithering separately
        __attribute__((always_inline)) inline void preStepFirstByteDithering() {
            d[RO(0)] = e[RO(0)] - d[RO(0)];
     2b2:	da 84       	ldd	r13, Y+10	; 0x0a
     2b4:	8f 81       	ldd	r24, Y+7	; 0x07
     2b6:	2d 2d       	mov	r18, r13
     2b8:	28 1b       	sub	r18, r24
     2ba:	82 2f       	mov	r24, r18
     2bc:	2f 83       	std	Y+7, r18	; 0x07
_ZN15PixelControllerIL6EOrder66ELi1ELm4294967295EE9advanceByEv():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:454
        /// @returns LANES from template
        __attribute__((always_inline)) inline int lanes() { return LANES; }

        /// Get the amount to advance the pointer by
        /// @returns PixelController::mAdvance
        __attribute__((always_inline)) inline int advanceBy() { return mAdvance; }
     2be:	4f 85       	ldd	r20, Y+15	; 0x0f
     2c0:	04 2e       	mov	r0, r20
     2c2:	00 0c       	add	r0, r0
     2c4:	55 0b       	sbc	r21, r21
showRGBInternal():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:383

		// pull the dithering/adjustment values out of the pixels object for direct asm access

		// even though advanceBy is only an int8, we cast it to int16 for sign extension in case it's negative.
		int16_t advanceBy = pixels.advanceBy();
		uint16_t count = pixels.mLen;
     2c6:	aa 81       	ldd	r26, Y+2	; 0x02
     2c8:	bb 81       	ldd	r27, Y+3	; 0x03
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:385

		uint8_t s0 = pixels.mScale.raw[RO(0)];
     2ca:	7d 85       	ldd	r23, Y+13	; 0x0d
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:386
		uint8_t s1 = pixels.mScale.raw[RO(1)];
     2cc:	fc 84       	ldd	r15, Y+12	; 0x0c
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:387
		uint8_t s2 = pixels.mScale.raw[RO(2)];
     2ce:	ee 84       	ldd	r14, Y+14	; 0x0e
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:389
#if (FASTLED_SCALE8_FIXED==1)
		s0++; s1++; s2++;
     2d0:	7f 5f       	subi	r23, 0xFF	; 255
     2d2:	f3 94       	inc	r15
     2d4:	e3 94       	inc	r14
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:392
#endif
		uint8_t d0 = pixels.d[RO(0)];
		uint8_t d1 = pixels.d[RO(1)];
     2d6:	9e 81       	ldd	r25, Y+6	; 0x06
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:393
		uint8_t d2 = pixels.d[RO(2)];
     2d8:	98 84       	ldd	r9, Y+8	; 0x08
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:395
		uint8_t e0 = pixels.e[RO(0)];
		uint8_t e1 = pixels.e[RO(1)];
     2da:	b9 84       	ldd	r11, Y+9	; 0x09
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:396
		uint8_t e2 = pixels.e[RO(2)];
     2dc:	ab 84       	ldd	r10, Y+11	; 0x0b
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:401

		uint8_t loopvar=0;

		// This has to be done in asm to keep gcc from messing up the asm code further down
		b0 = data[RO(0)];
     2de:	11 81       	ldd	r17, Z+1	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:403
		{
			LDSCL4(b0,O0) 	PRESCALEA2(d0)
     2e0:	c1 2c       	mov	r12, r1
     2e2:	6c 2d       	mov	r22, r12
     2e4:	0c 2d       	mov	r16, r12
     2e6:	2c 2d       	mov	r18, r12
     2e8:	21 81       	ldd	r18, Z+1	; 0x01
     2ea:	11 27       	eor	r17, r17
     2ec:	88 94       	clc
     2ee:	21 11       	cpse	r18, r1
     2f0:	28 0f       	add	r18, r24
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:404
			PRESCALEB4(d0)	SCALE02(b0,0)
     2f2:	08 f4       	brcc	.+2      	; 0x2f6 <L_637>
     2f4:	2f ef       	ldi	r18, 0xFF	; 255

000002f6 <L_637>:
     2f6:	81 95       	neg	r24
     2f8:	88 94       	clc
     2fa:	70 fd       	sbrc	r23, 0
     2fc:	12 0f       	add	r17, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:405
			RORSC04(b0,1) 	ROR1(b0) CLC1
     2fe:	17 95       	ror	r17
     300:	88 94       	clc
     302:	71 fd       	sbrc	r23, 1
     304:	12 0f       	add	r17, r18
     306:	17 95       	ror	r17
     308:	88 94       	clc
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:406
			SCROR04(b0,2)		SCALE02(b0,3)
     30a:	72 fd       	sbrc	r23, 2
     30c:	12 0f       	add	r17, r18
     30e:	17 95       	ror	r17
     310:	88 94       	clc
     312:	73 fd       	sbrc	r23, 3
     314:	12 0f       	add	r17, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:407
			RORSC04(b0,4) 	ROR1(b0) CLC1
     316:	17 95       	ror	r17
     318:	88 94       	clc
     31a:	74 fd       	sbrc	r23, 4
     31c:	12 0f       	add	r17, r18
     31e:	17 95       	ror	r17
     320:	88 94       	clc
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:408
			SCROR04(b0,5) 	SCALE02(b0,6)
     322:	75 fd       	sbrc	r23, 5
     324:	12 0f       	add	r17, r18
     326:	17 95       	ror	r17
     328:	88 94       	clc
     32a:	76 fd       	sbrc	r23, 6
     32c:	12 0f       	add	r17, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:409
			RORSC04(b0,7) 	ROR1(b0) CLC1
     32e:	17 95       	ror	r17
     330:	88 94       	clc
     332:	77 fd       	sbrc	r23, 7
     334:	12 0f       	add	r17, r18
     336:	17 95       	ror	r17
     338:	88 94       	clc
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:410
			MOV_ADDDE04(b1,b0,d0,e0)
     33a:	62 2f       	mov	r22, r18
     33c:	71 11       	cpse	r23, r1
     33e:	61 2f       	mov	r22, r17
     340:	8d 0d       	add	r24, r13
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:411
			MOV1(b0,b1)
     342:	16 2f       	mov	r17, r22
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:418

		{
			// while(--count)
			{
				// Loop beginning
				DNOP;
     344:	00 2c       	mov	r0, r0
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:432
				// out.  When doing byte 1, we're doing the above for byte 2.  When we're doing byte 2,
				// we're cycling back around and doing the above for byte 0.

				// Inline scaling - RGB ordering
				// DNOP
				HI1 _D1(1) QLO2(b0, 7) LDSCL4(b1,O1) 	_D2(4)	LO1	PRESCALEA2(d1)	_D3(2)
     346:	88 ba       	out	0x18, r8	; 24
     348:	17 ff       	sbrs	r17, 7
     34a:	38 bb       	out	0x18, r19	; 24
     34c:	20 81       	ld	r18, Z
     34e:	66 27       	eor	r22, r22
     350:	88 94       	clc
     352:	38 bb       	out	0x18, r19	; 24
     354:	21 11       	cpse	r18, r1
     356:	29 0f       	add	r18, r25
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:433
				HI1 _D1(1) QLO2(b0, 6) PRESCALEB4(d1)	_D2(4)	LO1	SCALE12(b1,0)	_D3(2)
     358:	88 ba       	out	0x18, r8	; 24
     35a:	16 ff       	sbrs	r17, 6
     35c:	38 bb       	out	0x18, r19	; 24
     35e:	08 f4       	brcc	.+2      	; 0x362 <L_1113>
     360:	2f ef       	ldi	r18, 0xFF	; 255

00000362 <L_1113>:
     362:	91 95       	neg	r25
     364:	88 94       	clc
     366:	38 bb       	out	0x18, r19	; 24
     368:	f0 fc       	sbrc	r15, 0
     36a:	62 0f       	add	r22, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:434
				HI1 _D1(1) QLO2(b0, 5) RORSC14(b1,1) 	_D2(4)	LO1 RORCLC2(b1)		_D3(2)
     36c:	88 ba       	out	0x18, r8	; 24
     36e:	15 ff       	sbrs	r17, 5
     370:	38 bb       	out	0x18, r19	; 24
     372:	67 95       	ror	r22
     374:	88 94       	clc
     376:	f1 fc       	sbrc	r15, 1
     378:	62 0f       	add	r22, r18
     37a:	38 bb       	out	0x18, r19	; 24
     37c:	67 95       	ror	r22
     37e:	88 94       	clc
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:435
				HI1 _D1(1) QLO2(b0, 4) SCROR14(b1,2)	_D2(4)	LO1 SCALE12(b1,3)	_D3(2)
     380:	88 ba       	out	0x18, r8	; 24
     382:	14 ff       	sbrs	r17, 4
     384:	38 bb       	out	0x18, r19	; 24
     386:	f2 fc       	sbrc	r15, 2
     388:	62 0f       	add	r22, r18
     38a:	67 95       	ror	r22
     38c:	88 94       	clc
     38e:	38 bb       	out	0x18, r19	; 24
     390:	f3 fc       	sbrc	r15, 3
     392:	62 0f       	add	r22, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:436
				HI1 _D1(1) QLO2(b0, 3) RORSC14(b1,4) 	_D2(4)	LO1 RORCLC2(b1) 	_D3(2)
     394:	88 ba       	out	0x18, r8	; 24
     396:	13 ff       	sbrs	r17, 3
     398:	38 bb       	out	0x18, r19	; 24
     39a:	67 95       	ror	r22
     39c:	88 94       	clc
     39e:	f4 fc       	sbrc	r15, 4
     3a0:	62 0f       	add	r22, r18
     3a2:	38 bb       	out	0x18, r19	; 24
     3a4:	67 95       	ror	r22
     3a6:	88 94       	clc
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:437
				HI1 _D1(1) QLO2(b0, 2) SCROR14(b1,5) 	_D2(4)	LO1 SCALE12(b1,6)	_D3(2)
     3a8:	88 ba       	out	0x18, r8	; 24
     3aa:	12 ff       	sbrs	r17, 2
     3ac:	38 bb       	out	0x18, r19	; 24
     3ae:	f5 fc       	sbrc	r15, 5
     3b0:	62 0f       	add	r22, r18
     3b2:	67 95       	ror	r22
     3b4:	88 94       	clc
     3b6:	38 bb       	out	0x18, r19	; 24
     3b8:	f6 fc       	sbrc	r15, 6
     3ba:	62 0f       	add	r22, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:438
				HI1 _D1(1) QLO2(b0, 1) RORSC14(b1,7) 	_D2(4)	LO1 RORCLC2(b1) 	_D3(2)
     3bc:	88 ba       	out	0x18, r8	; 24
     3be:	11 ff       	sbrs	r17, 1
     3c0:	38 bb       	out	0x18, r19	; 24
     3c2:	67 95       	ror	r22
     3c4:	88 94       	clc
     3c6:	f7 fc       	sbrc	r15, 7
     3c8:	62 0f       	add	r22, r18
     3ca:	38 bb       	out	0x18, r19	; 24
     3cc:	67 95       	ror	r22
     3ce:	88 94       	clc
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:439
				HI1 _D1(1) QLO2(b0, 0)
     3d0:	88 ba       	out	0x18, r8	; 24
     3d2:	10 ff       	sbrs	r17, 0
     3d4:	38 bb       	out	0x18, r19	; 24
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:446
					case 4: _D2(0) LO1 _D3(0) HI1 _D1(1) QLO2(b0,0)  /* fall through */
					case 3: _D2(0) LO1 _D3(0) HI1 _D1(1) QLO2(b0,0)  /* fall through */
					case 2: _D2(0) LO1 _D3(0) HI1 _D1(1) QLO2(b0,0)  /* fall through */
					case 1: _D2(0) LO1 _D3(0) HI1 _D1(1) QLO2(b0,0)
				}
				MOV_ADDDE14(b0,b1,d1,e1) _D2(4) LO1 _D3(0)
     3d6:	12 2f       	mov	r17, r18
     3d8:	f1 10       	cpse	r15, r1
     3da:	16 2f       	mov	r17, r22
     3dc:	9b 0d       	add	r25, r11
     3de:	38 bb       	out	0x18, r19	; 24
_Z3_dcILi2EEvRh():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:55
template<> __attribute__((always_inline)) inline void _dc< 0>(FASTLED_REGISTER uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(FASTLED_REGISTER uint8_t & ) {asm __volatile__("mov r0,r0":::);}
#if defined(__LGT8F__) 
template<> __attribute__((always_inline)) inline void _dc< 2>(FASTLED_REGISTER uint8_t & loopvar) { _dc<1>(loopvar); _dc<1>(loopvar); }
#else
template<> __attribute__((always_inline)) inline void _dc< 2>(FASTLED_REGISTER uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     3e0:	00 c0       	rjmp	.+0      	; 0x3e2 <L_1113+0x80>
showRGBInternal():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:448
					case 2: _D2(0) LO1 _D3(0) HI1 _D1(1) QLO2(b0,0)  /* fall through */
					case 1: _D2(0) LO1 _D3(0) HI1 _D1(1) QLO2(b0,0)
				}
				MOV_ADDDE14(b0,b1,d1,e1) _D2(4) LO1 _D3(0)

				HI1 _D1(1) QLO2(b0, 7) LDSCL4(b1,O2) 	_D2(4)	LO1	PRESCALEA2(d2)	_D3(2)
     3e2:	88 ba       	out	0x18, r8	; 24
     3e4:	17 ff       	sbrs	r17, 7
     3e6:	38 bb       	out	0x18, r19	; 24
     3e8:	22 81       	ldd	r18, Z+2	; 0x02
     3ea:	66 27       	eor	r22, r22
     3ec:	88 94       	clc
     3ee:	38 bb       	out	0x18, r19	; 24
     3f0:	21 11       	cpse	r18, r1
     3f2:	29 0d       	add	r18, r9
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:449
				HI1 _D1(1) QLO2(b0, 6) PSBIDATA4(d2)	_D2(4)	LO1	SCALE22(b1,0)	_D3(2)
     3f4:	88 ba       	out	0x18, r8	; 24
     3f6:	16 ff       	sbrs	r17, 6
     3f8:	38 bb       	out	0x18, r19	; 24
     3fa:	08 f4       	brcc	.+2      	; 0x3fe <L_1918>
     3fc:	2f ef       	ldi	r18, 0xFF	; 255

000003fe <L_1918>:
     3fe:	e4 0f       	add	r30, r20
     400:	f5 1f       	adc	r31, r21
     402:	38 bb       	out	0x18, r19	; 24
     404:	e0 fc       	sbrc	r14, 0
     406:	62 0f       	add	r22, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:450
				HI1 _D1(1) QLO2(b0, 5) RORSC24(b1,1) 	_D2(4)	LO1 RORCLC2(b1) 	_D3(2)
     408:	88 ba       	out	0x18, r8	; 24
     40a:	15 ff       	sbrs	r17, 5
     40c:	38 bb       	out	0x18, r19	; 24
     40e:	67 95       	ror	r22
     410:	88 94       	clc
     412:	e1 fc       	sbrc	r14, 1
     414:	62 0f       	add	r22, r18
     416:	38 bb       	out	0x18, r19	; 24
     418:	67 95       	ror	r22
     41a:	88 94       	clc
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:451
				HI1 _D1(1) QLO2(b0, 4) SCROR24(b1,2)	_D2(4)	LO1 SCALE22(b1,3)	_D3(2)
     41c:	88 ba       	out	0x18, r8	; 24
     41e:	14 ff       	sbrs	r17, 4
     420:	38 bb       	out	0x18, r19	; 24
     422:	e2 fc       	sbrc	r14, 2
     424:	62 0f       	add	r22, r18
     426:	67 95       	ror	r22
     428:	88 94       	clc
     42a:	38 bb       	out	0x18, r19	; 24
     42c:	e3 fc       	sbrc	r14, 3
     42e:	62 0f       	add	r22, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:452
				HI1 _D1(1) QLO2(b0, 3) RORSC24(b1,4) 	_D2(4)	LO1 RORCLC2(b1) 	_D3(2)
     430:	88 ba       	out	0x18, r8	; 24
     432:	13 ff       	sbrs	r17, 3
     434:	38 bb       	out	0x18, r19	; 24
     436:	67 95       	ror	r22
     438:	88 94       	clc
     43a:	e4 fc       	sbrc	r14, 4
     43c:	62 0f       	add	r22, r18
     43e:	38 bb       	out	0x18, r19	; 24
     440:	67 95       	ror	r22
     442:	88 94       	clc
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:453
				HI1 _D1(1) QLO2(b0, 2) SCROR24(b1,5) 	_D2(4)	LO1 SCALE22(b1,6)	_D3(2)
     444:	88 ba       	out	0x18, r8	; 24
     446:	12 ff       	sbrs	r17, 2
     448:	38 bb       	out	0x18, r19	; 24
     44a:	e5 fc       	sbrc	r14, 5
     44c:	62 0f       	add	r22, r18
     44e:	67 95       	ror	r22
     450:	88 94       	clc
     452:	38 bb       	out	0x18, r19	; 24
     454:	e6 fc       	sbrc	r14, 6
     456:	62 0f       	add	r22, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:454
				HI1 _D1(1) QLO2(b0, 1) RORSC24(b1,7) 	_D2(4)	LO1 RORCLC2(b1) 	_D3(2)
     458:	88 ba       	out	0x18, r8	; 24
     45a:	11 ff       	sbrs	r17, 1
     45c:	38 bb       	out	0x18, r19	; 24
     45e:	67 95       	ror	r22
     460:	88 94       	clc
     462:	e7 fc       	sbrc	r14, 7
     464:	62 0f       	add	r22, r18
     466:	38 bb       	out	0x18, r19	; 24
     468:	67 95       	ror	r22
     46a:	88 94       	clc
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:455
				HI1 _D1(1) QLO2(b0, 0)
     46c:	88 ba       	out	0x18, r8	; 24
     46e:	10 ff       	sbrs	r17, 0
     470:	38 bb       	out	0x18, r19	; 24
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:466
				}

				// Because Prescale on the middle byte also increments the data counter,
				// we have to do both halves of updating d2 here - negating it (in the
				// MOV_NEGD24 macro) and then adding E back into it
				MOV_NEGD24(b0,b1,d2) _D2(4) LO1 ADDDE1(d2,e2) _D3(1)
     472:	12 2f       	mov	r17, r18
     474:	e1 10       	cpse	r14, r1
     476:	16 2f       	mov	r17, r22
     478:	91 94       	neg	r9
     47a:	38 bb       	out	0x18, r19	; 24
     47c:	9a 0c       	add	r9, r10
_Z3_dcILi1EEvRh():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(FASTLED_REGISTER uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(FASTLED_REGISTER uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(FASTLED_REGISTER uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(FASTLED_REGISTER uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(FASTLED_REGISTER uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(FASTLED_REGISTER uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     47e:	00 2c       	mov	r0, r0
showRGBInternal():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:467

				// Because Prescale on the middle byte also increments the data counter,
				// we have to do both halves of updating d2 here - negating it (in the
				// MOV_NEGD24 macro) and then adding E back into it
				MOV_NEGD24(b0,b1,d2) _D2(4) LO1 ADDDE1(d2,e2) _D3(1)
				HI1 _D1(1) QLO2(b0, 7) LDSCL4(b1,O0) 	_D2(4)	LO1	PRESCALEA2(d0)	_D3(2)
     480:	88 ba       	out	0x18, r8	; 24
     482:	17 ff       	sbrs	r17, 7
     484:	38 bb       	out	0x18, r19	; 24
     486:	21 81       	ldd	r18, Z+1	; 0x01
     488:	66 27       	eor	r22, r22
     48a:	88 94       	clc
     48c:	38 bb       	out	0x18, r19	; 24
     48e:	21 11       	cpse	r18, r1
     490:	28 0f       	add	r18, r24
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:468
				HI1 _D1(1) QLO2(b0, 6) PRESCALEB4(d0)	_D2(4)	LO1	SCALE02(b1,0)	_D3(2)
     492:	88 ba       	out	0x18, r8	; 24
     494:	16 ff       	sbrs	r17, 6
     496:	38 bb       	out	0x18, r19	; 24
     498:	08 f4       	brcc	.+2      	; 0x49c <L_2740>
     49a:	2f ef       	ldi	r18, 0xFF	; 255

0000049c <L_2740>:
     49c:	81 95       	neg	r24
     49e:	88 94       	clc
     4a0:	38 bb       	out	0x18, r19	; 24
     4a2:	70 fd       	sbrc	r23, 0
     4a4:	62 0f       	add	r22, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:469
				HI1 _D1(1) QLO2(b0, 5) RORSC04(b1,1) 	_D2(4)	LO1 RORCLC2(b1) 	_D3(2)
     4a6:	88 ba       	out	0x18, r8	; 24
     4a8:	15 ff       	sbrs	r17, 5
     4aa:	38 bb       	out	0x18, r19	; 24
     4ac:	67 95       	ror	r22
     4ae:	88 94       	clc
     4b0:	71 fd       	sbrc	r23, 1
     4b2:	62 0f       	add	r22, r18
     4b4:	38 bb       	out	0x18, r19	; 24
     4b6:	67 95       	ror	r22
     4b8:	88 94       	clc
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:470
				HI1 _D1(1) QLO2(b0, 4) SCROR04(b1,2)	_D2(4)	LO1 SCALE02(b1,3)	_D3(2)
     4ba:	88 ba       	out	0x18, r8	; 24
     4bc:	14 ff       	sbrs	r17, 4
     4be:	38 bb       	out	0x18, r19	; 24
     4c0:	72 fd       	sbrc	r23, 2
     4c2:	62 0f       	add	r22, r18
     4c4:	67 95       	ror	r22
     4c6:	88 94       	clc
     4c8:	38 bb       	out	0x18, r19	; 24
     4ca:	73 fd       	sbrc	r23, 3
     4cc:	62 0f       	add	r22, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:471
				HI1 _D1(1) QLO2(b0, 3) RORSC04(b1,4) 	_D2(4)	LO1 RORCLC2(b1)  	_D3(2)
     4ce:	88 ba       	out	0x18, r8	; 24
     4d0:	13 ff       	sbrs	r17, 3
     4d2:	38 bb       	out	0x18, r19	; 24
     4d4:	67 95       	ror	r22
     4d6:	88 94       	clc
     4d8:	74 fd       	sbrc	r23, 4
     4da:	62 0f       	add	r22, r18
     4dc:	38 bb       	out	0x18, r19	; 24
     4de:	67 95       	ror	r22
     4e0:	88 94       	clc
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:472
				HI1 _D1(1) QLO2(b0, 2) SCROR04(b1,5) 	_D2(4)	LO1 SCALE02(b1,6)	_D3(2)
     4e2:	88 ba       	out	0x18, r8	; 24
     4e4:	12 ff       	sbrs	r17, 2
     4e6:	38 bb       	out	0x18, r19	; 24
     4e8:	75 fd       	sbrc	r23, 5
     4ea:	62 0f       	add	r22, r18
     4ec:	67 95       	ror	r22
     4ee:	88 94       	clc
     4f0:	38 bb       	out	0x18, r19	; 24
     4f2:	76 fd       	sbrc	r23, 6
     4f4:	62 0f       	add	r22, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:473
				HI1 _D1(1) QLO2(b0, 1) RORSC04(b1,7) 	_D2(4)	LO1 RORCLC2(b1) 	_D3(2)
     4f6:	88 ba       	out	0x18, r8	; 24
     4f8:	11 ff       	sbrs	r17, 1
     4fa:	38 bb       	out	0x18, r19	; 24
     4fc:	67 95       	ror	r22
     4fe:	88 94       	clc
     500:	77 fd       	sbrc	r23, 7
     502:	62 0f       	add	r22, r18
     504:	38 bb       	out	0x18, r19	; 24
     506:	67 95       	ror	r22
     508:	88 94       	clc
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:474
				HI1 _D1(1) QLO2(b0, 0)
     50a:	88 ba       	out	0x18, r8	; 24
     50c:	10 ff       	sbrs	r17, 0
     50e:	38 bb       	out	0x18, r19	; 24
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:481
					case 4: _D2(0) LO1 _D3(0) HI1 _D1(1) QLO2(b0,0)  /* fall through */
					case 3: _D2(0) LO1 _D3(0) HI1 _D1(1) QLO2(b0,0)  /* fall through */
					case 2: _D2(0) LO1 _D3(0) HI1 _D1(1) QLO2(b0,0)  /* fall through */
					case 1: _D2(0) LO1 _D3(0) HI1 _D1(1) QLO2(b0,0)
				}
				MOV_ADDDE04(b0,b1,d0,e0) _D2(4) LO1 _D3(5)
     510:	12 2f       	mov	r17, r18
     512:	71 11       	cpse	r23, r1
     514:	16 2f       	mov	r17, r22
     516:	8d 0d       	add	r24, r13
     518:	38 bb       	out	0x18, r19	; 24
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:482
				ENDLOOP5
     51a:	11 97       	sbiw	r26, 0x01	; 1
     51c:	09 f0       	breq	.+2      	; 0x520 <L_3386>
     51e:	13 cf       	rjmp	.-474    	; 0x346 <L_637+0x50>

00000520 <L_3386>:
_ZN15PixelControllerIL6EOrder66ELi1ELm4294967295EE4sizeEv():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:446
            }
        }

        /// Get the length of the LED strip
        /// @returns PixelController::mLen
        __attribute__((always_inline)) inline int size() { return mLen; }
     520:	ea 81       	ldd	r30, Y+2	; 0x02
     522:	fb 81       	ldd	r31, Y+3	; 0x03
_ZN19ClocklessControllerILh11ELi2ELi5ELi3EL6EOrder66ELi0ELb0ELi10EE10showPixelsER15PixelControllerILS0_66ELi1ELm4294967295EE():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:131
			showRGBInternal(pixels);
		}

		// Adjust the timer
#if (!defined(NO_CLOCK_CORRECTION) || (NO_CLOCK_CORRECTION == 0)) && (FASTLED_ALLOW_INTERRUPTS == 0)
        uint32_t microsTaken = (uint32_t)pixels.size() * (uint32_t)CLKS_TO_MICROS(24 * (T1 + T2 + T3));
     524:	20 ef       	ldi	r18, 0xF0	; 240
     526:	30 e0       	ldi	r19, 0x00	; 0
     528:	df 01       	movw	r26, r30
     52a:	a6 da       	rcall	.-2740   	; 0xfffffa78 <__eeprom_end+0xff7efa78>
     52c:	6b 01       	movw	r12, r22
     52e:	7c 01       	movw	r14, r24
     530:	a3 e0       	ldi	r26, 0x03	; 3
     532:	f6 94       	lsr	r15
     534:	e7 94       	ror	r14
     536:	d7 94       	ror	r13
     538:	c7 94       	ror	r12
     53a:	aa 95       	dec	r26
     53c:	d1 f7       	brne	.-12     	; 0x532 <L_3386+0x12>
scale16by8():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/lib8tion/scale8.h:508
        "  adc %B[result], __zero_reg__        \n\t"

        : [result] "+r" (result)
        : [i] "r" (i), [scale] "r" (scale)
        : "r0", "r1"
    );
     53e:	30 e0       	ldi	r19, 0x00	; 0
     540:	20 e0       	ldi	r18, 0x00	; 0
     542:	a9 01       	movw	r20, r18
     544:	8a e9       	ldi	r24, 0x9A	; 154
     546:	e8 9f       	mul	r30, r24
     548:	0e 0e       	add	r0, r30
     54a:	41 1d       	adc	r20, r1
     54c:	f8 9f       	mul	r31, r24
     54e:	40 0d       	add	r20, r0
     550:	51 1d       	adc	r21, r1
     552:	11 24       	eor	r1, r1
     554:	4f 0f       	add	r20, r31
     556:	51 1d       	adc	r21, r1
_ZN19ClocklessControllerILh11ELi2ELi5ELi3EL6EOrder66ELi0ELb0ELi10EE10showPixelsER15PixelControllerILS0_66ELi1ELm4294967295EE():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:136

        // adust for approximate observed actal runtime (as of January 2015)
        // roughly 9.6 cycles per pixel, which is 0.6us/pixel at 16MHz
        // microsTaken += nLeds * 0.6 * CLKS_TO_MICROS(16);
        microsTaken += scale16by8(pixels.size(),(0.6 * 256) + 1) * CLKS_TO_MICROS(16);
     558:	ca 01       	movw	r24, r20
     55a:	b0 e0       	ldi	r27, 0x00	; 0
     55c:	a0 e0       	ldi	r26, 0x00	; 0
     55e:	88 0f       	add	r24, r24
     560:	99 1f       	adc	r25, r25
     562:	aa 1f       	adc	r26, r26
     564:	bb 1f       	adc	r27, r27
     566:	8c 0d       	add	r24, r12
     568:	9d 1d       	adc	r25, r13
     56a:	ae 1d       	adc	r26, r14
     56c:	bf 1d       	adc	r27, r15
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:144
        // this is because the ONE interrupt that might come in while interrupts
        // are disabled is queued up, and it will be serviced as soon as
        // interrupts are re-enabled.
        // This actually should technically also account for the runtime of the
        // interrupt handler itself, but we're just not going to worry about that.
        if( microsTaken > 1000) {
     56e:	89 3e       	cpi	r24, 0xE9	; 233
     570:	43 e0       	ldi	r20, 0x03	; 3
     572:	94 07       	cpc	r25, r20
     574:	a1 05       	cpc	r26, r1
     576:	b1 05       	cpc	r27, r1
     578:	08 f4       	brcc	.+2      	; 0x57c <L_3386+0x5c>
     57a:	34 c0       	rjmp	.+104    	; 0x5e4 <L_3386+0xc4>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:148

            // Since up to one timer tick will be queued, we don't need
            // to adjust the MS_COUNTER for that one.
            microsTaken -= 1000;
     57c:	88 5e       	subi	r24, 0xE8	; 232
     57e:	93 40       	sbci	r25, 0x03	; 3
     580:	a1 09       	sbc	r26, r1
     582:	b1 09       	sbc	r27, r1
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:153

            // Now convert microseconds to 256ths of a second, approximately like this:
            // 250ths = (us/4)
            // 256ths = 250ths * (263/256);
            uint16_t x256ths = microsTaken >> 2;
     584:	42 e0       	ldi	r20, 0x02	; 2
     586:	b6 95       	lsr	r27
     588:	a7 95       	ror	r26
     58a:	97 95       	ror	r25
     58c:	87 95       	ror	r24
     58e:	4a 95       	dec	r20
     590:	d1 f7       	brne	.-12     	; 0x586 <L_3386+0x66>
scale16by8():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/lib8tion/scale8.h:508
     592:	47 e0       	ldi	r20, 0x07	; 7
     594:	84 9f       	mul	r24, r20
     596:	08 0e       	add	r0, r24
     598:	21 1d       	adc	r18, r1
     59a:	94 9f       	mul	r25, r20
     59c:	20 0d       	add	r18, r0
     59e:	31 1d       	adc	r19, r1
     5a0:	11 24       	eor	r1, r1
     5a2:	29 0f       	add	r18, r25
     5a4:	31 1d       	adc	r19, r1
_ZN19ClocklessControllerILh11ELi2ELi5ELi3EL6EOrder66ELi0ELb0ELi10EE10showPixelsER15PixelControllerILS0_66ELi1ELm4294967295EE():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:156
            x256ths += scale16by8(x256ths,7);

            x256ths += gTimeErrorAccum256ths;
     5a6:	60 91 a6 00 	lds	r22, 0x00A6	; 0x8000a6 <__data_end>
     5aa:	70 e0       	ldi	r23, 0x00	; 0
     5ac:	86 0f       	add	r24, r22
     5ae:	97 1f       	adc	r25, r23
     5b0:	82 0f       	add	r24, r18
     5b2:	93 1f       	adc	r25, r19
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:157
            MS_COUNTER += (x256ths >> 8);
     5b4:	40 91 c8 00 	lds	r20, 0x00C8	; 0x8000c8 <timer0_millis>
     5b8:	50 91 c9 00 	lds	r21, 0x00C9	; 0x8000c9 <timer0_millis+0x1>
     5bc:	60 91 ca 00 	lds	r22, 0x00CA	; 0x8000ca <timer0_millis+0x2>
     5c0:	70 91 cb 00 	lds	r23, 0x00CB	; 0x8000cb <timer0_millis+0x3>
     5c4:	29 2f       	mov	r18, r25
     5c6:	33 27       	eor	r19, r19
     5c8:	42 0f       	add	r20, r18
     5ca:	53 1f       	adc	r21, r19
     5cc:	61 1d       	adc	r22, r1
     5ce:	71 1d       	adc	r23, r1
     5d0:	40 93 c8 00 	sts	0x00C8, r20	; 0x8000c8 <timer0_millis>
     5d4:	50 93 c9 00 	sts	0x00C9, r21	; 0x8000c9 <timer0_millis+0x1>
     5d8:	60 93 ca 00 	sts	0x00CA, r22	; 0x8000ca <timer0_millis+0x2>
     5dc:	70 93 cb 00 	sts	0x00CB, r23	; 0x8000cb <timer0_millis+0x3>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:158
            gTimeErrorAccum256ths = x256ths & 0xFF;
     5e0:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <__data_end>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:178
        MS_COUNTER += (microsTaken >> 10);
#endif

#endif

		sei();
     5e4:	78 94       	sei
mark():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/fastled_delay.h:33
	}

	/// Reset the timestamp that marks the start of the wait period
	void mark() { mLastMicros = micros() & 0xFFFF; }
     5e6:	a9 dd       	rcall	.-1198   	; 0x13a <micros>
     5e8:	f2 01       	movw	r30, r4
     5ea:	70 8b       	std	Z+16, r23	; 0x10
     5ec:	67 87       	std	Z+15, r22	; 0x0f
_ZN19ClocklessControllerILh11ELi2ELi5ELi3EL6EOrder66ELi0ELb0ELi10EE10showPixelsER15PixelControllerILS0_66ELi1ELm4294967295EE():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:180
		mWait.mark();
	}
     5ee:	df 91       	pop	r29
     5f0:	cf 91       	pop	r28
     5f2:	1f 91       	pop	r17
     5f4:	0f 91       	pop	r16
     5f6:	ff 90       	pop	r15
     5f8:	ef 90       	pop	r14
     5fa:	df 90       	pop	r13
     5fc:	cf 90       	pop	r12
     5fe:	bf 90       	pop	r11
     600:	af 90       	pop	r10
     602:	9f 90       	pop	r9
     604:	8f 90       	pop	r8
     606:	7f 90       	pop	r7
     608:	5f 90       	pop	r5
     60a:	4f 90       	pop	r4
     60c:	08 95       	ret

0000060e <CLEDController::lanes()>:
_ZN14CLEDController5lanesEv():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:169
    /// @returns CLEDController::m_nLeds
    virtual int size() { return m_nLeds; }

    /// How many Lanes does this controller manage?
    /// @returns 1 for a non-Parallel controller
    virtual int lanes() { return 1; }
     60e:	81 e0       	ldi	r24, 0x01	; 1
     610:	90 e0       	ldi	r25, 0x00	; 0
     612:	08 95       	ret

00000614 <ClocklessController<(unsigned char)11, 2, 5, 3, (EOrder)66, 0, false, 10>::init()>:
_ZN19ClocklessControllerILh11ELi2ELi5ELi3EL6EOrder66ELi0ELb0ELi10EE4initEv():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/fastpin_avr.h:22
template<uint8_t PIN, uint8_t _MASK, typename _PORT, typename _DDR, typename _PIN> class _AVRPIN {
public:
	typedef volatile uint8_t * port_ptr_t;
	typedef uint8_t port_t;

	inline static void setOutput() { _DDR::r() |= _MASK; }
     614:	bb 9a       	sbi	0x17, 3	; 23
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/clockless_trinket.h:115
	CMinWait<WAIT_TIME> mWait;

public:
	virtual void init() {
		FastPin<DATA_PIN>::setOutput();
	}
     616:	08 95       	ret

00000618 <CPixelLEDController<(EOrder)66, 1, 4294967295ul>::show(CRGB const*, int, CRGB)>:
_ZN19CPixelLEDControllerIL6EOrder66ELi1ELm4294967295EE4showEPK4CRGBiS2_():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:635

    /// Write the passed in RGB data out to the LEDs managed by this controller
    /// @param data the RGB data to write out to the strip
    /// @param nLeds the number of LEDs being written out
    /// @param scale the RGB scaling to apply to each LED before writing it out
    virtual void show(const struct CRGB *data, int nLeds, CRGB scale) {
     618:	6f 92       	push	r6
     61a:	7f 92       	push	r7
     61c:	8f 92       	push	r8
     61e:	cf 92       	push	r12
     620:	df 92       	push	r13
     622:	ef 92       	push	r14
     624:	ff 92       	push	r15
     626:	0f 93       	push	r16
     628:	1f 93       	push	r17
     62a:	cf 93       	push	r28
     62c:	df 93       	push	r29
     62e:	cd b7       	in	r28, 0x3d	; 61
     630:	de b7       	in	r29, 0x3e	; 62
     632:	62 97       	sbiw	r28, 0x12	; 18
     634:	0f b6       	in	r0, 0x3f	; 63
     636:	f8 94       	cli
     638:	de bf       	out	0x3e, r29	; 62
     63a:	0f be       	out	0x3f, r0	; 63
     63c:	cd bf       	out	0x3d, r28	; 61
     63e:	6c 01       	movw	r12, r24
     640:	7a 01       	movw	r14, r20
     642:	38 01       	movw	r6, r16
     644:	82 2e       	mov	r8, r18
     646:	dc 01       	movw	r26, r24
     648:	1c 96       	adiw	r26, 0x0c	; 12
     64a:	2c 91       	ld	r18, X
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:636
        PixelController<RGB_ORDER, LANES, MASK> pixels(data, nLeds < 0 ? -nLeds : nLeds, scale, getDither());
     64c:	ca 01       	movw	r24, r20
     64e:	57 ff       	sbrs	r21, 7
     650:	04 c0       	rjmp	.+8      	; 0x65a <CPixelLEDController<(EOrder)66, 1, 4294967295ul>::show(CRGB const*, int, CRGB)+0x42>
     652:	88 27       	eor	r24, r24
     654:	99 27       	eor	r25, r25
     656:	84 1b       	sub	r24, r20
     658:	95 0b       	sbc	r25, r21
__base_ctor ():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:314
        /// Constructor
        /// @param d pointer to LED data
        /// @param len length of the LED data
        /// @param s LED scale values, as CRGB struct
        /// @param dither dither setting for the LEDs
        PixelController(const CRGB *d, int len, CRGB & s, EDitherMode dither = BINARY_DITHER) : mData((const uint8_t*)d), mLen(len), mLenRemaining(len), mScale(s) {
     65a:	7a 83       	std	Y+2, r23	; 0x02
     65c:	69 83       	std	Y+1, r22	; 0x01
     65e:	9c 83       	std	Y+4, r25	; 0x04
     660:	8b 83       	std	Y+3, r24	; 0x03
     662:	9e 83       	std	Y+6, r25	; 0x06
     664:	8d 83       	std	Y+5, r24	; 0x05
     666:	6d 86       	std	Y+13, r6	; 0x0d
     668:	7e 86       	std	Y+14, r7	; 0x0e
     66a:	8f 86       	std	Y+15, r8	; 0x0f
enable_dithering():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:438
        /// If dithering is set to enabled, this will re-init the dithering values
        /// (init_binary_dithering()). Otherwise it will clear the stored dithering
        /// data.
        /// @param dither the dither setting
        void enable_dithering(EDitherMode dither) {
            switch(dither) {
     66c:	21 30       	cpi	r18, 0x01	; 1
     66e:	41 f5       	brne	.+80     	; 0x6c0 <CPixelLEDController<(EOrder)66, 1, 4294967295ul>::show(CRGB const*, int, CRGB)+0xa8>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:439
                case BINARY_DITHER: init_binary_dithering(); break;
     670:	ce 01       	movw	r24, r28
     672:	01 96       	adiw	r24, 0x01	; 1
     674:	b8 dd       	rcall	.-1168   	; 0x1e6 <PixelController<(EOrder)66, 1, 4294967295ul>::init_binary_dithering()>
__base_ctor ():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:316
        /// @param len length of the LED data
        /// @param s LED scale values, as CRGB struct
        /// @param dither dither setting for the LEDs
        PixelController(const CRGB *d, int len, CRGB & s, EDitherMode dither = BINARY_DITHER) : mData((const uint8_t*)d), mLen(len), mLenRemaining(len), mScale(s) {
            enable_dithering(dither);
            mAdvance = 3;
     676:	83 e0       	ldi	r24, 0x03	; 3
     678:	88 8b       	std	Y+16, r24	; 0x10
initOffsets():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:290
        /// Initialize the PixelController::mOffsets array based on the length of the strip
        /// @param len the number of LEDs in one lane of the strip
        void initOffsets(int len) {
          int nOffset = 0;
          for(int i = 0; i < LANES; ++i) {
            mOffsets[i] = nOffset;
     67a:	1a 8a       	std	Y+18, r1	; 0x12
     67c:	19 8a       	std	Y+17, r1	; 0x11
_ZN19CPixelLEDControllerIL6EOrder66ELi1ELm4294967295EE4showEPK4CRGBiS2_():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:637
    /// @param data the RGB data to write out to the strip
    /// @param nLeds the number of LEDs being written out
    /// @param scale the RGB scaling to apply to each LED before writing it out
    virtual void show(const struct CRGB *data, int nLeds, CRGB scale) {
        PixelController<RGB_ORDER, LANES, MASK> pixels(data, nLeds < 0 ? -nLeds : nLeds, scale, getDither());
        if(nLeds < 0) {
     67e:	f7 fe       	sbrs	r15, 7
     680:	02 c0       	rjmp	.+4      	; 0x686 <CPixelLEDController<(EOrder)66, 1, 4294967295ul>::show(CRGB const*, int, CRGB)+0x6e>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:639
            // nLeds < 0 implies that we want to show them in reverse
            pixels.mAdvance = -pixels.mAdvance;
     682:	8d ef       	ldi	r24, 0xFD	; 253
     684:	88 8b       	std	Y+16, r24	; 0x10
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:641
        }
        showPixels(pixels);
     686:	d6 01       	movw	r26, r12
     688:	ed 91       	ld	r30, X+
     68a:	fc 91       	ld	r31, X
     68c:	06 84       	ldd	r0, Z+14	; 0x0e
     68e:	f7 85       	ldd	r31, Z+15	; 0x0f
     690:	e0 2d       	mov	r30, r0
     692:	be 01       	movw	r22, r28
     694:	6f 5f       	subi	r22, 0xFF	; 255
     696:	7f 4f       	sbci	r23, 0xFF	; 255
     698:	c6 01       	movw	r24, r12
     69a:	09 95       	icall
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:642
    }
     69c:	62 96       	adiw	r28, 0x12	; 18
     69e:	0f b6       	in	r0, 0x3f	; 63
     6a0:	f8 94       	cli
     6a2:	de bf       	out	0x3e, r29	; 62
     6a4:	0f be       	out	0x3f, r0	; 63
     6a6:	cd bf       	out	0x3d, r28	; 61
     6a8:	df 91       	pop	r29
     6aa:	cf 91       	pop	r28
     6ac:	1f 91       	pop	r17
     6ae:	0f 91       	pop	r16
     6b0:	ff 90       	pop	r15
     6b2:	ef 90       	pop	r14
     6b4:	df 90       	pop	r13
     6b6:	cf 90       	pop	r12
     6b8:	8f 90       	pop	r8
     6ba:	7f 90       	pop	r7
     6bc:	6f 90       	pop	r6
     6be:	08 95       	ret
enable_dithering():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:440
        /// data.
        /// @param dither the dither setting
        void enable_dithering(EDitherMode dither) {
            switch(dither) {
                case BINARY_DITHER: init_binary_dithering(); break;
                default: d[0]=d[1]=d[2]=e[0]=e[1]=e[2]=0; break;
     6c0:	1c 86       	std	Y+12, r1	; 0x0c
     6c2:	1b 86       	std	Y+11, r1	; 0x0b
     6c4:	1a 86       	std	Y+10, r1	; 0x0a
     6c6:	19 86       	std	Y+9, r1	; 0x09
     6c8:	18 86       	std	Y+8, r1	; 0x08
     6ca:	1f 82       	std	Y+7, r1	; 0x07
     6cc:	d4 cf       	rjmp	.-88     	; 0x676 <CPixelLEDController<(EOrder)66, 1, 4294967295ul>::show(CRGB const*, int, CRGB)+0x5e>

000006ce <CPixelLEDController<(EOrder)66, 1, 4294967295ul>::showColor(CRGB const&, int, CRGB)>:
_ZN19CPixelLEDControllerIL6EOrder66ELi1ELm4294967295EE9showColorERK4CRGBiS2_():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:626

    /// Set all the LEDs on the controller to a given color
    /// @param data the CRGB color to set the LEDs to
    /// @param nLeds the number of LEDs to set to this color
    /// @param scale the RGB scaling value for outputting color
    virtual void showColor(const struct CRGB & data, int nLeds, CRGB scale) {
     6ce:	ef 92       	push	r14
     6d0:	ff 92       	push	r15
     6d2:	0f 93       	push	r16
     6d4:	1f 93       	push	r17
     6d6:	cf 93       	push	r28
     6d8:	df 93       	push	r29
     6da:	cd b7       	in	r28, 0x3d	; 61
     6dc:	de b7       	in	r29, 0x3e	; 62
     6de:	62 97       	sbiw	r28, 0x12	; 18
     6e0:	0f b6       	in	r0, 0x3f	; 63
     6e2:	f8 94       	cli
     6e4:	de bf       	out	0x3e, r29	; 62
     6e6:	0f be       	out	0x3f, r0	; 63
     6e8:	cd bf       	out	0x3d, r28	; 61
     6ea:	7c 01       	movw	r14, r24
     6ec:	dc 01       	movw	r26, r24
     6ee:	1c 96       	adiw	r26, 0x0c	; 12
     6f0:	8c 91       	ld	r24, X
__base_ctor ():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:325
        /// Constructor
        /// @param d pointer to LED data
        /// @param len length of the LED data
        /// @param s LED scale values, as CRGB struct
        /// @param dither dither setting for the LEDs
        PixelController(const CRGB &d, int len, CRGB & s, EDitherMode dither = BINARY_DITHER) : mData((const uint8_t*)&d), mLen(len), mLenRemaining(len), mScale(s) {
     6f2:	7a 83       	std	Y+2, r23	; 0x02
     6f4:	69 83       	std	Y+1, r22	; 0x01
     6f6:	5c 83       	std	Y+4, r21	; 0x04
     6f8:	4b 83       	std	Y+3, r20	; 0x03
     6fa:	5e 83       	std	Y+6, r21	; 0x06
     6fc:	4d 83       	std	Y+5, r20	; 0x05
     6fe:	0d 87       	std	Y+13, r16	; 0x0d
     700:	1e 87       	std	Y+14, r17	; 0x0e
     702:	2f 87       	std	Y+15, r18	; 0x0f
enable_dithering():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:438
        /// If dithering is set to enabled, this will re-init the dithering values
        /// (init_binary_dithering()). Otherwise it will clear the stored dithering
        /// data.
        /// @param dither the dither setting
        void enable_dithering(EDitherMode dither) {
            switch(dither) {
     704:	81 30       	cpi	r24, 0x01	; 1
     706:	f1 f4       	brne	.+60     	; 0x744 <CPixelLEDController<(EOrder)66, 1, 4294967295ul>::showColor(CRGB const&, int, CRGB)+0x76>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:439
                case BINARY_DITHER: init_binary_dithering(); break;
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	6c dd       	rcall	.-1320   	; 0x1e6 <PixelController<(EOrder)66, 1, 4294967295ul>::init_binary_dithering()>
__base_ctor ():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:327
        /// @param len length of the LED data
        /// @param s LED scale values, as CRGB struct
        /// @param dither dither setting for the LEDs
        PixelController(const CRGB &d, int len, CRGB & s, EDitherMode dither = BINARY_DITHER) : mData((const uint8_t*)&d), mLen(len), mLenRemaining(len), mScale(s) {
            enable_dithering(dither);
            mAdvance = 0;
     70e:	18 8a       	std	Y+16, r1	; 0x10
initOffsets():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:290
        /// Initialize the PixelController::mOffsets array based on the length of the strip
        /// @param len the number of LEDs in one lane of the strip
        void initOffsets(int len) {
          int nOffset = 0;
          for(int i = 0; i < LANES; ++i) {
            mOffsets[i] = nOffset;
     710:	1a 8a       	std	Y+18, r1	; 0x12
     712:	19 8a       	std	Y+17, r1	; 0x11
_ZN19CPixelLEDControllerIL6EOrder66ELi1ELm4294967295EE9showColorERK4CRGBiS2_():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:628
    /// @param data the CRGB color to set the LEDs to
    /// @param nLeds the number of LEDs to set to this color
    /// @param scale the RGB scaling value for outputting color
    virtual void showColor(const struct CRGB & data, int nLeds, CRGB scale) {
        PixelController<RGB_ORDER, LANES, MASK> pixels(data, nLeds, scale, getDither());
        showPixels(pixels);
     714:	d7 01       	movw	r26, r14
     716:	ed 91       	ld	r30, X+
     718:	fc 91       	ld	r31, X
     71a:	06 84       	ldd	r0, Z+14	; 0x0e
     71c:	f7 85       	ldd	r31, Z+15	; 0x0f
     71e:	e0 2d       	mov	r30, r0
     720:	be 01       	movw	r22, r28
     722:	6f 5f       	subi	r22, 0xFF	; 255
     724:	7f 4f       	sbci	r23, 0xFF	; 255
     726:	c7 01       	movw	r24, r14
     728:	09 95       	icall
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:629
    }
     72a:	62 96       	adiw	r28, 0x12	; 18
     72c:	0f b6       	in	r0, 0x3f	; 63
     72e:	f8 94       	cli
     730:	de bf       	out	0x3e, r29	; 62
     732:	0f be       	out	0x3f, r0	; 63
     734:	cd bf       	out	0x3d, r28	; 61
     736:	df 91       	pop	r29
     738:	cf 91       	pop	r28
     73a:	1f 91       	pop	r17
     73c:	0f 91       	pop	r16
     73e:	ff 90       	pop	r15
     740:	ef 90       	pop	r14
     742:	08 95       	ret
enable_dithering():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:440
        /// data.
        /// @param dither the dither setting
        void enable_dithering(EDitherMode dither) {
            switch(dither) {
                case BINARY_DITHER: init_binary_dithering(); break;
                default: d[0]=d[1]=d[2]=e[0]=e[1]=e[2]=0; break;
     744:	1c 86       	std	Y+12, r1	; 0x0c
     746:	1b 86       	std	Y+11, r1	; 0x0b
     748:	1a 86       	std	Y+10, r1	; 0x0a
     74a:	19 86       	std	Y+9, r1	; 0x09
     74c:	18 86       	std	Y+8, r1	; 0x08
     74e:	1f 82       	std	Y+7, r1	; 0x07
     750:	de cf       	rjmp	.-68     	; 0x70e <CPixelLEDController<(EOrder)66, 1, 4294967295ul>::showColor(CRGB const&, int, CRGB)+0x40>

00000752 <RampInit()>:
_Z8RampInitv():
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:504
	}
}

void RampInit()	{
	uint8_t i;
	for(Vect[0] = 0, i=1; i < NUM_LEDS; i++)	{ Vect[i] = Vect[i-1]+255/NUM_LEDS;};
     752:	10 92 3e 01 	sts	0x013E, r1	; 0x80013e <Vect>
     756:	ee e3       	ldi	r30, 0x3E	; 62
     758:	f1 e0       	ldi	r31, 0x01	; 1
     75a:	81 91       	ld	r24, Z+
     75c:	87 5f       	subi	r24, 0xF7	; 247
     75e:	80 83       	st	Z, r24
     760:	81 e0       	ldi	r24, 0x01	; 1
     762:	e9 35       	cpi	r30, 0x59	; 89
     764:	f8 07       	cpc	r31, r24
     766:	c9 f7       	brne	.-14     	; 0x75a <RampInit()+0x8>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:505
}
     768:	08 95       	ret

0000076a <ColorLeds(CRGB)>:
_Z9ColorLeds4CRGB():
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:495
		else if	(ColorSwitch == PurpleBlueDD)	{TempColor = CRGB(LedPointer[TempIndex], 0, 255);}
		leds[iLed] = TempColor;
	}
}

void ColorLeds(CRGB color)	{
     76a:	e8 ed       	ldi	r30, 0xD8	; 216
     76c:	f0 e0       	ldi	r31, 0x00	; 0
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:498
	uint8_t iLed;
	for (iLed=0; iLed<NUM_LEDS; iLed++) {
		leds[iLed] = color; 
     76e:	61 93       	st	Z+, r22
     770:	71 93       	st	Z+, r23
     772:	81 93       	st	Z+, r24
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:497
	}
}

void ColorLeds(CRGB color)	{
	uint8_t iLed;
	for (iLed=0; iLed<NUM_LEDS; iLed++) {
     774:	91 e0       	ldi	r25, 0x01	; 1
     776:	ec 32       	cpi	r30, 0x2C	; 44
     778:	f9 07       	cpc	r31, r25
     77a:	c9 f7       	brne	.-14     	; 0x76e <ColorLeds(CRGB)+0x4>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:500
		leds[iLed] = color; 
	}
}
     77c:	08 95       	ret

0000077e <ShiftLed(unsigned char)>:
_Z8ShiftLedh():
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:483
void ShiftLed(uint8_t ColorSwitch)	{
	uint8_t iLed;
	CRGB TempColor;
	uint8_t TempIndex;
	for (iLed=0; iLed<NUM_LEDS; iLed++) {
		TempIndex = iLed + iFrame;
     77e:	50 91 5e 01 	lds	r21, 0x015E	; 0x80015e <iFrame>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:490
			TempIndex = TempIndex - NUM_LEDS;
		}
		if		(ColorSwitch == RedDD)			{TempColor = CRGB(LedPointer[TempIndex], 0, 0);}
		else if	(ColorSwitch == GreenDD)		{TempColor = CRGB(0, LedPointer[TempIndex], 0);}
		else if	(ColorSwitch == BlueDD)			{TempColor = CRGB(0, 0, LedPointer[TempIndex]);}
		else if	(ColorSwitch == PurpleBlueDD)	{TempColor = CRGB(LedPointer[TempIndex], 0, 255);}
     782:	60 91 5a 01 	lds	r22, 0x015A	; 0x80015a <LedPointer>
     786:	70 91 5b 01 	lds	r23, 0x015B	; 0x80015b <LedPointer+0x1>
     78a:	a8 ed       	ldi	r26, 0xD8	; 216
     78c:	b0 e0       	ldi	r27, 0x00	; 0
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:482

void ShiftLed(uint8_t ColorSwitch)	{
	uint8_t iLed;
	CRGB TempColor;
	uint8_t TempIndex;
	for (iLed=0; iLed<NUM_LEDS; iLed++) {
     78e:	20 e0       	ldi	r18, 0x00	; 0
     790:	e5 2f       	mov	r30, r21
     792:	e2 0f       	add	r30, r18
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:484
		TempIndex = iLed + iFrame;
		while(TempIndex >= NUM_LEDS)	{ 
     794:	ec 31       	cpi	r30, 0x1C	; 28
     796:	10 f0       	brcs	.+4      	; 0x79c <ShiftLed(unsigned char)+0x1e>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:485
			TempIndex = TempIndex - NUM_LEDS;
     798:	ec 51       	subi	r30, 0x1C	; 28
     79a:	fc cf       	rjmp	.-8      	; 0x794 <ShiftLed(unsigned char)+0x16>
     79c:	e6 0f       	add	r30, r22
     79e:	f7 2f       	mov	r31, r23
     7a0:	f1 1d       	adc	r31, r1
     7a2:	90 81       	ld	r25, Z
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:487
		}
		if		(ColorSwitch == RedDD)			{TempColor = CRGB(LedPointer[TempIndex], 0, 0);}
     7a4:	88 23       	and	r24, r24
     7a6:	41 f0       	breq	.+16     	; 0x7b8 <ShiftLed(unsigned char)+0x3a>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:488
		else if	(ColorSwitch == GreenDD)		{TempColor = CRGB(0, LedPointer[TempIndex], 0);}
     7a8:	81 30       	cpi	r24, 0x01	; 1
     7aa:	a1 f0       	breq	.+40     	; 0x7d4 <ShiftLed(unsigned char)+0x56>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:490
		else if	(ColorSwitch == BlueDD)			{TempColor = CRGB(0, 0, LedPointer[TempIndex]);}
		else if	(ColorSwitch == PurpleBlueDD)	{TempColor = CRGB(LedPointer[TempIndex], 0, 255);}
     7ac:	3f ef       	ldi	r19, 0xFF	; 255
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:489
		while(TempIndex >= NUM_LEDS)	{ 
			TempIndex = TempIndex - NUM_LEDS;
		}
		if		(ColorSwitch == RedDD)			{TempColor = CRGB(LedPointer[TempIndex], 0, 0);}
		else if	(ColorSwitch == GreenDD)		{TempColor = CRGB(0, LedPointer[TempIndex], 0);}
		else if	(ColorSwitch == BlueDD)			{TempColor = CRGB(0, 0, LedPointer[TempIndex]);}
     7ae:	82 30       	cpi	r24, 0x02	; 2
     7b0:	21 f4       	brne	.+8      	; 0x7ba <ShiftLed(unsigned char)+0x3c>
     7b2:	39 2f       	mov	r19, r25
     7b4:	40 e0       	ldi	r20, 0x00	; 0
     7b6:	10 c0       	rjmp	.+32     	; 0x7d8 <ShiftLed(unsigned char)+0x5a>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:487
	for (iLed=0; iLed<NUM_LEDS; iLed++) {
		TempIndex = iLed + iFrame;
		while(TempIndex >= NUM_LEDS)	{ 
			TempIndex = TempIndex - NUM_LEDS;
		}
		if		(ColorSwitch == RedDD)			{TempColor = CRGB(LedPointer[TempIndex], 0, 0);}
     7b8:	30 e0       	ldi	r19, 0x00	; 0
     7ba:	40 e0       	ldi	r20, 0x00	; 0
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:491
		else if	(ColorSwitch == GreenDD)		{TempColor = CRGB(0, LedPointer[TempIndex], 0);}
		else if	(ColorSwitch == BlueDD)			{TempColor = CRGB(0, 0, LedPointer[TempIndex]);}
		else if	(ColorSwitch == PurpleBlueDD)	{TempColor = CRGB(LedPointer[TempIndex], 0, 255);}
		leds[iLed] = TempColor;
     7bc:	9c 93       	st	X, r25
     7be:	11 96       	adiw	r26, 0x01	; 1
     7c0:	4c 93       	st	X, r20
     7c2:	11 97       	sbiw	r26, 0x01	; 1
     7c4:	12 96       	adiw	r26, 0x02	; 2
     7c6:	3c 93       	st	X, r19
     7c8:	12 97       	sbiw	r26, 0x02	; 2
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:482

void ShiftLed(uint8_t ColorSwitch)	{
	uint8_t iLed;
	CRGB TempColor;
	uint8_t TempIndex;
	for (iLed=0; iLed<NUM_LEDS; iLed++) {
     7ca:	2f 5f       	subi	r18, 0xFF	; 255
     7cc:	13 96       	adiw	r26, 0x03	; 3
     7ce:	2c 31       	cpi	r18, 0x1C	; 28
     7d0:	f9 f6       	brne	.-66     	; 0x790 <ShiftLed(unsigned char)+0x12>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:493
		else if	(ColorSwitch == GreenDD)		{TempColor = CRGB(0, LedPointer[TempIndex], 0);}
		else if	(ColorSwitch == BlueDD)			{TempColor = CRGB(0, 0, LedPointer[TempIndex]);}
		else if	(ColorSwitch == PurpleBlueDD)	{TempColor = CRGB(LedPointer[TempIndex], 0, 255);}
		leds[iLed] = TempColor;
	}
}
     7d2:	08 95       	ret
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:488
		TempIndex = iLed + iFrame;
		while(TempIndex >= NUM_LEDS)	{ 
			TempIndex = TempIndex - NUM_LEDS;
		}
		if		(ColorSwitch == RedDD)			{TempColor = CRGB(LedPointer[TempIndex], 0, 0);}
		else if	(ColorSwitch == GreenDD)		{TempColor = CRGB(0, LedPointer[TempIndex], 0);}
     7d4:	49 2f       	mov	r20, r25
     7d6:	30 e0       	ldi	r19, 0x00	; 0
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:489
		else if	(ColorSwitch == BlueDD)			{TempColor = CRGB(0, 0, LedPointer[TempIndex]);}
     7d8:	90 e0       	ldi	r25, 0x00	; 0
     7da:	f0 cf       	rjmp	.-32     	; 0x7bc <ShiftLed(unsigned char)+0x3e>

000007dc <CLEDController::getMaxRefreshRate() const>:
_ZNK14CLEDController17getMaxRefreshRateEv():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:249
      #endif
    }

    /// Gets the maximum possible refresh rate of the strip
    /// @returns the maximum refresh rate, in frames per second (FPS)
    virtual uint16_t getMaxRefreshRate() const { return 0; }
     7dc:	90 e0       	ldi	r25, 0x00	; 0
     7de:	80 e0       	ldi	r24, 0x00	; 0
     7e0:	08 95       	ret

000007e2 <CLEDController::size()>:
_ZN14CLEDController4sizeEv():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:165
        }
    }

    /// How many LEDs does this controller manage?
    /// @returns CLEDController::m_nLeds
    virtual int size() { return m_nLeds; }
     7e2:	fc 01       	movw	r30, r24
     7e4:	85 85       	ldd	r24, Z+13	; 0x0d
     7e6:	96 85       	ldd	r25, Z+14	; 0x0e
     7e8:	08 95       	ret

000007ea <CLEDController::clearLeds(int)>:
_ZN14CLEDController9clearLedsEi():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:99
    /// Initialize the LED controller
    virtual void init() = 0;

    /// Clear out/zero out the given number of LEDs.
    /// @param nLeds the number of LEDs to clear
    virtual void clearLeds(int nLeds) { showColor(CRGB::Black, nLeds, CRGB::Black); }
     7ea:	0f 93       	push	r16
     7ec:	1f 93       	push	r17
     7ee:	cf 93       	push	r28
     7f0:	df 93       	push	r29
     7f2:	00 d0       	rcall	.+0      	; 0x7f4 <CLEDController::clearLeds(int)+0xa>
     7f4:	1f 92       	push	r1
     7f6:	cd b7       	in	r28, 0x3d	; 61
     7f8:	de b7       	in	r29, 0x3e	; 62
     7fa:	ab 01       	movw	r20, r22
_ZN4CRGBC2Em():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:176
    }

    /// Allow construction from 32-bit (really 24-bit) bit 0xRRGGBB color code
    /// @param colorcode a packed 24 bit color code
    inline CRGB( uint32_t colorcode)  __attribute__((always_inline))
    : r((colorcode >> 16) & 0xFF), g((colorcode >> 8) & 0xFF), b((colorcode >> 0) & 0xFF)
     7fc:	19 82       	std	Y+1, r1	; 0x01
     7fe:	1a 82       	std	Y+2, r1	; 0x02
     800:	1b 82       	std	Y+3, r1	; 0x03
showColor():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:120
    /// @param data the CRGB color to set the LEDs to
    /// @param nLeds the number of LEDs in the data array
    /// @param brightness the brightness of the LEDs
    /// @see showColor(const struct CRGB&, int, CRGB)
    void showColor(const struct CRGB &data, int nLeds, uint8_t brightness) {
        showColor(data, nLeds, getAdjustment(brightness));
     802:	dc 01       	movw	r26, r24
     804:	ed 91       	ld	r30, X+
     806:	fc 91       	ld	r31, X
     808:	01 90       	ld	r0, Z+
     80a:	f0 81       	ld	r31, Z
     80c:	e0 2d       	mov	r30, r0
     80e:	00 e0       	ldi	r16, 0x00	; 0
     810:	10 e0       	ldi	r17, 0x00	; 0
     812:	20 e0       	ldi	r18, 0x00	; 0
     814:	be 01       	movw	r22, r28
     816:	6f 5f       	subi	r22, 0xFF	; 255
     818:	7f 4f       	sbci	r23, 0xFF	; 255
     81a:	09 95       	icall
_ZN14CLEDController9clearLedsEi():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:99
    /// Initialize the LED controller
    virtual void init() = 0;

    /// Clear out/zero out the given number of LEDs.
    /// @param nLeds the number of LEDs to clear
    virtual void clearLeds(int nLeds) { showColor(CRGB::Black, nLeds, CRGB::Black); }
     81c:	0f 90       	pop	r0
     81e:	0f 90       	pop	r0
     820:	0f 90       	pop	r0
     822:	df 91       	pop	r29
     824:	cf 91       	pop	r28
     826:	1f 91       	pop	r17
     828:	0f 91       	pop	r16
     82a:	08 95       	ret

0000082c <__cxa_pure_virtual>:
__cxa_pure_virtual():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/abi.cpp:26
extern "C" void __cxa_pure_virtual(void) __attribute__ ((__noreturn__));
extern "C" void __cxa_deleted_virtual(void) __attribute__ ((__noreturn__));

namespace std {
  [[gnu::weak, noreturn]] void terminate() {
    abort();
     82c:	45 d9       	rcall	.-3446   	; 0xfffffab8 <__eeprom_end+0xff7efab8>

0000082e <__vector_9>:
__vector_9():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:159
#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)
ISR(TIM0_OVF_vect)
#else
ISR(TIMER0_OVF_vect)
#endif
{
     82e:	1f 92       	push	r1
     830:	0f 92       	push	r0
     832:	0f b6       	in	r0, 0x3f	; 63
     834:	0f 92       	push	r0
     836:	11 24       	eor	r1, r1
     838:	2f 93       	push	r18
     83a:	3f 93       	push	r19
     83c:	8f 93       	push	r24
     83e:	9f 93       	push	r25
     840:	af 93       	push	r26
     842:	bf 93       	push	r27
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:167
  static unsigned char timer0_exact = 0;
#endif

  // copy these to local variables so they can be stored in registers
  // (volatile variables must be read from memory on every access, so this saves time)
  unsigned long m = timer0_millis;
     844:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <timer0_millis>
     848:	90 91 c9 00 	lds	r25, 0x00C9	; 0x8000c9 <timer0_millis+0x1>
     84c:	a0 91 ca 00 	lds	r26, 0x00CA	; 0x8000ca <timer0_millis+0x2>
     850:	b0 91 cb 00 	lds	r27, 0x00CB	; 0x8000cb <timer0_millis+0x3>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:168
  unsigned char f = timer0_fract;
     854:	30 91 a8 00 	lds	r19, 0x00A8	; 0x8000a8 <timer0_fract>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:170

  f += FRACT_INC FRACT_INC_PLUS;
     858:	26 e0       	ldi	r18, 0x06	; 6
     85a:	23 0f       	add	r18, r19
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:200
    ++f;
  }
#endif
#endif // CORRECT_EXACT_MILLIS

  if (f >= FRACT_MAX) {
     85c:	2d 37       	cpi	r18, 0x7D	; 125
     85e:	68 f1       	brcs	.+90     	; 0x8ba <__vector_9+0x8c>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:201
    f -= FRACT_MAX;
     860:	29 e8       	ldi	r18, 0x89	; 137
     862:	23 0f       	add	r18, r19
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:202
    m += MILLIS_INC + 1;
     864:	03 96       	adiw	r24, 0x03	; 3
     866:	a1 1d       	adc	r26, r1
     868:	b1 1d       	adc	r27, r1
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:208
  }
  else {
    m += MILLIS_INC;
  }

  timer0_fract = f;
     86a:	20 93 a8 00 	sts	0x00A8, r18	; 0x8000a8 <timer0_fract>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:209
  timer0_millis = m;
     86e:	80 93 c8 00 	sts	0x00C8, r24	; 0x8000c8 <timer0_millis>
     872:	90 93 c9 00 	sts	0x00C9, r25	; 0x8000c9 <timer0_millis+0x1>
     876:	a0 93 ca 00 	sts	0x00CA, r26	; 0x8000ca <timer0_millis+0x2>
     87a:	b0 93 cb 00 	sts	0x00CB, r27	; 0x8000cb <timer0_millis+0x3>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:211
#ifndef CORRECT_EXACT_MICROS
  timer0_overflow_count++;
     87e:	80 91 a9 00 	lds	r24, 0x00A9	; 0x8000a9 <timer0_overflow_count>
     882:	90 91 aa 00 	lds	r25, 0x00AA	; 0x8000aa <timer0_overflow_count+0x1>
     886:	a0 91 ab 00 	lds	r26, 0x00AB	; 0x8000ab <timer0_overflow_count+0x2>
     88a:	b0 91 ac 00 	lds	r27, 0x00AC	; 0x8000ac <timer0_overflow_count+0x3>
     88e:	01 96       	adiw	r24, 0x01	; 1
     890:	a1 1d       	adc	r26, r1
     892:	b1 1d       	adc	r27, r1
     894:	80 93 a9 00 	sts	0x00A9, r24	; 0x8000a9 <timer0_overflow_count>
     898:	90 93 aa 00 	sts	0x00AA, r25	; 0x8000aa <timer0_overflow_count+0x1>
     89c:	a0 93 ab 00 	sts	0x00AB, r26	; 0x8000ab <timer0_overflow_count+0x2>
     8a0:	b0 93 ac 00 	sts	0x00AC, r27	; 0x8000ac <timer0_overflow_count+0x3>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:213
#endif
}
     8a4:	bf 91       	pop	r27
     8a6:	af 91       	pop	r26
     8a8:	9f 91       	pop	r25
     8aa:	8f 91       	pop	r24
     8ac:	3f 91       	pop	r19
     8ae:	2f 91       	pop	r18
     8b0:	0f 90       	pop	r0
     8b2:	0f be       	out	0x3f, r0	; 63
     8b4:	0f 90       	pop	r0
     8b6:	1f 90       	pop	r1
     8b8:	18 95       	reti
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:205
  if (f >= FRACT_MAX) {
    f -= FRACT_MAX;
    m += MILLIS_INC + 1;
  }
  else {
    m += MILLIS_INC;
     8ba:	02 96       	adiw	r24, 0x02	; 2
     8bc:	a1 1d       	adc	r26, r1
     8be:	b1 1d       	adc	r27, r1
     8c0:	d4 cf       	rjmp	.-88     	; 0x86a <__vector_9+0x3c>

000008c2 <main>:
main():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/main.cpp:34

//void setupUSB() __attribute__((weak));
//void setupUSB() { }

int main(void)
{
     8c2:	cf 93       	push	r28
     8c4:	df 93       	push	r29
     8c6:	cd b7       	in	r28, 0x3d	; 61
     8c8:	de b7       	in	r29, 0x3e	; 62
     8ca:	29 97       	sbiw	r28, 0x09	; 9
     8cc:	0f b6       	in	r0, 0x3f	; 63
     8ce:	f8 94       	cli
     8d0:	de bf       	out	0x3e, r29	; 62
     8d2:	0f be       	out	0x3f, r0	; 63
     8d4:	cd bf       	out	0x3d, r28	; 61
init():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:945

void init()
{
  // this needs to be called before setup() or some functions won't
  // work there
  sei();
     8d6:	78 94       	sei
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:966
#if defined(__AVR_ATmega64__) || defined(__AVR_ATmega128__)
  // CPU specific: different values for the ATmega64/128
  TCCR0 |= _BV(WGM01) | _BV(WGM00) | _BV(CS02);
#elif defined(TCCR0) && defined(CS01) && defined(CS00)
  // This combination is for the ATmega8535, ATmega8, ATmega16, ATmega32, ATmega8515, ATmega162
  TCCR0 |= _BV(CS01) | _BV(CS00);
     8d8:	83 b7       	in	r24, 0x33	; 51
     8da:	83 60       	ori	r24, 0x03	; 3
     8dc:	83 bf       	out	0x33, r24	; 51
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:982
  #error Timer 0 prescale factor 64 not set correctly
#endif

// Enable timer 0 overflow interrupt
#if defined(TIMSK) && defined(TOIE0)
  TIMSK |= _BV(TOIE0);
     8de:	89 b7       	in	r24, 0x39	; 57
     8e0:	81 60       	ori	r24, 0x01	; 1
     8e2:	89 bf       	out	0x39, r24	; 57
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:995
// this is better for motors as it ensures an even waveform
// note, however, that fast pwm mode can achieve a frequency of up
// 8 MHz (with a 16 MHz clock) at 50% duty cycle

#if defined(TCCR1B) && defined(CS11) && defined(CS10)
  TCCR1B = _BV(CS11); // Set timer 1 prescale factor to 64
     8e4:	82 e0       	ldi	r24, 0x02	; 2
     8e6:	8e bd       	out	0x2e, r24	; 46
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:997
#if F_CPU >= 8000000L
  TCCR1B |= _BV(CS10);
     8e8:	8e b5       	in	r24, 0x2e	; 46
     8ea:	81 60       	ori	r24, 0x01	; 1
     8ec:	8e bd       	out	0x2e, r24	; 46
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:1006
#if F_CPU >= 8000000L
  TCCR1 |= _BV(CS10);
#endif
#endif
#if defined(TCCR1A) && defined(WGM10)
  TCCR1A |= _BV(WGM10); // Put timer 1 in 8-bit phase correct pwm mode
     8ee:	8f b5       	in	r24, 0x2f	; 47
     8f0:	81 60       	ori	r24, 0x01	; 1
     8f2:	8f bd       	out	0x2f, r24	; 47
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:1011
#endif

// Set timer 2 prescale factor to 64
#if defined(TCCR2) && defined(CS22)
  TCCR2 |= _BV(CS22);
     8f4:	85 b5       	in	r24, 0x25	; 37
     8f6:	84 60       	ori	r24, 0x04	; 4
     8f8:	85 bd       	out	0x25, r24	; 37
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:1020
  TCCR2A |= _BV(CS22);
#endif

// Configure timer 2 for phase correct pwm (8-bit)
#if defined(TCCR2) && defined(WGM20)
  TCCR2 |= _BV(WGM20);
     8fa:	85 b5       	in	r24, 0x25	; 37
     8fc:	80 64       	ori	r24, 0x40	; 64
     8fe:	85 bd       	out	0x25, r24	; 37
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:1052
#if defined(ADCSRA)
  // set a2d prescaler so we are inside the desired 50-200 KHz range.
  #if F_CPU >= 16000000 // 16 MHz / 128 = 125 KHz
    ADCSRA = _BV(ADPS2) | _BV(ADPS1) | _BV(ADPS0) | _BV(ADEN);
  #elif F_CPU >= 8000000 // 8 MHz / 64 = 125 KHz
    ADCSRA = _BV(ADPS2) | _BV(ADPS1) | _BV(ADEN);
     900:	86 e8       	ldi	r24, 0x86	; 134
     902:	86 b9       	out	0x06, r24	; 6
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:1068

  // The bootloader connects pins 0 and 1 to the USART; disconnect them
  // here so they can be used as normal digital i/o; they will be
  // reconnected in Serial.begin()
#if defined(UCSRB)
  UCSRB = 0;
     904:	1a b8       	out	0x0a, r1	; 10
pinMode():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:31
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
  uint8_t bit = digitalPinToBitMask(pin);
     906:	e9 e6       	ldi	r30, 0x69	; 105
     908:	f0 e0       	ldi	r31, 0x00	; 0
     90a:	24 91       	lpm	r18, Z
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:32
  uint8_t port = digitalPinToPort(pin);
     90c:	e2 e5       	ldi	r30, 0x52	; 82
     90e:	f0 e0       	ldi	r31, 0x00	; 0
     910:	84 91       	lpm	r24, Z
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:35
  volatile uint8_t *reg, *out;

  if (port == NOT_A_PIN) return;
     912:	88 23       	and	r24, r24
     914:	c9 f0       	breq	.+50     	; 0x948 <main+0x86>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:38

  // JWS: can I let the optimizer do this?
  reg = portModeRegister(port);
     916:	90 e0       	ldi	r25, 0x00	; 0
     918:	88 0f       	add	r24, r24
     91a:	99 1f       	adc	r25, r25
     91c:	fc 01       	movw	r30, r24
     91e:	e0 5d       	subi	r30, 0xD0	; 208
     920:	ff 4f       	sbci	r31, 0xFF	; 255
     922:	45 91       	lpm	r20, Z+
     924:	54 91       	lpm	r21, Z
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:39
  out = portOutputRegister(port);
     926:	fc 01       	movw	r30, r24
     928:	ea 5d       	subi	r30, 0xDA	; 218
     92a:	ff 4f       	sbci	r31, 0xFF	; 255
     92c:	a5 91       	lpm	r26, Z+
     92e:	b4 91       	lpm	r27, Z
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:48
    cli();
    *reg &= ~bit;
    *out &= ~bit;
    SREG = oldSREG;
  } else if (mode == INPUT_PULLUP) {
    uint8_t oldSREG = SREG;
     930:	9f b7       	in	r25, 0x3f	; 63
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:49
    cli();
     932:	f8 94       	cli
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:50
    *reg &= ~bit;
     934:	fa 01       	movw	r30, r20
     936:	30 81       	ld	r19, Z
     938:	82 2f       	mov	r24, r18
     93a:	80 95       	com	r24
     93c:	83 23       	and	r24, r19
     93e:	80 83       	st	Z, r24
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:51
    *out |= bit;
     940:	ec 91       	ld	r30, X
     942:	e2 2b       	or	r30, r18
     944:	ec 93       	st	X, r30
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring_digital.c:52
    SREG = oldSREG;
     946:	9f bf       	out	0x3f, r25	; 63
addLeds():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.h:352
	/// @{

	/// Add a clockless based CLEDController instance to the world.
	template<template<uint8_t DATA_PIN, EOrder RGB_ORDER> class CHIPSET, uint8_t DATA_PIN, EOrder RGB_ORDER>
	static CLEDController &addLeds(struct CRGB *data, int nLedsOrOffset, int nLedsIfOffset = 0) {
		static CHIPSET<DATA_PIN, RGB_ORDER> c;
     948:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <guard variable for CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c>
     94c:	81 11       	cpse	r24, r1
     94e:	45 c0       	rjmp	.+138    	; 0x9da <main+0x118>
__base_ctor ():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:87
    /// @param scale the rgb scaling to apply to each led before writing it out
    virtual void show(const struct CRGB *data, int nLeds, CRGB scale) = 0;

public:
    /// Create an led controller object, add it to the chain of controllers
    CLEDController() : m_Data(NULL), m_ColorCorrection(UncorrectedColor), m_ColorTemperature(UncorrectedTemperature), m_DitherMode(BINARY_DITHER), m_nLeds(0) {
     950:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0x3>
     954:	10 92 b1 00 	sts	0x00B1, r1	; 0x8000b1 <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0x2>
_ZN4CRGBC2E18LEDColorCorrection():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:183
    }

    /// Allow construction from a LEDColorCorrection enum
    /// @param colorcode an LEDColorCorrect enumeration value
    inline CRGB( LEDColorCorrection colorcode) __attribute__((always_inline))
    : r((colorcode >> 16) & 0xFF), g((colorcode >> 8) & 0xFF), b((colorcode >> 0) & 0xFF)
     958:	8f ef       	ldi	r24, 0xFF	; 255
     95a:	80 93 b5 00 	sts	0x00B5, r24	; 0x8000b5 <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0x6>
     95e:	80 93 b6 00 	sts	0x00B6, r24	; 0x8000b6 <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0x7>
     962:	80 93 b7 00 	sts	0x00B7, r24	; 0x8000b7 <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0x8>
_ZN4CRGBC2E16ColorTemperature():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:191
    }

    /// Allow construction from a ColorTemperature enum
    /// @param colorcode an ColorTemperature enumeration value
    inline CRGB( ColorTemperature colorcode) __attribute__((always_inline))
    : r((colorcode >> 16) & 0xFF), g((colorcode >> 8) & 0xFF), b((colorcode >> 0) & 0xFF)
     966:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0x9>
     96a:	80 93 b9 00 	sts	0x00B9, r24	; 0x8000b9 <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0xa>
     96e:	80 93 ba 00 	sts	0x00BA, r24	; 0x8000ba <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0xb>
__base_ctor ():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:87
     972:	81 e0       	ldi	r24, 0x01	; 1
     974:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0xc>
     978:	10 92 bd 00 	sts	0x00BD, r1	; 0x8000bd <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0xe>
     97c:	10 92 bc 00 	sts	0x00BC, r1	; 0x8000bc <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0xd>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:88
        m_pNext = NULL;
     980:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0x5>
     984:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0x4>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:89
        if(m_pHead==NULL) { m_pHead = this; }
     988:	80 91 d2 00 	lds	r24, 0x00D2	; 0x8000d2 <CLEDController::m_pHead>
     98c:	90 91 d3 00 	lds	r25, 0x00D3	; 0x8000d3 <CLEDController::m_pHead+0x1>
     990:	89 2b       	or	r24, r25
     992:	31 f4       	brne	.+12     	; 0x9a0 <main+0xde>
     994:	8f ea       	ldi	r24, 0xAF	; 175
     996:	90 e0       	ldi	r25, 0x00	; 0
     998:	90 93 d3 00 	sts	0x00D3, r25	; 0x8000d3 <CLEDController::m_pHead+0x1>
     99c:	80 93 d2 00 	sts	0x00D2, r24	; 0x8000d2 <CLEDController::m_pHead>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:90
        if(m_pTail != NULL) { m_pTail->m_pNext = this; }
     9a0:	e0 91 ad 00 	lds	r30, 0x00AD	; 0x8000ad <CLEDController::m_pTail>
     9a4:	f0 91 ae 00 	lds	r31, 0x00AE	; 0x8000ae <CLEDController::m_pTail+0x1>
     9a8:	30 97       	sbiw	r30, 0x00	; 0
     9aa:	21 f0       	breq	.+8      	; 0x9b4 <main+0xf2>
     9ac:	8f ea       	ldi	r24, 0xAF	; 175
     9ae:	90 e0       	ldi	r25, 0x00	; 0
     9b0:	95 83       	std	Z+5, r25	; 0x05
     9b2:	84 83       	std	Z+4, r24	; 0x04
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:91
        m_pTail = this;
     9b4:	8f ea       	ldi	r24, 0xAF	; 175
     9b6:	90 e0       	ldi	r25, 0x00	; 0
     9b8:	90 93 ae 00 	sts	0x00AE, r25	; 0x8000ae <CLEDController::m_pTail+0x1>
     9bc:	80 93 ad 00 	sts	0x00AD, r24	; 0x8000ad <CLEDController::m_pTail>
_ZN8CMinWaitILi10EEC2Ev():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/fastled_delay.h:22
	/// Timestamp of the last time this was run, in microseconds
	uint16_t mLastMicros;

public:
	/// Constructor
	CMinWait() { mLastMicros = 0; }
     9c0:	10 92 bf 00 	sts	0x00BF, r1	; 0x8000bf <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0x10>
     9c4:	10 92 be 00 	sts	0x00BE, r1	; 0x8000be <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0xf>
__base_ctor ():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.h:132
template<uint8_t DATA_PIN, EOrder RGB_ORDER> class UCS1903B : public UCS1903BController800Khz<DATA_PIN, RGB_ORDER> {};           ///< @copydoc UCS1903BController800Khz
template<uint8_t DATA_PIN, EOrder RGB_ORDER> class UCS1904 : public UCS1904Controller800Khz<DATA_PIN, RGB_ORDER> {};             ///< @copydoc UCS1904Controller800Khz
template<uint8_t DATA_PIN, EOrder RGB_ORDER> class UCS2903 : public UCS2903Controller<DATA_PIN, RGB_ORDER> {};                   ///< @copydoc UCS2903Controller
template<uint8_t DATA_PIN, EOrder RGB_ORDER> class WS2812 : public WS2812Controller800Khz<DATA_PIN, RGB_ORDER> {};               ///< @copydoc WS2812Controller800Khz
template<uint8_t DATA_PIN, EOrder RGB_ORDER> class WS2852 : public WS2812Controller800Khz<DATA_PIN, RGB_ORDER> {};               ///< WS2852 controller class. @copydetails WS2812Controller800Khz
template<uint8_t DATA_PIN, EOrder RGB_ORDER> class WS2812B : public WS2812Controller800Khz<DATA_PIN, RGB_ORDER> {};              ///< WS2812B controller class. @copydetails WS2812Controller800Khz
     9c8:	86 e9       	ldi	r24, 0x96	; 150
     9ca:	90 e0       	ldi	r25, 0x00	; 0
     9cc:	90 93 b0 00 	sts	0x00B0, r25	; 0x8000b0 <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0x1>
     9d0:	80 93 af 00 	sts	0x00AF, r24	; 0x8000af <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c>
addLeds():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.h:352
	/// @{

	/// Add a clockless based CLEDController instance to the world.
	template<template<uint8_t DATA_PIN, EOrder RGB_ORDER> class CHIPSET, uint8_t DATA_PIN, EOrder RGB_ORDER>
	static CLEDController &addLeds(struct CRGB *data, int nLedsOrOffset, int nLedsIfOffset = 0) {
		static CHIPSET<DATA_PIN, RGB_ORDER> c;
     9d4:	81 e0       	ldi	r24, 0x01	; 1
     9d6:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <guard variable for CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c>
setOutput():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/platforms/avr/fastpin_avr.h:22
     9da:	bb 9a       	sbi	0x17, 3	; 23
_ZN14CLEDController7setLedsEP4CRGBi():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:151

    /// Set the default array of LEDs to be used by this controller
    /// @param data pointer to the LED data
    /// @param nLeds the number of LEDs in the LED data
    CLEDController & setLeds(CRGB *data, int nLeds) {
        m_Data = data;
     9dc:	88 ed       	ldi	r24, 0xD8	; 216
     9de:	90 e0       	ldi	r25, 0x00	; 0
     9e0:	90 93 b2 00 	sts	0x00B2, r25	; 0x8000b2 <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0x3>
     9e4:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0x2>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:152
        m_nLeds = nLeds;
     9e8:	8c e1       	ldi	r24, 0x1C	; 28
     9ea:	90 e0       	ldi	r25, 0x00	; 0
     9ec:	90 93 bd 00 	sts	0x00BD, r25	; 0x8000bd <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0xe>
     9f0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <CLEDController& CFastLED::addLeds<WS2812B, (unsigned char)11, (EOrder)66>(CRGB*, int, int)::c+0xd>
setMaxRefreshRate():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:242
void CFastLED::setMaxRefreshRate(uint16_t refresh, bool constrain) {
	if(constrain) {
		// if we're constraining, the new value of m_nMinMicros _must_ be higher than previously (because we're only
		// allowed to slow things down if constraining)
		if(refresh > 0) {
			m_nMinMicros = ((1000000 / refresh) > m_nMinMicros) ? (1000000 / refresh) : m_nMinMicros;
     9f4:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <FastLED+0x3>
     9f8:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <FastLED+0x4>
     9fc:	a0 91 36 01 	lds	r26, 0x0136	; 0x800136 <FastLED+0x5>
     a00:	b0 91 37 01 	lds	r27, 0x0137	; 0x800137 <FastLED+0x6>
     a04:	84 3c       	cpi	r24, 0xC4	; 196
     a06:	f9 e0       	ldi	r31, 0x09	; 9
     a08:	9f 07       	cpc	r25, r31
     a0a:	a1 05       	cpc	r26, r1
     a0c:	b1 05       	cpc	r27, r1
     a0e:	20 f4       	brcc	.+8      	; 0xa18 <main+0x156>
     a10:	84 ec       	ldi	r24, 0xC4	; 196
     a12:	99 e0       	ldi	r25, 0x09	; 9
     a14:	a0 e0       	ldi	r26, 0x00	; 0
     a16:	b0 e0       	ldi	r27, 0x00	; 0
     a18:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <FastLED+0x3>
     a1c:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <FastLED+0x4>
     a20:	a0 93 36 01 	sts	0x0136, r26	; 0x800136 <FastLED+0x5>
     a24:	b0 93 37 01 	sts	0x0137, r27	; 0x800137 <FastLED+0x6>
_ZN8CFastLED13setBrightnessEh():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.h:553
	/// @} Adding parallel output controllers
#endif

	/// Set the global brightness scaling
	/// @param scale a 0-255 value for how much to scale all leds before writing them out
	void setBrightness(uint8_t scale) { m_Scale = scale; }
     a28:	82 e3       	ldi	r24, 0x32	; 50
     a2a:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <FastLED>
setup():
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:43
	//FastLED.setMaxPowerInVoltsAndMilliamps(VOLTS,MAX_AMPS);
	FastLED.setBrightness(BRIGHTNESS);
	//FastLED.clear();
	//FastLED.show(); 

	EEAR = 0x00;
     a2e:	1f ba       	out	0x1f, r1	; 31
     a30:	1e ba       	out	0x1e, r1	; 30
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:45
	//asm volatile ("sbi EECR,EERE");		//Start read.
	asm volatile ("sbi 0x1C,0");			//Write enable on;
     a32:	e0 9a       	sbi	0x1c, 0	; 28
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:46
	Status = EEDR;
     a34:	8d b3       	in	r24, 0x1d	; 29
     a36:	80 93 5f 01 	sts	0x015F, r24	; 0x80015f <Status>
     a3a:	9c e1       	ldi	r25, 0x1C	; 28
     a3c:	a9 2e       	mov	r10, r25
     a3e:	b1 2c       	mov	r11, r1
random():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/WMath.cpp:40
long random(long howbig)
{
  if (howbig == 0) {
    return 0;
  }
  return random() % howbig;
     a40:	2c e1       	ldi	r18, 0x1C	; 28
     a42:	42 2e       	mov	r4, r18
     a44:	51 2c       	mov	r5, r1
     a46:	61 2c       	mov	r6, r1
     a48:	71 2c       	mov	r7, r1
loop():
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:361
		else if(xFrame == 11)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(255, 255, 0);
			}
			for (;iLed != 255; iLed--) {
				leds[iLed] = CRGB(Vect[NUM_LEDS - 1 - iFrame + iLed], 255, 0);
     a4a:	0b e1       	ldi	r16, 0x1B	; 27
     a4c:	20 2e       	mov	r2, r16
     a4e:	31 2c       	mov	r3, r1
hsv2rgb_rainbow():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:391
                // 110
                //case 6: // P -- K
                r = K85 + third;
                g = 0;
                FORCE_REFERENCE(g);
                b = K171 - third;
     a50:	8b ea       	ldi	r24, 0xAB	; 171
     a52:	88 2e       	mov	r8, r24
main():
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:57
	uint8_t i;
	uint8_t iLed;
	// uint8_t ResetStatus = 0;


	for(i = 0; i < FrameDelay; i++)	{
     a54:	10 e0       	ldi	r17, 0x00	; 0
loop():
     a56:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <FrameDelay>
     a5a:	18 17       	cp	r17, r24
     a5c:	d0 f5       	brcc	.+116    	; 0xad2 <main+0x210>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:58
		if(digitalRead(BUTTON_PIN) == 0) {
     a5e:	3c db       	rcall	.-2440   	; 0xd8 <digitalRead.constprop.10>
     a60:	89 2b       	or	r24, r25
     a62:	09 f0       	breq	.+2      	; 0xa66 <main+0x1a4>
     a64:	7c c0       	rjmp	.+248    	; 0xb5e <main+0x29c>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:59
			delay(30);											//Debounce.
     a66:	6e e1       	ldi	r22, 0x1E	; 30
     a68:	70 e0       	ldi	r23, 0x00	; 0
     a6a:	80 e0       	ldi	r24, 0x00	; 0
     a6c:	90 e0       	ldi	r25, 0x00	; 0
     a6e:	8b db       	rcall	.-2282   	; 0x186 <delay>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:60
			if(digitalRead(BUTTON_PIN) == 0)	{
     a70:	33 db       	rcall	.-2458   	; 0xd8 <digitalRead.constprop.10>
     a72:	89 2b       	or	r24, r25
     a74:	09 f0       	breq	.+2      	; 0xa78 <main+0x1b6>
     a76:	73 c0       	rjmp	.+230    	; 0xb5e <main+0x29c>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:61
				Status += 1;
     a78:	80 91 5f 01 	lds	r24, 0x015F	; 0x80015f <Status>
     a7c:	8f 5f       	subi	r24, 0xFF	; 255
     a7e:	80 93 5f 01 	sts	0x015F, r24	; 0x80015f <Status>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:62
				iFrame = 0;
     a82:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <iFrame>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:63
				xFrame = 0;
     a86:	10 92 5d 01 	sts	0x015D, r1	; 0x80015d <xFrame>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:64
				CountDir = CountUp;
     a8a:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <CountDir>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:65
				LedPointer = &Vect[0];
     a8e:	0e e3       	ldi	r16, 0x3E	; 62
     a90:	11 e0       	ldi	r17, 0x01	; 1
     a92:	10 93 5b 01 	sts	0x015B, r17	; 0x80015b <LedPointer+0x1>
     a96:	00 93 5a 01 	sts	0x015A, r16	; 0x80015a <LedPointer>
_ZN8CFastLED13setBrightnessEh():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.h:553
     a9a:	82 e3       	ldi	r24, 0x32	; 50
     a9c:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <FastLED>
loop():
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:68
				FastLED.setBrightness(BRIGHTNESS);
				// ResetStatus = 1;
				WriteStatusRom = 1;
     aa0:	81 e0       	ldi	r24, 0x01	; 1
     aa2:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <WriteStatusRom>
millis():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:218
}

unsigned long millis()
{
  unsigned long m;
  uint8_t oldSREG = SREG;
     aa6:	2f b7       	in	r18, 0x3f	; 63
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:222

  // disable interrupts while we read timer0_millis or we might get an
  // inconsistent value (e.g. in the middle of a write to timer0_millis)
  cli();
     aa8:	f8 94       	cli
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:223
  m = timer0_millis;
     aaa:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <timer0_millis>
     aae:	90 91 c9 00 	lds	r25, 0x00C9	; 0x8000c9 <timer0_millis+0x1>
     ab2:	a0 91 ca 00 	lds	r26, 0x00CA	; 0x8000ca <timer0_millis+0x2>
     ab6:	b0 91 cb 00 	lds	r27, 0x00CB	; 0x8000cb <timer0_millis+0x3>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:224
  SREG = oldSREG;
     aba:	2f bf       	out	0x3f, r18	; 63
loop():
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:69
				ResetTimeStamp = millis();
     abc:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <ResetTimeStamp>
     ac0:	90 93 2d 01 	sts	0x012D, r25	; 0x80012d <ResetTimeStamp+0x1>
     ac4:	a0 93 2e 01 	sts	0x012E, r26	; 0x80012e <ResetTimeStamp+0x2>
     ac8:	b0 93 2f 01 	sts	0x012F, r27	; 0x80012f <ResetTimeStamp+0x3>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:70
				while(digitalRead(BUTTON_PIN) == 0)	{}		//Wait button release.
     acc:	05 db       	rcall	.-2550   	; 0xd8 <digitalRead.constprop.10>
     ace:	89 2b       	or	r24, r25
     ad0:	e9 f3       	breq	.-6      	; 0xacc <main+0x20a>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:76
				break;
			}
		}
		delay(5);
	}
	if(WriteStatusRom == 1)	{
     ad2:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <WriteStatusRom>
     ad6:	81 30       	cpi	r24, 0x01	; 1
     ad8:	29 f5       	brne	.+74     	; 0xb24 <main+0x262>
millis():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:218
}

unsigned long millis()
{
  unsigned long m;
  uint8_t oldSREG = SREG;
     ada:	2f b7       	in	r18, 0x3f	; 63
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:222

  // disable interrupts while we read timer0_millis or we might get an
  // inconsistent value (e.g. in the middle of a write to timer0_millis)
  cli();
     adc:	f8 94       	cli
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:223
  m = timer0_millis;
     ade:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <timer0_millis>
     ae2:	90 91 c9 00 	lds	r25, 0x00C9	; 0x8000c9 <timer0_millis+0x1>
     ae6:	a0 91 ca 00 	lds	r26, 0x00CA	; 0x8000ca <timer0_millis+0x2>
     aea:	b0 91 cb 00 	lds	r27, 0x00CB	; 0x8000cb <timer0_millis+0x3>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:224
  SREG = oldSREG;
     aee:	2f bf       	out	0x3f, r18	; 63
loop():
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:77
		if(millis()-ResetTimeStamp >= 30000)	{
     af0:	40 91 2c 01 	lds	r20, 0x012C	; 0x80012c <ResetTimeStamp>
     af4:	50 91 2d 01 	lds	r21, 0x012D	; 0x80012d <ResetTimeStamp+0x1>
     af8:	60 91 2e 01 	lds	r22, 0x012E	; 0x80012e <ResetTimeStamp+0x2>
     afc:	70 91 2f 01 	lds	r23, 0x012F	; 0x80012f <ResetTimeStamp+0x3>
     b00:	84 1b       	sub	r24, r20
     b02:	95 0b       	sbc	r25, r21
     b04:	a6 0b       	sbc	r26, r22
     b06:	b7 0b       	sbc	r27, r23
     b08:	80 33       	cpi	r24, 0x30	; 48
     b0a:	95 47       	sbci	r25, 0x75	; 117
     b0c:	a1 05       	cpc	r26, r1
     b0e:	b1 05       	cpc	r27, r1
     b10:	48 f0       	brcs	.+18     	; 0xb24 <main+0x262>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:79
			//Write status to rom
			EEAR = 0x00;
     b12:	1f ba       	out	0x1f, r1	; 31
     b14:	1e ba       	out	0x1e, r1	; 30
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:80
			EEDR = Status;
     b16:	80 91 5f 01 	lds	r24, 0x015F	; 0x80015f <Status>
     b1a:	8d bb       	out	0x1d, r24	; 29
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:82
			//asm volatile ("sbi EECR,EEMWE");			//Write enable on;
			asm volatile ("sbi 0x1C,2");			//Write enable on;
     b1c:	e2 9a       	sbi	0x1c, 2	; 28
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:84
			//asm volatile ("sbi EECR,EEWE");			//Start write;
			asm volatile ("sbi 0x1C,1");			//Start write;
     b1e:	e1 9a       	sbi	0x1c, 1	; 28
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:85
			WriteStatusRom = 0;	
     b20:	10 92 30 01 	sts	0x0130, r1	; 0x800130 <WriteStatusRom>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:91
		}
	}


	//////////////////// STATUS 0, 1, 2, 3 ///////////////////////
	if((Status == 0x00) || (Status == 0x01) || (Status == 0x02) || (Status == 0x03))	{
     b24:	80 91 5f 01 	lds	r24, 0x015F	; 0x80015f <Status>
     b28:	84 30       	cpi	r24, 0x04	; 4
     b2a:	78 f5       	brcc	.+94     	; 0xb8a <main+0x2c8>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:92
		if		(Status == 0)	{ColorLeds(CRGB::Red);}
     b2c:	6f ef       	ldi	r22, 0xFF	; 255
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	88 23       	and	r24, r24
     b32:	29 f0       	breq	.+10     	; 0xb3e <main+0x27c>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:93
		else if	(Status == 1)	{ColorLeds(CRGB::Green);}
     b34:	81 30       	cpi	r24, 0x01	; 1
     b36:	d1 f4       	brne	.+52     	; 0xb6c <main+0x2aa>
     b38:	60 e0       	ldi	r22, 0x00	; 0
     b3a:	70 e8       	ldi	r23, 0x80	; 128
     b3c:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:95
		else if	(Status == 2)	{ColorLeds(CRGB::Blue);}
		else 					{ColorLeds(CRGB::Purple);}
     b3e:	15 de       	rcall	.-982    	; 0x76a <ColorLeds(CRGB)>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:96
		FastLED.setBrightness(iFrame);
     b40:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <iFrame>
_ZN8CFastLED13setBrightnessEh():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.h:553
     b44:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <FastLED>
loop():
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:97
		if		(iFrame == BRIGHTNESS)		{ CountDir = CountDown;}
     b48:	82 33       	cpi	r24, 0x32	; 50
     b4a:	d1 f4       	brne	.+52     	; 0xb80 <main+0x2be>
     b4c:	91 e0       	ldi	r25, 0x01	; 1
     b4e:	90 93 5c 01 	sts	0x015C, r25	; 0x80015c <CountDir>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:99
		else if	(iFrame == 0)             	{ CountDir = CountUp;}
		if		(CountDir == CountUp)		{ iFrame ++;}
     b52:	90 91 5c 01 	lds	r25, 0x015C	; 0x80015c <CountDir>
     b56:	91 11       	cpse	r25, r1
     b58:	cc c2       	rjmp	.+1432   	; 0x10f2 <L_5013+0x4c8>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:206
			}
		}
		else if(CountDir == CountUp)	{
			for (iLed=0; iLed < iFrame; iLed++) { leds[iLed] = CRGB::Blue;	}
			leds[iFrame] = CRGB::Yellow;	
			iFrame++;
     b5a:	8f 5f       	subi	r24, 0xFF	; 255
     b5c:	cb c2       	rjmp	.+1430   	; 0x10f4 <L_5013+0x4ca>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:74
				ResetTimeStamp = millis();
				while(digitalRead(BUTTON_PIN) == 0)	{}		//Wait button release.
				break;
			}
		}
		delay(5);
     b5e:	65 e0       	ldi	r22, 0x05	; 5
     b60:	70 e0       	ldi	r23, 0x00	; 0
     b62:	80 e0       	ldi	r24, 0x00	; 0
     b64:	90 e0       	ldi	r25, 0x00	; 0
     b66:	0f db       	rcall	.-2530   	; 0x186 <delay>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:57
	uint8_t i;
	uint8_t iLed;
	// uint8_t ResetStatus = 0;


	for(i = 0; i < FrameDelay; i++)	{
     b68:	1f 5f       	subi	r17, 0xFF	; 255
     b6a:	75 cf       	rjmp	.-278    	; 0xa56 <main+0x194>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:94

	//////////////////// STATUS 0, 1, 2, 3 ///////////////////////
	if((Status == 0x00) || (Status == 0x01) || (Status == 0x02) || (Status == 0x03))	{
		if		(Status == 0)	{ColorLeds(CRGB::Red);}
		else if	(Status == 1)	{ColorLeds(CRGB::Green);}
		else if	(Status == 2)	{ColorLeds(CRGB::Blue);}
     b6c:	82 30       	cpi	r24, 0x02	; 2
     b6e:	21 f4       	brne	.+8      	; 0xb78 <main+0x2b6>
     b70:	60 e0       	ldi	r22, 0x00	; 0
     b72:	70 e0       	ldi	r23, 0x00	; 0
     b74:	8f ef       	ldi	r24, 0xFF	; 255
     b76:	e3 cf       	rjmp	.-58     	; 0xb3e <main+0x27c>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:95
		else 					{ColorLeds(CRGB::Purple);}
     b78:	60 e8       	ldi	r22, 0x80	; 128
     b7a:	70 e0       	ldi	r23, 0x00	; 0
     b7c:	80 e8       	ldi	r24, 0x80	; 128
     b7e:	df cf       	rjmp	.-66     	; 0xb3e <main+0x27c>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:98
		FastLED.setBrightness(iFrame);
		if		(iFrame == BRIGHTNESS)		{ CountDir = CountDown;}
		else if	(iFrame == 0)             	{ CountDir = CountUp;}
     b80:	81 11       	cpse	r24, r1
     b82:	e7 cf       	rjmp	.-50     	; 0xb52 <main+0x290>
     b84:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <CountDir>
     b88:	e4 cf       	rjmp	.-56     	; 0xb52 <main+0x290>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:105
		else								{ iFrame --;}
		FrameDelay = 5;
	}
	//////////////////// STATUS 4 ///////////////////////
	else if(Status == 4)	{
		ColorLeds(CRGB::Red);
     b8a:	6f ef       	ldi	r22, 0xFF	; 255
     b8c:	70 e0       	ldi	r23, 0x00	; 0
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:104
		if		(CountDir == CountUp)		{ iFrame ++;}
		else								{ iFrame --;}
		FrameDelay = 5;
	}
	//////////////////// STATUS 4 ///////////////////////
	else if(Status == 4)	{
     b8e:	84 30       	cpi	r24, 0x04	; 4
     b90:	21 f0       	breq	.+8      	; 0xb9a <main+0x2d8>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:109
		ColorLeds(CRGB::Red);
		FrameDelay = 255;
	}
	//////////////////// STATUS 5 ///////////////////////
	else if(Status == 5)	{
     b92:	85 30       	cpi	r24, 0x05	; 5
     b94:	31 f4       	brne	.+12     	; 0xba2 <main+0x2e0>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:110
		ColorLeds(CRGB::Green);
     b96:	60 e0       	ldi	r22, 0x00	; 0
     b98:	70 e8       	ldi	r23, 0x80	; 128
     b9a:	80 e0       	ldi	r24, 0x00	; 0
     b9c:	e6 dd       	rcall	.-1076   	; 0x76a <ColorLeds(CRGB)>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:111
		FrameDelay = 255;
     b9e:	8f ef       	ldi	r24, 0xFF	; 255
     ba0:	ac c2       	rjmp	.+1368   	; 0x10fa <L_5013+0x4d0>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:114
	}
	//////////////////// STATUS 6 ///////////////////////
	else if(Status == 6)	{
     ba2:	86 30       	cpi	r24, 0x06	; 6
     ba4:	21 f4       	brne	.+8      	; 0xbae <main+0x2ec>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:115
		ColorLeds(CRGB::Blue);
     ba6:	60 e0       	ldi	r22, 0x00	; 0
     ba8:	70 e0       	ldi	r23, 0x00	; 0
     baa:	8f ef       	ldi	r24, 0xFF	; 255
     bac:	f7 cf       	rjmp	.-18     	; 0xb9c <main+0x2da>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:119
		FrameDelay = 255;
	}
	//////////////////// STATUS 7 ///////////////////////
	else if(Status == 7)	{
     bae:	87 30       	cpi	r24, 0x07	; 7
     bb0:	21 f4       	brne	.+8      	; 0xbba <main+0x2f8>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:120
		ColorLeds(CRGB::Purple);
     bb2:	60 e8       	ldi	r22, 0x80	; 128
     bb4:	70 e0       	ldi	r23, 0x00	; 0
     bb6:	80 e8       	ldi	r24, 0x80	; 128
     bb8:	f1 cf       	rjmp	.-30     	; 0xb9c <main+0x2da>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:124
		FrameDelay = 255;
	}
	//////////////////// STATUS 8 ///////////////////////
  	else if(Status == 8)  {
     bba:	88 30       	cpi	r24, 0x08	; 8
     bbc:	09 f0       	breq	.+2      	; 0xbc0 <main+0x2fe>
     bbe:	44 c1       	rjmp	.+648    	; 0xe48 <L_5013+0x21e>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:125
		fill_rainbow_circular(leds,NUM_LEDS,iFrame);
     bc0:	30 91 5e 01 	lds	r19, 0x015E	; 0x80015e <iFrame>
     bc4:	e8 ed       	ldi	r30, 0xD8	; 216
     bc6:	f0 e0       	ldi	r31, 0x00	; 0
fill_rainbow_circular():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/colorutils.cpp:73
void fill_rainbow_circular(struct CRGB* targetArray, int numToFill, uint8_t initialhue, bool reversed)
{
    if (numToFill == 0) return;  // avoiding div/0

    CHSV hsv;
    hsv.hue = initialhue;
     bc8:	a3 2f       	mov	r26, r19
main():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/colorutils.cpp:78
    hsv.val = 255;
    hsv.sat = 240;

    const uint16_t hueChange = 65535 / (uint16_t)numToFill;  // hue change for each LED, * 256 for precision (256 * 256 - 1)
    uint16_t hueOffset = 0;  // offset for hue value, with precision (*256)
     bca:	50 e0       	ldi	r21, 0x00	; 0
     bcc:	40 e0       	ldi	r20, 0x00	; 0
scale8():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/lib8tion/scale8.h:93
        "clr __zero_reg__    \n\t"

        : "+a" (i)      /* writes to i */
        : "a"  (scale)  /* uses scale */
        : "r0", "r1"    /* clobbers r0, r1 */
    );
     bce:	b5 e5       	ldi	r27, 0x55	; 85
     bd0:	fb 2e       	mov	r15, r27
hsv2rgb_rainbow():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:398
            } else {
                // 111
                //case 7: // K -> R
                r = K170 + third;
                g = 0;
                FORCE_REFERENCE(g);
     bd2:	70 e0       	ldi	r23, 0x00	; 0
scale8():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/lib8tion/scale8.h:93
     bd4:	1a ea       	ldi	r17, 0xAA	; 170
     bd6:	e1 2e       	mov	r14, r17
scale8_video():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/lib8tion/scale8.h:133
        "  subi %[j], 0xFF\n\t"
        "L_%=: \n\t"
        : [j] "+a" (j)
        : [i] "a" (i), [scale] "a" (scale)
        : "r0", "r1"
    );
     bd8:	6f e0       	ldi	r22, 0x0F	; 15
hsv2rgb_rainbow():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:289
        // It's much faster and smaller to just do three single-bit shifts
        // So this business is to force that.
        offset8 <<= 1;
        asm volatile("");
        offset8 <<= 1;
        asm volatile("");
     bda:	9a 2f       	mov	r25, r26
     bdc:	99 0f       	add	r25, r25
     bde:	99 0f       	add	r25, r25
     be0:	99 0f       	add	r25, r25
scale8():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/lib8tion/scale8.h:93
        "clr __zero_reg__    \n\t"

        : "+a" (i)      /* writes to i */
        : "a"  (scale)  /* uses scale */
        : "r0", "r1"    /* clobbers r0, r1 */
    );
     be2:	29 2f       	mov	r18, r25
     be4:	0f 2d       	mov	r16, r15
     be6:	20 9f       	mul	r18, r16
     be8:	02 0e       	add	r0, r18
     bea:	20 e0       	ldi	r18, 0x00	; 0
     bec:	21 1d       	adc	r18, r1
     bee:	11 24       	eor	r1, r1
     bf0:	82 2f       	mov	r24, r18
     bf2:	2a 2f       	mov	r18, r26
     bf4:	20 74       	andi	r18, 0x40	; 64
     bf6:	ba 2f       	mov	r27, r26
     bf8:	b0 72       	andi	r27, 0x20	; 32
hsv2rgb_rainbow():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:301
    
    uint8_t third = scale8( offset8, (256 / 3)); // max = 85
    
    uint8_t r, g, b;
    
    if( ! (hue & 0x80) ) {
     bfa:	a7 fd       	sbrc	r26, 7
     bfc:	05 c1       	rjmp	.+522    	; 0xe08 <L_5013+0x1de>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:303
        // 0XX
        if( ! (hue & 0x40) ) {
     bfe:	21 11       	cpse	r18, r1
     c00:	f0 c0       	rjmp	.+480    	; 0xde2 <L_5013+0x1b8>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:306
            // 00X
            //section 0-1
            if( ! (hue & 0x20) ) {
     c02:	b1 11       	cpse	r27, r1
     c04:	06 c0       	rjmp	.+12     	; 0xc12 <main+0x350>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:309
                // 000
                //case 0: // R -> O
                r = K255 - third;
     c06:	98 2f       	mov	r25, r24
     c08:	90 95       	com	r25
main():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:310
                g = third;
     c0a:	a8 2f       	mov	r26, r24
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:340
                // 010
                //case 2: // Y -> G
                if( Y1 ) {
                    //uint8_t twothirds = (third << 1);
                    uint8_t twothirds = scale8( offset8, ((256 * 2) / 3)); // max=170
                    r = K171 - twothirds;
     c0c:	89 2f       	mov	r24, r25
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:342
                    g = K170 + third;
                    b = 0;
     c0e:	90 e0       	ldi	r25, 0x00	; 0
     c10:	04 c0       	rjmp	.+8      	; 0xc1a <main+0x358>
hsv2rgb_rainbow():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:318
            } else {
                // 001
                //case 1: // O -> Y
                if( Y1 ) {
                    r = K171;
                    g = K85 + third ;
     c12:	a5 e5       	ldi	r26, 0x55	; 85
     c14:	a8 0f       	add	r26, r24
main():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:319
                    b = 0;
     c16:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:317
                FORCE_REFERENCE(b);
            } else {
                // 001
                //case 1: // O -> Y
                if( Y1 ) {
                    r = K171;
     c18:	8b ea       	ldi	r24, 0xAB	; 171
scale8_video():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/lib8tion/scale8.h:133
        "  subi %[j], 0xFF\n\t"
        "L_%=: \n\t"
        : [j] "+a" (j)
        : [i] "a" (i), [scale] "a" (scale)
        : "r0", "r1"
    );
     c1a:	27 2f       	mov	r18, r23
     c1c:	66 23       	and	r22, r22
     c1e:	29 f0       	breq	.+10     	; 0xc2a <L_5013>
     c20:	66 9f       	mul	r22, r22
     c22:	21 2d       	mov	r18, r1
     c24:	11 24       	eor	r1, r1
     c26:	61 11       	cpse	r22, r1
     c28:	2f 5f       	subi	r18, 0xFF	; 255

00000c2a <L_5013>:
hsv2rgb_rainbow():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:419
            r = 255; b = 255; g = 255;
        } else {
            uint8_t desat = 255 - sat;
            desat = scale8_video( desat, desat);

            uint8_t satscale = 255 - desat;
     c2a:	b2 2f       	mov	r27, r18
     c2c:	b0 95       	com	r27
scale8_LEAVING_R1_DIRTY():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/lib8tion/scale8.h:199
        /* R1 IS LEFT DIRTY HERE; YOU MUST ZERO IT OUT YOURSELF  */
        /* "clr __zero_reg__    \n\t" */
        : "+a" (i)      /* writes to i */
        : "a"  (scale)  /* uses scale */
        : "r0", "r1"    /* clobbers r0, r1 */
    );
     c2e:	18 2f       	mov	r17, r24
     c30:	0b 2f       	mov	r16, r27
     c32:	10 9f       	mul	r17, r16
     c34:	01 0e       	add	r0, r17
     c36:	10 e0       	ldi	r17, 0x00	; 0
     c38:	11 1d       	adc	r17, r1
     c3a:	81 2f       	mov	r24, r17
     c3c:	1a 2f       	mov	r17, r26
     c3e:	10 9f       	mul	r17, r16
     c40:	01 0e       	add	r0, r17
     c42:	10 e0       	ldi	r17, 0x00	; 0
     c44:	11 1d       	adc	r17, r1
     c46:	a1 2f       	mov	r26, r17
     c48:	19 2f       	mov	r17, r25
     c4a:	10 9f       	mul	r17, r16
     c4c:	01 0e       	add	r0, r17
     c4e:	10 e0       	ldi	r17, 0x00	; 0
     c50:	11 1d       	adc	r17, r1
     c52:	91 2f       	mov	r25, r17
cleanup_R1():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/lib8tion/scale8.h:340
/// @ingroup ScalingDirty
LIB8STATIC_ALWAYS_INLINE void cleanup_R1()
{
#if CLEANUP_R1_AVRASM == 1
    // Restore r1 to "0"; it's expected to always be that
    asm volatile( "clr __zero_reg__  \n\t" : : : "r1" );
     c54:	11 24       	eor	r1, r1
hsv2rgb_rainbow():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:434
            if( r ) r = scale8( r, satscale) + 1;
            if( g ) g = scale8( g, satscale) + 1;
            if( b ) b = scale8( b, satscale) + 1;
#endif
            uint8_t brightness_floor = desat;
            r += brightness_floor;
     c56:	82 0f       	add	r24, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:467
    // It turns out that fixing it winds up costing more than
    // not fixing it.
    // To paraphrase Dr Bronner, profile! profile! profile!
    //asm volatile(  ""  :  :  : "r26", "r27" );
    //asm volatile (" movw r30, r26 \n" : : : "r30", "r31");
    rgb.r = r;
     c58:	80 83       	st	Z, r24
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:435
            if( g ) g = scale8( g, satscale) + 1;
            if( b ) b = scale8( b, satscale) + 1;
#endif
            uint8_t brightness_floor = desat;
            r += brightness_floor;
            g += brightness_floor;
     c5a:	a2 0f       	add	r26, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:468
    // not fixing it.
    // To paraphrase Dr Bronner, profile! profile! profile!
    //asm volatile(  ""  :  :  : "r26", "r27" );
    //asm volatile (" movw r30, r26 \n" : : : "r30", "r31");
    rgb.r = r;
    rgb.g = g;
     c5c:	a1 83       	std	Z+1, r26	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:436
            if( b ) b = scale8( b, satscale) + 1;
#endif
            uint8_t brightness_floor = desat;
            r += brightness_floor;
            g += brightness_floor;
            b += brightness_floor;
     c5e:	92 0f       	add	r25, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:469
    // To paraphrase Dr Bronner, profile! profile! profile!
    //asm volatile(  ""  :  :  : "r26", "r27" );
    //asm volatile (" movw r30, r26 \n" : : : "r30", "r31");
    rgb.r = r;
    rgb.g = g;
    rgb.b = b;
     c60:	92 83       	std	Z+2, r25	; 0x02
fill_rainbow_circular():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/colorutils.cpp:83

    for (int i = 0; i < numToFill; ++i) {
        targetArray[i] = hsv;
        if (reversed) hueOffset -= hueChange;
        else hueOffset += hueChange;
     c62:	4c 5d       	subi	r20, 0xDC	; 220
     c64:	56 4f       	sbci	r21, 0xF6	; 246
     c66:	33 96       	adiw	r30, 0x03	; 3
C:\Users\user\Documents\Arduino\libraries\FastLED\src/colorutils.cpp:84
        hsv.hue = initialhue + (uint8_t)(hueOffset >> 8);  // assign new hue with precise offset (as 8-bit)
     c68:	a3 2f       	mov	r26, r19
     c6a:	a5 0f       	add	r26, r21
C:\Users\user\Documents\Arduino\libraries\FastLED\src/colorutils.cpp:80
    hsv.sat = 240;

    const uint16_t hueChange = 65535 / (uint16_t)numToFill;  // hue change for each LED, * 256 for precision (256 * 256 - 1)
    uint16_t hueOffset = 0;  // offset for hue value, with precision (*256)

    for (int i = 0; i < numToFill; ++i) {
     c6c:	40 3f       	cpi	r20, 0xF0	; 240
     c6e:	2f ef       	ldi	r18, 0xFF	; 255
     c70:	52 07       	cpc	r21, r18
     c72:	09 f0       	breq	.+2      	; 0xc76 <L_5013+0x4c>
     c74:	b2 cf       	rjmp	.-156    	; 0xbda <main+0x318>
loop():
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:127
		//FastLED.setBrightness(BRIGHTNESS);
		iFrame += 10;
     c76:	36 5f       	subi	r19, 0xF6	; 246
     c78:	30 93 5e 01 	sts	0x015E, r19	; 0x80015e <iFrame>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:128
		FrameDelay = 15;
     c7c:	60 93 60 01 	sts	0x0160, r22	; 0x800160 <FrameDelay>
show():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.h:573
	/// Update all our controllers with the current led colors, using the passed in brightness
	/// @param scale the brightness value to use in place of the stored value
	void show(uint8_t scale);

	/// Update all our controllers with the current led colors
	void show() { show(m_Scale); }
     c80:	d0 90 31 01 	lds	r13, 0x0131	; 0x800131 <FastLED>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:56
	return *pLed;
}

void CFastLED::show(uint8_t scale) {
	// guard against showing too rapidly
	while(m_nMinMicros && ((micros()-lastshow) < m_nMinMicros));
     c84:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <FastLED+0x3>
     c88:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <FastLED+0x4>
     c8c:	a0 91 36 01 	lds	r26, 0x0136	; 0x800136 <FastLED+0x5>
     c90:	b0 91 37 01 	lds	r27, 0x0137	; 0x800137 <FastLED+0x6>
     c94:	89 2b       	or	r24, r25
     c96:	8a 2b       	or	r24, r26
     c98:	8b 2b       	or	r24, r27
     c9a:	d1 f0       	breq	.+52     	; 0xcd0 <L_5013+0xa6>
     c9c:	4e da       	rcall	.-2916   	; 0x13a <micros>
     c9e:	00 91 d4 00 	lds	r16, 0x00D4	; 0x8000d4 <lastshow>
     ca2:	10 91 d5 00 	lds	r17, 0x00D5	; 0x8000d5 <lastshow+0x1>
     ca6:	20 91 d6 00 	lds	r18, 0x00D6	; 0x8000d6 <lastshow+0x2>
     caa:	30 91 d7 00 	lds	r19, 0x00D7	; 0x8000d7 <lastshow+0x3>
     cae:	60 1b       	sub	r22, r16
     cb0:	71 0b       	sbc	r23, r17
     cb2:	82 0b       	sbc	r24, r18
     cb4:	93 0b       	sbc	r25, r19
     cb6:	00 91 34 01 	lds	r16, 0x0134	; 0x800134 <FastLED+0x3>
     cba:	10 91 35 01 	lds	r17, 0x0135	; 0x800135 <FastLED+0x4>
     cbe:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <FastLED+0x5>
     cc2:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <FastLED+0x6>
     cc6:	60 17       	cp	r22, r16
     cc8:	71 07       	cpc	r23, r17
     cca:	82 07       	cpc	r24, r18
     ccc:	93 07       	cpc	r25, r19
     cce:	d0 f2       	brcs	.-76     	; 0xc84 <L_5013+0x5a>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:57
	lastshow = micros();
     cd0:	34 da       	rcall	.-2968   	; 0x13a <micros>
     cd2:	60 93 d4 00 	sts	0x00D4, r22	; 0x8000d4 <lastshow>
     cd6:	70 93 d5 00 	sts	0x00D5, r23	; 0x8000d5 <lastshow+0x1>
     cda:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <lastshow+0x2>
     cde:	90 93 d7 00 	sts	0x00D7, r25	; 0x8000d7 <lastshow+0x3>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:60

	// If we have a function for computing power, use it!
	if(m_pPowerFunc) {
     ce2:	e0 91 3c 01 	lds	r30, 0x013C	; 0x80013c <FastLED+0xb>
     ce6:	f0 91 3d 01 	lds	r31, 0x013D	; 0x80013d <FastLED+0xc>
     cea:	30 97       	sbiw	r30, 0x00	; 0
     cec:	59 f0       	breq	.+22     	; 0xd04 <L_5013+0xda>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:61
		scale = (*m_pPowerFunc)(scale, m_nPowerData);
     cee:	40 91 38 01 	lds	r20, 0x0138	; 0x800138 <FastLED+0x7>
     cf2:	50 91 39 01 	lds	r21, 0x0139	; 0x800139 <FastLED+0x8>
     cf6:	60 91 3a 01 	lds	r22, 0x013A	; 0x80013a <FastLED+0x9>
     cfa:	70 91 3b 01 	lds	r23, 0x013B	; 0x80013b <FastLED+0xa>
     cfe:	8d 2d       	mov	r24, r13
     d00:	09 95       	icall
     d02:	d8 2e       	mov	r13, r24
_ZN14CLEDController4headEv():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:141
        showColor(data, m_nLeds, getAdjustment(brightness));
    }

    /// Get the first LED controller in the linked list of controllers
    /// @returns CLEDController::m_pHead
    static CLEDController *head() { return m_pHead; }
     d04:	e0 90 d2 00 	lds	r14, 0x00D2	; 0x8000d2 <CLEDController::m_pHead>
     d08:	f0 90 d3 00 	lds	r15, 0x00D3	; 0x8000d3 <CLEDController::m_pHead+0x1>
computeAdjustment():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:236
              if(scale > 0) {
                  for(uint8_t i = 0; i < 3; ++i) {
                      uint8_t cc = colorCorrection.raw[i];
                      uint8_t ct = colorTemperature.raw[i];
                      if(cc > 0 && ct > 0) {
                          uint32_t work = (((uint32_t)cc)+1) * (((uint32_t)ct)+1) * scale;
     d0c:	0d 2d       	mov	r16, r13
     d0e:	10 e0       	ldi	r17, 0x00	; 0
     d10:	30 e0       	ldi	r19, 0x00	; 0
     d12:	20 e0       	ldi	r18, 0x00	; 0
     d14:	0e 83       	std	Y+6, r16	; 0x06
     d16:	1f 83       	std	Y+7, r17	; 0x07
     d18:	28 87       	std	Y+8, r18	; 0x08
     d1a:	39 87       	std	Y+9, r19	; 0x09
show():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:65
	}

	CLEDController *pCur = CLEDController::head();
	while(pCur) {
     d1c:	e1 14       	cp	r14, r1
     d1e:	f1 04       	cpc	r15, r1
     d20:	09 f4       	brne	.+2      	; 0xd24 <L_5013+0xfa>
     d22:	20 c5       	rjmp	.+2624   	; 0x1764 <L_5013+0xb3a>
     d24:	d7 01       	movw	r26, r14
     d26:	1c 96       	adiw	r26, 0x0c	; 12
     d28:	cc 90       	ld	r12, X
     d2a:	1c 97       	sbiw	r26, 0x0c	; 12
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:67
		uint8_t d = pCur->getDither();
		if(m_nFPS < 100) { pCur->setDither(0); }
     d2c:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <FastLED+0x1>
     d30:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <FastLED+0x2>
     d34:	84 36       	cpi	r24, 0x64	; 100
     d36:	91 05       	cpc	r25, r1
     d38:	10 f4       	brcc	.+4      	; 0xd3e <L_5013+0x114>
_ZN14CLEDController9setDitherEh():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:183
    CRGB &operator[](int x) { return m_Data[x]; }

    /// Set the dithering mode for this controller to use
    /// @param ditherMode the dithering mode to set
    /// @returns a reference to the controller
    inline CLEDController & setDither(uint8_t ditherMode = BINARY_DITHER) { m_DitherMode = ditherMode; return *this; }
     d3a:	1c 96       	adiw	r26, 0x0c	; 12
     d3c:	1c 92       	st	X, r1
showLeds():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:127

    /// Write the data to the LEDs managed by this controller
    /// @param brightness the brightness of the LEDs
    /// @see show(const struct CRGB*, int, uint8_t)
    void showLeds(uint8_t brightness=255) {
        show(m_Data, m_nLeds, getAdjustment(brightness));
     d3e:	d7 01       	movw	r26, r14
     d40:	ed 91       	ld	r30, X+
     d42:	fc 91       	ld	r31, X
     d44:	02 81       	ldd	r16, Z+2	; 0x02
     d46:	13 81       	ldd	r17, Z+3	; 0x03
     d48:	1d 83       	std	Y+5, r17	; 0x05
     d4a:	0c 83       	std	Y+4, r16	; 0x04
_ZN4CRGBC2Ehhh():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:169
    /// Allow construction from red, green, and blue
    /// @param ir input red value
    /// @param ig input green value
    /// @param ib input blue value
    inline CRGB( uint8_t ir, uint8_t ig, uint8_t ib)  __attribute__((always_inline))
        : r(ir), g(ig), b(ib)
     d4c:	19 82       	std	Y+1, r1	; 0x01
     d4e:	1a 82       	std	Y+2, r1	; 0x02
     d50:	1b 82       	std	Y+3, r1	; 0x03
computeAdjustment():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:231
      #if defined(NO_CORRECTION) && (NO_CORRECTION==1)
              return CRGB(scale,scale,scale);
      #else
              CRGB adj(0,0,0);

              if(scale > 0) {
     d52:	dd 20       	and	r13, r13
     d54:	79 f1       	breq	.+94     	; 0xdb4 <L_5013+0x18a>
     d56:	f7 01       	movw	r30, r14
     d58:	36 96       	adiw	r30, 0x06	; 6
     d5a:	10 e0       	ldi	r17, 0x00	; 0
     d5c:	00 e0       	ldi	r16, 0x00	; 0
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:233
                  for(uint8_t i = 0; i < 3; ++i) {
                      uint8_t cc = colorCorrection.raw[i];
     d5e:	21 91       	ld	r18, Z+
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:235
                      uint8_t ct = colorTemperature.raw[i];
                      if(cc > 0 && ct > 0) {
     d60:	22 23       	and	r18, r18
     d62:	19 f1       	breq	.+70     	; 0xdaa <L_5013+0x180>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:234
              CRGB adj(0,0,0);

              if(scale > 0) {
                  for(uint8_t i = 0; i < 3; ++i) {
                      uint8_t cc = colorCorrection.raw[i];
                      uint8_t ct = colorTemperature.raw[i];
     d64:	92 80       	ldd	r9, Z+2	; 0x02
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:235
                      if(cc > 0 && ct > 0) {
     d66:	99 20       	and	r9, r9
     d68:	01 f1       	breq	.+64     	; 0xdaa <L_5013+0x180>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:236
                          uint32_t work = (((uint32_t)cc)+1) * (((uint32_t)ct)+1) * scale;
     d6a:	30 e0       	ldi	r19, 0x00	; 0
     d6c:	50 e0       	ldi	r21, 0x00	; 0
     d6e:	40 e0       	ldi	r20, 0x00	; 0
     d70:	2f 5f       	subi	r18, 0xFF	; 255
     d72:	3f 4f       	sbci	r19, 0xFF	; 255
     d74:	4f 4f       	sbci	r20, 0xFF	; 255
     d76:	5f 4f       	sbci	r21, 0xFF	; 255
     d78:	6e 81       	ldd	r22, Y+6	; 0x06
     d7a:	7f 81       	ldd	r23, Y+7	; 0x07
     d7c:	88 85       	ldd	r24, Y+8	; 0x08
     d7e:	99 85       	ldd	r25, Y+9	; 0x09
     d80:	59 d6       	rcall	.+3250   	; 0x1a34 <__mulsi3>
     d82:	9b 01       	movw	r18, r22
     d84:	ac 01       	movw	r20, r24
     d86:	89 2d       	mov	r24, r9
     d88:	90 e0       	ldi	r25, 0x00	; 0
     d8a:	b0 e0       	ldi	r27, 0x00	; 0
     d8c:	a0 e0       	ldi	r26, 0x00	; 0
     d8e:	bc 01       	movw	r22, r24
     d90:	cd 01       	movw	r24, r26
     d92:	6f 5f       	subi	r22, 0xFF	; 255
     d94:	7f 4f       	sbci	r23, 0xFF	; 255
     d96:	8f 4f       	sbci	r24, 0xFF	; 255
     d98:	9f 4f       	sbci	r25, 0xFF	; 255
     d9a:	4c d6       	rcall	.+3224   	; 0x1a34 <__mulsi3>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:238
                          work /= 0x10000L;
                          adj.raw[i] = work & 0xFF;
     d9c:	a1 e0       	ldi	r26, 0x01	; 1
     d9e:	b0 e0       	ldi	r27, 0x00	; 0
     da0:	ac 0f       	add	r26, r28
     da2:	bd 1f       	adc	r27, r29
     da4:	a0 0f       	add	r26, r16
     da6:	b1 1f       	adc	r27, r17
     da8:	8c 93       	st	X, r24
     daa:	0f 5f       	subi	r16, 0xFF	; 255
     dac:	1f 4f       	sbci	r17, 0xFF	; 255
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:232
              return CRGB(scale,scale,scale);
      #else
              CRGB adj(0,0,0);

              if(scale > 0) {
                  for(uint8_t i = 0; i < 3; ++i) {
     dae:	03 30       	cpi	r16, 0x03	; 3
     db0:	11 05       	cpc	r17, r1
     db2:	a9 f6       	brne	.-86     	; 0xd5e <L_5013+0x134>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:243
                          adj.raw[i] = work & 0xFF;
                      }
                  }
              }

              return adj;
     db4:	09 81       	ldd	r16, Y+1	; 0x01
     db6:	1a 81       	ldd	r17, Y+2	; 0x02
     db8:	2b 81       	ldd	r18, Y+3	; 0x03
showLeds():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:127

    /// Write the data to the LEDs managed by this controller
    /// @param brightness the brightness of the LEDs
    /// @see show(const struct CRGB*, int, uint8_t)
    void showLeds(uint8_t brightness=255) {
        show(m_Data, m_nLeds, getAdjustment(brightness));
     dba:	d7 01       	movw	r26, r14
     dbc:	1d 96       	adiw	r26, 0x0d	; 13
     dbe:	4d 91       	ld	r20, X+
     dc0:	5c 91       	ld	r21, X
     dc2:	1e 97       	sbiw	r26, 0x0e	; 14
     dc4:	12 96       	adiw	r26, 0x02	; 2
     dc6:	6d 91       	ld	r22, X+
     dc8:	7c 91       	ld	r23, X
     dca:	c7 01       	movw	r24, r14
     dcc:	ec 81       	ldd	r30, Y+4	; 0x04
     dce:	fd 81       	ldd	r31, Y+5	; 0x05
     dd0:	09 95       	icall
_ZN14CLEDController9setDitherEh():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/controller.h:183
    CRGB &operator[](int x) { return m_Data[x]; }

    /// Set the dithering mode for this controller to use
    /// @param ditherMode the dithering mode to set
    /// @returns a reference to the controller
    inline CLEDController & setDither(uint8_t ditherMode = BINARY_DITHER) { m_DitherMode = ditherMode; return *this; }
     dd2:	d7 01       	movw	r26, r14
     dd4:	1c 96       	adiw	r26, 0x0c	; 12
     dd6:	cc 92       	st	X, r12
     dd8:	1c 97       	sbiw	r26, 0x0c	; 12
     dda:	14 96       	adiw	r26, 0x04	; 4
     ddc:	ed 90       	ld	r14, X+
     dde:	fc 90       	ld	r15, X
     de0:	9d cf       	rjmp	.-198    	; 0xd1c <L_5013+0xf2>
hsv2rgb_rainbow():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:334
                }
            }
        } else {
            //01X
            // section 2-3
            if( !  (hue & 0x20) ) {
     de2:	b1 11       	cpse	r27, r1
     de4:	0c c0       	rjmp	.+24     	; 0xdfe <L_5013+0x1d4>
scale8():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/lib8tion/scale8.h:93
        "clr __zero_reg__    \n\t"

        : "+a" (i)      /* writes to i */
        : "a"  (scale)  /* uses scale */
        : "r0", "r1"    /* clobbers r0, r1 */
    );
     de6:	29 2f       	mov	r18, r25
     de8:	1e 2d       	mov	r17, r14
     dea:	21 9f       	mul	r18, r17
     dec:	02 0e       	add	r0, r18
     dee:	20 e0       	ldi	r18, 0x00	; 0
     df0:	21 1d       	adc	r18, r1
     df2:	11 24       	eor	r1, r1
hsv2rgb_rainbow():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:340
                // 010
                //case 2: // Y -> G
                if( Y1 ) {
                    //uint8_t twothirds = (third << 1);
                    uint8_t twothirds = scale8( offset8, ((256 * 2) / 3)); // max=170
                    r = K171 - twothirds;
     df4:	98 2d       	mov	r25, r8
     df6:	92 1b       	sub	r25, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:341
                    g = K170 + third;
     df8:	aa ea       	ldi	r26, 0xAA	; 170
     dfa:	a8 0f       	add	r26, r24
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:343
                    b = 0;
                    FORCE_REFERENCE(b);
     dfc:	07 cf       	rjmp	.-498    	; 0xc0c <main+0x34a>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:356
            } else {
                // 011
                // case 3: // G -> A
                r = 0;
                FORCE_REFERENCE(r);
                g = K255 - third;
     dfe:	a8 2f       	mov	r26, r24
     e00:	a0 95       	com	r26
main():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:357
                b = third;
     e02:	98 2f       	mov	r25, r24
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:368
        if( ! (hue & 0x40) ) {
            // 10X
            if( ! ( hue & 0x20) ) {
                // 100
                //case 4: // A -> B
                r = 0;
     e04:	80 e0       	ldi	r24, 0x00	; 0
     e06:	09 cf       	rjmp	.-494    	; 0xc1a <main+0x358>
hsv2rgb_rainbow():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:363
            }
        }
    } else {
        // section 4-7
        // 1XX
        if( ! (hue & 0x40) ) {
     e08:	21 11       	cpse	r18, r1
     e0a:	12 c0       	rjmp	.+36     	; 0xe30 <L_5013+0x206>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:365
            // 10X
            if( ! ( hue & 0x20) ) {
     e0c:	b1 11       	cpse	r27, r1
     e0e:	0c c0       	rjmp	.+24     	; 0xe28 <L_5013+0x1fe>
scale8():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/lib8tion/scale8.h:93
     e10:	29 2f       	mov	r18, r25
     e12:	0e 2d       	mov	r16, r14
     e14:	20 9f       	mul	r18, r16
     e16:	02 0e       	add	r0, r18
     e18:	20 e0       	ldi	r18, 0x00	; 0
     e1a:	21 1d       	adc	r18, r1
     e1c:	11 24       	eor	r1, r1
hsv2rgb_rainbow():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:372
                //case 4: // A -> B
                r = 0;
                FORCE_REFERENCE(r);
                //uint8_t twothirds = (third << 1);
                uint8_t twothirds = scale8( offset8, ((256 * 2) / 3)); // max=170
                g = K171 - twothirds; //K170?
     e1e:	a8 2d       	mov	r26, r8
     e20:	a2 1b       	sub	r26, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:373
                b = K85  + twothirds;
     e22:	95 e5       	ldi	r25, 0x55	; 85
     e24:	92 0f       	add	r25, r18
     e26:	ee cf       	rjmp	.-36     	; 0xe04 <L_5013+0x1da>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:381
                // 101
                //case 5: // B -> P
                r = third;
                g = 0;
                FORCE_REFERENCE(g);
                b = K255 - third;
     e28:	98 2f       	mov	r25, r24
     e2a:	90 95       	com	r25
main():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:397
                
            } else {
                // 111
                //case 7: // K -> R
                r = K170 + third;
                g = 0;
     e2c:	a0 e0       	ldi	r26, 0x00	; 0
     e2e:	f5 ce       	rjmp	.-534    	; 0xc1a <main+0x358>
hsv2rgb_rainbow():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:385
                FORCE_REFERENCE(g);
                b = K255 - third;
                
            }
        } else {
            if( !  (hue & 0x20)  ) {
     e30:	b1 11       	cpse	r27, r1
     e32:	06 c0       	rjmp	.+12     	; 0xe40 <L_5013+0x216>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:388
                // 110
                //case 6: // P -- K
                r = K85 + third;
     e34:	25 e5       	ldi	r18, 0x55	; 85
     e36:	28 0f       	add	r18, r24
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:391
                g = 0;
                FORCE_REFERENCE(g);
                b = K171 - third;
     e38:	98 2d       	mov	r25, r8
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:399
                // 111
                //case 7: // K -> R
                r = K170 + third;
                g = 0;
                FORCE_REFERENCE(g);
                b = K85 - third;
     e3a:	98 1b       	sub	r25, r24
main():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:396
                b = K171 - third;
                
            } else {
                // 111
                //case 7: // K -> R
                r = K170 + third;
     e3c:	82 2f       	mov	r24, r18
     e3e:	f6 cf       	rjmp	.-20     	; 0xe2c <L_5013+0x202>
hsv2rgb_rainbow():
     e40:	2a ea       	ldi	r18, 0xAA	; 170
     e42:	28 0f       	add	r18, r24
C:\Users\user\Documents\Arduino\libraries\FastLED\src/hsv2rgb.cpp:399
                g = 0;
                FORCE_REFERENCE(g);
                b = K85 - third;
     e44:	9f 2d       	mov	r25, r15
     e46:	f9 cf       	rjmp	.-14     	; 0xe3a <L_5013+0x210>
loop():
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:131
	}
  	//////////////////// STATUS 9 ///////////////////////
  	else if(Status == 9)  {
     e48:	89 30       	cpi	r24, 0x09	; 9
     e4a:	71 f5       	brne	.+92     	; 0xea8 <L_5013+0x27e>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:132
		ColorLeds(CRGB::Blue);
     e4c:	60 e0       	ldi	r22, 0x00	; 0
     e4e:	70 e0       	ldi	r23, 0x00	; 0
     e50:	8f ef       	ldi	r24, 0xFF	; 255
     e52:	8b dc       	rcall	.-1770   	; 0x76a <ColorLeds(CRGB)>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:133
		for (iLed = iFrame; iLed < (iFrame + 5); iLed++) {
     e54:	20 91 5e 01 	lds	r18, 0x015E	; 0x80015e <iFrame>
     e58:	82 2f       	mov	r24, r18
     e5a:	90 e0       	ldi	r25, 0x00	; 0
     e5c:	04 96       	adiw	r24, 0x04	; 4
     e5e:	32 2f       	mov	r19, r18
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212

    /// Allow assignment from 32-bit (really 24-bit) 0xRRGGBB color code
    /// @param colorcode a packed 24 bit color code
    inline CRGB& operator= (const uint32_t colorcode) __attribute__((always_inline))
    {
        r = (colorcode >> 16) & 0xFF;
     e60:	4f ef       	ldi	r20, 0xFF	; 255
loop():
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:133
     e62:	e3 2f       	mov	r30, r19
     e64:	f0 e0       	ldi	r31, 0x00	; 0
     e66:	8e 17       	cp	r24, r30
     e68:	9f 07       	cpc	r25, r31
     e6a:	a4 f0       	brlt	.+40     	; 0xe94 <L_5013+0x26a>
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212
     e6c:	bf 01       	movw	r22, r30
loop():
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:134
			if(iLed < NUM_LEDS) {leds[iLed] = CRGB::Yellow;}
     e6e:	3c 31       	cpi	r19, 0x1C	; 28
     e70:	58 f4       	brcc	.+22     	; 0xe88 <L_5013+0x25e>
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212
     e72:	66 0f       	add	r22, r22
     e74:	77 1f       	adc	r23, r23
     e76:	e6 0f       	add	r30, r22
     e78:	f7 1f       	adc	r31, r23
     e7a:	e8 52       	subi	r30, 0x28	; 40
     e7c:	ff 4f       	sbci	r31, 0xFF	; 255
     e7e:	40 83       	st	Z, r20
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:213
        g = (colorcode >>  8) & 0xFF;
     e80:	41 83       	std	Z+1, r20	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
        b = (colorcode >>  0) & 0xFF;
     e82:	12 82       	std	Z+2, r1	; 0x02
loop():
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:133
		FrameDelay = 15;
	}
  	//////////////////// STATUS 9 ///////////////////////
  	else if(Status == 9)  {
		ColorLeds(CRGB::Blue);
		for (iLed = iFrame; iLed < (iFrame + 5); iLed++) {
     e84:	3f 5f       	subi	r19, 0xFF	; 255
     e86:	ed cf       	rjmp	.-38     	; 0xe62 <L_5013+0x238>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:135
			if(iLed < NUM_LEDS) {leds[iLed] = CRGB::Yellow;}
			else                {leds[iLed - NUM_LEDS] = CRGB::Yellow;}
     e88:	6c 51       	subi	r22, 0x1C	; 28
     e8a:	71 09       	sbc	r23, r1
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212

    /// Allow assignment from 32-bit (really 24-bit) 0xRRGGBB color code
    /// @param colorcode a packed 24 bit color code
    inline CRGB& operator= (const uint32_t colorcode) __attribute__((always_inline))
    {
        r = (colorcode >> 16) & 0xFF;
     e8c:	fb 01       	movw	r30, r22
     e8e:	ee 0f       	add	r30, r30
     e90:	ff 1f       	adc	r31, r31
     e92:	f1 cf       	rjmp	.-30     	; 0xe76 <L_5013+0x24c>
loop():
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:137
		}
		if  (iFrame == NUM_LEDS)        { iFrame = 0;}
     e94:	2c 31       	cpi	r18, 0x1C	; 28
     e96:	19 f4       	brne	.+6      	; 0xe9e <L_5013+0x274>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:243
			// ResetStatus = 0;
		// }
		if(xFrame == 0)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) { leds[iLed] = CRGB(0,255,0); }
			xFrame++;
			iFrame = 0;
     e98:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <iFrame>
     e9c:	03 c0       	rjmp	.+6      	; 0xea4 <L_5013+0x27a>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:138
		for (iLed = iFrame; iLed < (iFrame + 5); iLed++) {
			if(iLed < NUM_LEDS) {leds[iLed] = CRGB::Yellow;}
			else                {leds[iLed - NUM_LEDS] = CRGB::Yellow;}
		}
		if  (iFrame == NUM_LEDS)        { iFrame = 0;}
		else                            { iFrame++; }
     e9e:	2f 5f       	subi	r18, 0xFF	; 255
     ea0:	20 93 5e 01 	sts	0x015E, r18	; 0x80015e <iFrame>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:139
		FrameDelay = 15;
     ea4:	8f e0       	ldi	r24, 0x0F	; 15
     ea6:	29 c1       	rjmp	.+594    	; 0x10fa <L_5013+0x4d0>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:142
  	}	
  	//////////////////// STATUS 10 ///////////////////////
  	else if(Status == 10)  {
     ea8:	8a 30       	cpi	r24, 0x0A	; 10
     eaa:	21 f5       	brne	.+72     	; 0xef4 <L_5013+0x2ca>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:143
    	if(iFrame == 0) {
     eac:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <iFrame>
     eb0:	81 11       	cpse	r24, r1
     eb2:	03 c0       	rjmp	.+6      	; 0xeba <L_5013+0x290>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:144
			ColorLeds(CRGB::Black);
     eb4:	60 e0       	ldi	r22, 0x00	; 0
     eb6:	70 e0       	ldi	r23, 0x00	; 0
     eb8:	58 dc       	rcall	.-1872   	; 0x76a <ColorLeds(CRGB)>
random():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/WMath.cpp:40
     eba:	0d d5       	rcall	.+2586   	; 0x18d6 <random>
     ebc:	6b 01       	movw	r12, r22
     ebe:	7c 01       	movw	r14, r24
     ec0:	0a d5       	rcall	.+2580   	; 0x18d6 <random>
     ec2:	a3 01       	movw	r20, r6
     ec4:	92 01       	movw	r18, r4
     ec6:	5c d5       	rcall	.+2744   	; 0x1980 <__divmodsi4>
loop():
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:155
  	else if(Status == 11)  {
    	if(iFrame == 0) {
			ColorLeds(CRGB::Black);
		}
		iFrame = 1;
		leds[random(NUM_LEDS)] = CRGB(0, 0, random(255)); 
     ec8:	8b 01       	movw	r16, r22
     eca:	00 0f       	add	r16, r16
     ecc:	11 1f       	adc	r17, r17
     ece:	06 0f       	add	r16, r22
     ed0:	17 1f       	adc	r17, r23
     ed2:	08 52       	subi	r16, 0x28	; 40
     ed4:	1f 4f       	sbci	r17, 0xFF	; 255
     ed6:	d8 01       	movw	r26, r16
     ed8:	1c 92       	st	X, r1
     eda:	11 96       	adiw	r26, 0x01	; 1
     edc:	1c 92       	st	X, r1
random():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/WMath.cpp:40
     ede:	c7 01       	movw	r24, r14
     ee0:	b6 01       	movw	r22, r12
     ee2:	2f ef       	ldi	r18, 0xFF	; 255
     ee4:	30 e0       	ldi	r19, 0x00	; 0
     ee6:	40 e0       	ldi	r20, 0x00	; 0
     ee8:	50 e0       	ldi	r21, 0x00	; 0
     eea:	4a d5       	rcall	.+2708   	; 0x1980 <__divmodsi4>
loop():
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:155
     eec:	f8 01       	movw	r30, r16
     eee:	62 83       	std	Z+2, r22	; 0x02
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:156
		FrameDelay = 10;
     ef0:	8a e0       	ldi	r24, 0x0A	; 10
     ef2:	03 c1       	rjmp	.+518    	; 0x10fa <L_5013+0x4d0>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:150
		}
		leds[random(NUM_LEDS)] = CRGB(0, 0, random(255)); 
		FrameDelay = 10;
  	}
  	//////////////////// STATUS 11 ///////////////////////
  	else if(Status == 11)  {
     ef4:	8b 30       	cpi	r24, 0x0B	; 11
     ef6:	59 f4       	brne	.+22     	; 0xf0e <L_5013+0x2e4>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:151
    	if(iFrame == 0) {
     ef8:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <iFrame>
     efc:	81 11       	cpse	r24, r1
     efe:	03 c0       	rjmp	.+6      	; 0xf06 <L_5013+0x2dc>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:152
			ColorLeds(CRGB::Black);
     f00:	60 e0       	ldi	r22, 0x00	; 0
     f02:	70 e0       	ldi	r23, 0x00	; 0
     f04:	32 dc       	rcall	.-1948   	; 0x76a <ColorLeds(CRGB)>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:154
		}
		iFrame = 1;
     f06:	81 e0       	ldi	r24, 0x01	; 1
     f08:	80 93 5e 01 	sts	0x015E, r24	; 0x80015e <iFrame>
     f0c:	d6 cf       	rjmp	.-84     	; 0xeba <L_5013+0x290>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:159
		leds[random(NUM_LEDS)] = CRGB(0, 0, random(255)); 
		FrameDelay = 10;
  	}
	//////////////////// STATUS 12 ///////////////////////
	else if(Status == 12)  {
     f0e:	8c 30       	cpi	r24, 0x0C	; 12
     f10:	09 f0       	breq	.+2      	; 0xf14 <L_5013+0x2ea>
     f12:	52 c0       	rjmp	.+164    	; 0xfb8 <L_5013+0x38e>
     f14:	e8 ed       	ldi	r30, 0xD8	; 216
     f16:	f0 e0       	ldi	r31, 0x00	; 0
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212
     f18:	10 82       	st	Z, r1
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:213
        g = (colorcode >>  8) & 0xFF;
     f1a:	11 82       	std	Z+1, r1	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
        b = (colorcode >>  0) & 0xFF;
     f1c:	12 82       	std	Z+2, r1	; 0x02
     f1e:	33 96       	adiw	r30, 0x03	; 3
loop():
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:160
		for (iLed = 0; iLed<NUM_LEDS; iLed++) { leds[iLed] = CRGB::Black; }
     f20:	01 e0       	ldi	r16, 0x01	; 1
     f22:	ec 32       	cpi	r30, 0x2C	; 44
     f24:	f0 07       	cpc	r31, r16
     f26:	c1 f7       	brne	.-16     	; 0xf18 <L_5013+0x2ee>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:161
		for (iLed = iFrame; iLed < (iFrame + 2); iLed++) { leds[iLed] = CRGB::Blue;}
     f28:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <iFrame>
     f2c:	98 2f       	mov	r25, r24
     f2e:	28 2f       	mov	r18, r24
     f30:	30 e0       	ldi	r19, 0x00	; 0
     f32:	a9 01       	movw	r20, r18
     f34:	4f 5f       	subi	r20, 0xFF	; 255
     f36:	5f 4f       	sbci	r21, 0xFF	; 255
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
     f38:	af ef       	ldi	r26, 0xFF	; 255
loop():
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:161
     f3a:	69 2f       	mov	r22, r25
     f3c:	70 e0       	ldi	r23, 0x00	; 0
     f3e:	46 17       	cp	r20, r22
     f40:	57 07       	cpc	r21, r23
     f42:	64 f0       	brlt	.+24     	; 0xf5c <L_5013+0x332>
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212

    /// Allow assignment from 32-bit (really 24-bit) 0xRRGGBB color code
    /// @param colorcode a packed 24 bit color code
    inline CRGB& operator= (const uint32_t colorcode) __attribute__((always_inline))
    {
        r = (colorcode >> 16) & 0xFF;
     f44:	fb 01       	movw	r30, r22
     f46:	ee 0f       	add	r30, r30
     f48:	ff 1f       	adc	r31, r31
     f4a:	e6 0f       	add	r30, r22
     f4c:	f7 1f       	adc	r31, r23
     f4e:	e8 52       	subi	r30, 0x28	; 40
     f50:	ff 4f       	sbci	r31, 0xFF	; 255
     f52:	10 82       	st	Z, r1
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:213
        g = (colorcode >>  8) & 0xFF;
     f54:	11 82       	std	Z+1, r1	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
        b = (colorcode >>  0) & 0xFF;
     f56:	a2 83       	std	Z+2, r26	; 0x02
loop():
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:161
     f58:	9f 5f       	subi	r25, 0xFF	; 255
     f5a:	ef cf       	rjmp	.-34     	; 0xf3a <L_5013+0x310>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:162
		for (iLed = NUM_LEDS - 1 - iFrame; iLed > (NUM_LEDS - 3 - iFrame); iLed--) { leds[iLed] = CRGB::Blue;}
     f5c:	9b e1       	ldi	r25, 0x1B	; 27
     f5e:	98 1b       	sub	r25, r24
     f60:	49 e1       	ldi	r20, 0x19	; 25
     f62:	50 e0       	ldi	r21, 0x00	; 0
     f64:	42 1b       	sub	r20, r18
     f66:	53 0b       	sbc	r21, r19
     f68:	9a 01       	movw	r18, r20
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
     f6a:	6f ef       	ldi	r22, 0xFF	; 255
loop():
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:162
     f6c:	49 2f       	mov	r20, r25
     f6e:	50 e0       	ldi	r21, 0x00	; 0
     f70:	24 17       	cp	r18, r20
     f72:	35 07       	cpc	r19, r21
     f74:	64 f4       	brge	.+24     	; 0xf8e <L_5013+0x364>
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212

    /// Allow assignment from 32-bit (really 24-bit) 0xRRGGBB color code
    /// @param colorcode a packed 24 bit color code
    inline CRGB& operator= (const uint32_t colorcode) __attribute__((always_inline))
    {
        r = (colorcode >> 16) & 0xFF;
     f76:	fa 01       	movw	r30, r20
     f78:	ee 0f       	add	r30, r30
     f7a:	ff 1f       	adc	r31, r31
     f7c:	e4 0f       	add	r30, r20
     f7e:	f5 1f       	adc	r31, r21
     f80:	e8 52       	subi	r30, 0x28	; 40
     f82:	ff 4f       	sbci	r31, 0xFF	; 255
     f84:	10 82       	st	Z, r1
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:213
        g = (colorcode >>  8) & 0xFF;
     f86:	11 82       	std	Z+1, r1	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
        b = (colorcode >>  0) & 0xFF;
     f88:	62 83       	std	Z+2, r22	; 0x02
loop():
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:162
     f8a:	91 50       	subi	r25, 0x01	; 1
     f8c:	ef cf       	rjmp	.-34     	; 0xf6c <L_5013+0x342>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:163
		if		(iFrame + 2 == NUM_LEDS/2)	{CountDir = CountDown;}
     f8e:	8c 30       	cpi	r24, 0x0C	; 12
     f90:	61 f4       	brne	.+24     	; 0xfaa <L_5013+0x380>
     f92:	91 e0       	ldi	r25, 0x01	; 1
     f94:	90 93 5c 01 	sts	0x015C, r25	; 0x80015c <CountDir>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:165
		else if	(iFrame == 0)				{CountDir = CountUp;}
		if		(CountDir == CountUp)		{ iFrame ++;}
     f98:	90 91 5c 01 	lds	r25, 0x015C	; 0x80015c <CountDir>
     f9c:	91 11       	cpse	r25, r1
     f9e:	0a c0       	rjmp	.+20     	; 0xfb4 <L_5013+0x38a>
     fa0:	8f 5f       	subi	r24, 0xFF	; 255
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:166
		else								{ iFrame --;}
     fa2:	80 93 5e 01 	sts	0x015E, r24	; 0x80015e <iFrame>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:167
		FrameDelay = 20;
     fa6:	84 e1       	ldi	r24, 0x14	; 20
     fa8:	a8 c0       	rjmp	.+336    	; 0x10fa <L_5013+0x4d0>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:164
	else if(Status == 12)  {
		for (iLed = 0; iLed<NUM_LEDS; iLed++) { leds[iLed] = CRGB::Black; }
		for (iLed = iFrame; iLed < (iFrame + 2); iLed++) { leds[iLed] = CRGB::Blue;}
		for (iLed = NUM_LEDS - 1 - iFrame; iLed > (NUM_LEDS - 3 - iFrame); iLed--) { leds[iLed] = CRGB::Blue;}
		if		(iFrame + 2 == NUM_LEDS/2)	{CountDir = CountDown;}
		else if	(iFrame == 0)				{CountDir = CountUp;}
     faa:	81 11       	cpse	r24, r1
     fac:	f5 cf       	rjmp	.-22     	; 0xf98 <L_5013+0x36e>
     fae:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <CountDir>
     fb2:	f2 cf       	rjmp	.-28     	; 0xf98 <L_5013+0x36e>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:166
		if		(CountDir == CountUp)		{ iFrame ++;}
		else								{ iFrame --;}
     fb4:	81 50       	subi	r24, 0x01	; 1
     fb6:	f5 cf       	rjmp	.-22     	; 0xfa2 <L_5013+0x378>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:170
		FrameDelay = 20;
  	}
	//////////////////// STATUS 13 ///////////////////////
	else if(Status == 13)  {
     fb8:	8d 30       	cpi	r24, 0x0D	; 13
     fba:	09 f0       	breq	.+2      	; 0xfbe <L_5013+0x394>
     fbc:	a1 c0       	rjmp	.+322    	; 0x1100 <L_5013+0x4d6>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:178
		// 	xFrame = NUM_LEDS;
		// 	iFrame = 0;
		// 	CountDir = CountUp;
		// 	ResetStatus = 0;
		// }
		if(xFrame == 255)	{
     fbe:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <xFrame>
     fc2:	9f 3f       	cpi	r25, 0xFF	; 255
     fc4:	99 f4       	brne	.+38     	; 0xfec <L_5013+0x3c2>
     fc6:	e8 ed       	ldi	r30, 0xD8	; 216
     fc8:	f0 e0       	ldi	r31, 0x00	; 0
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212

    /// Allow assignment from 32-bit (really 24-bit) 0xRRGGBB color code
    /// @param colorcode a packed 24 bit color code
    inline CRGB& operator= (const uint32_t colorcode) __attribute__((always_inline))
    {
        r = (colorcode >> 16) & 0xFF;
     fca:	8f ef       	ldi	r24, 0xFF	; 255
     fcc:	80 83       	st	Z, r24
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:213
        g = (colorcode >>  8) & 0xFF;
     fce:	81 83       	std	Z+1, r24	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
        b = (colorcode >>  0) & 0xFF;
     fd0:	12 82       	std	Z+2, r1	; 0x02
     fd2:	33 96       	adiw	r30, 0x03	; 3
loop():
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:179
			for (iLed=0; iLed < NUM_LEDS; iLed++) 	{ leds[iLed] = CRGB::Yellow;}
     fd4:	ac e2       	ldi	r26, 0x2C	; 44
     fd6:	b1 e0       	ldi	r27, 0x01	; 1
     fd8:	ae 17       	cp	r26, r30
     fda:	bf 07       	cpc	r27, r31
     fdc:	b9 f7       	brne	.-18     	; 0xfcc <L_5013+0x3a2>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:180
			CountDir = CountDown;
     fde:	81 e0       	ldi	r24, 0x01	; 1
     fe0:	80 93 5c 01 	sts	0x015C, r24	; 0x80015c <CountDir>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:181
			xFrame = 0;
     fe4:	10 92 5d 01 	sts	0x015D, r1	; 0x80015d <xFrame>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:200
				iFrame = 0;
			}
			else{
				leds[iFrame] = CRGB::Blue;
				xFrame = xFrame + 1;
				iFrame = NUM_LEDS - 1;
     fe8:	8b e1       	ldi	r24, 0x1B	; 27
     fea:	84 c0       	rjmp	.+264    	; 0x10f4 <L_5013+0x4ca>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:184
			for (iLed=0; iLed < NUM_LEDS; iLed++) 	{ leds[iLed] = CRGB::Yellow;}
			CountDir = CountDown;
			xFrame = 0;
			iFrame = NUM_LEDS - 1;
		}
		else if(xFrame == NUM_LEDS)	{
     fec:	9c 31       	cpi	r25, 0x1C	; 28
     fee:	a1 f4       	brne	.+40     	; 0x1018 <L_5013+0x3ee>
     ff0:	e8 ed       	ldi	r30, 0xD8	; 216
     ff2:	f0 e0       	ldi	r31, 0x00	; 0
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
     ff4:	8f ef       	ldi	r24, 0xFF	; 255
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212

    /// Allow assignment from 32-bit (really 24-bit) 0xRRGGBB color code
    /// @param colorcode a packed 24 bit color code
    inline CRGB& operator= (const uint32_t colorcode) __attribute__((always_inline))
    {
        r = (colorcode >> 16) & 0xFF;
     ff6:	10 82       	st	Z, r1
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:213
        g = (colorcode >>  8) & 0xFF;
     ff8:	11 82       	std	Z+1, r1	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
        b = (colorcode >>  0) & 0xFF;
     ffa:	82 83       	std	Z+2, r24	; 0x02
     ffc:	33 96       	adiw	r30, 0x03	; 3
loop():
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:185
			for (iLed=0; iLed < NUM_LEDS; iLed++) 	{ leds[iLed] = CRGB::Blue;}
     ffe:	0c e2       	ldi	r16, 0x2C	; 44
    1000:	11 e0       	ldi	r17, 0x01	; 1
    1002:	0e 17       	cp	r16, r30
    1004:	1f 07       	cpc	r17, r31
    1006:	b9 f7       	brne	.-18     	; 0xff6 <L_5013+0x3cc>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:186
			CountDir = CountUp;
    1008:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <CountDir>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:187
			xFrame = NUM_LEDS - 1;
    100c:	8b e1       	ldi	r24, 0x1B	; 27
    100e:	80 93 5d 01 	sts	0x015D, r24	; 0x80015d <xFrame>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:195
		else if(iFrame == xFrame)	{
			for (iLed=0; iLed < iFrame; iLed++) 	{ leds[iLed] = CRGB::Blue;}
			for (; iLed < NUM_LEDS; iLed++) 		{ leds[iLed] = CRGB::Yellow;}	
			if(CountDir == CountUp)	{
				xFrame = xFrame - 1;
				iFrame = 0;
    1012:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <iFrame>
    1016:	70 c0       	rjmp	.+224    	; 0x10f8 <L_5013+0x4ce>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:190
			for (iLed=0; iLed < NUM_LEDS; iLed++) 	{ leds[iLed] = CRGB::Blue;}
			CountDir = CountUp;
			xFrame = NUM_LEDS - 1;
			iFrame = 0;
		}	
		else if(iFrame == xFrame)	{
    1018:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <iFrame>
    101c:	20 91 5c 01 	lds	r18, 0x015C	; 0x80015c <CountDir>
    1020:	98 13       	cpse	r25, r24
    1022:	33 c0       	rjmp	.+102    	; 0x108a <L_5013+0x460>
    1024:	e8 ed       	ldi	r30, 0xD8	; 216
    1026:	f0 e0       	ldi	r31, 0x00	; 0
main():
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:191
			for (iLed=0; iLed < iFrame; iLed++) 	{ leds[iLed] = CRGB::Blue;}
    1028:	90 e0       	ldi	r25, 0x00	; 0
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
    102a:	3f ef       	ldi	r19, 0xFF	; 255
loop():
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:191
    102c:	89 13       	cpse	r24, r25
    102e:	10 c0       	rjmp	.+32     	; 0x1050 <L_5013+0x426>
    1030:	13 e0       	ldi	r17, 0x03	; 3
    1032:	81 9f       	mul	r24, r17
    1034:	f0 01       	movw	r30, r0
    1036:	11 24       	eor	r1, r1
    1038:	e8 52       	subi	r30, 0x28	; 40
    103a:	ff 4f       	sbci	r31, 0xFF	; 255
    103c:	38 2f       	mov	r19, r24
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212

    /// Allow assignment from 32-bit (really 24-bit) 0xRRGGBB color code
    /// @param colorcode a packed 24 bit color code
    inline CRGB& operator= (const uint32_t colorcode) __attribute__((always_inline))
    {
        r = (colorcode >> 16) & 0xFF;
    103e:	4f ef       	ldi	r20, 0xFF	; 255
loop():
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:192
			for (; iLed < NUM_LEDS; iLed++) 		{ leds[iLed] = CRGB::Yellow;}	
    1040:	3c 31       	cpi	r19, 0x1C	; 28
    1042:	61 f0       	breq	.+24     	; 0x105c <L_5013+0x432>
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212
    1044:	40 83       	st	Z, r20
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:213
        g = (colorcode >>  8) & 0xFF;
    1046:	41 83       	std	Z+1, r20	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
        b = (colorcode >>  0) & 0xFF;
    1048:	12 82       	std	Z+2, r1	; 0x02
loop():
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:192
    104a:	3f 5f       	subi	r19, 0xFF	; 255
    104c:	33 96       	adiw	r30, 0x03	; 3
    104e:	f8 cf       	rjmp	.-16     	; 0x1040 <L_5013+0x416>
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212

    /// Allow assignment from 32-bit (really 24-bit) 0xRRGGBB color code
    /// @param colorcode a packed 24 bit color code
    inline CRGB& operator= (const uint32_t colorcode) __attribute__((always_inline))
    {
        r = (colorcode >> 16) & 0xFF;
    1050:	10 82       	st	Z, r1
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:213
        g = (colorcode >>  8) & 0xFF;
    1052:	11 82       	std	Z+1, r1	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
        b = (colorcode >>  0) & 0xFF;
    1054:	32 83       	std	Z+2, r19	; 0x02
loop():
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:191
			CountDir = CountUp;
			xFrame = NUM_LEDS - 1;
			iFrame = 0;
		}	
		else if(iFrame == xFrame)	{
			for (iLed=0; iLed < iFrame; iLed++) 	{ leds[iLed] = CRGB::Blue;}
    1056:	9f 5f       	subi	r25, 0xFF	; 255
    1058:	33 96       	adiw	r30, 0x03	; 3
    105a:	e8 cf       	rjmp	.-48     	; 0x102c <L_5013+0x402>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:193
			for (; iLed < NUM_LEDS; iLed++) 		{ leds[iLed] = CRGB::Yellow;}	
			if(CountDir == CountUp)	{
    105c:	21 11       	cpse	r18, r1
    105e:	04 c0       	rjmp	.+8      	; 0x1068 <L_5013+0x43e>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:194
				xFrame = xFrame - 1;
    1060:	91 50       	subi	r25, 0x01	; 1
    1062:	90 93 5d 01 	sts	0x015D, r25	; 0x80015d <xFrame>
    1066:	d5 cf       	rjmp	.-86     	; 0x1012 <L_5013+0x3e8>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:198
				iFrame = 0;
			}
			else{
				leds[iFrame] = CRGB::Blue;
    1068:	28 2f       	mov	r18, r24
    106a:	30 e0       	ldi	r19, 0x00	; 0
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212

    /// Allow assignment from 32-bit (really 24-bit) 0xRRGGBB color code
    /// @param colorcode a packed 24 bit color code
    inline CRGB& operator= (const uint32_t colorcode) __attribute__((always_inline))
    {
        r = (colorcode >> 16) & 0xFF;
    106c:	f9 01       	movw	r30, r18
    106e:	ee 0f       	add	r30, r30
    1070:	ff 1f       	adc	r31, r31
    1072:	e2 0f       	add	r30, r18
    1074:	f3 1f       	adc	r31, r19
    1076:	e8 52       	subi	r30, 0x28	; 40
    1078:	ff 4f       	sbci	r31, 0xFF	; 255
    107a:	10 82       	st	Z, r1
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:213
        g = (colorcode >>  8) & 0xFF;
    107c:	11 82       	std	Z+1, r1	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
        b = (colorcode >>  0) & 0xFF;
    107e:	8f ef       	ldi	r24, 0xFF	; 255
    1080:	82 83       	std	Z+2, r24	; 0x02
loop():
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:199
				xFrame = xFrame + 1;
    1082:	9f 5f       	subi	r25, 0xFF	; 255
    1084:	90 93 5d 01 	sts	0x015D, r25	; 0x80015d <xFrame>
    1088:	af cf       	rjmp	.-162    	; 0xfe8 <L_5013+0x3be>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:203
				iFrame = NUM_LEDS - 1;
			}
		}
		else if(CountDir == CountUp)	{
    108a:	22 23       	and	r18, r18
    108c:	61 f0       	breq	.+24     	; 0x10a6 <L_5013+0x47c>
    108e:	e9 e2       	ldi	r30, 0x29	; 41
    1090:	f1 e0       	ldi	r31, 0x01	; 1
main():
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:209
			for (iLed=0; iLed < iFrame; iLed++) { leds[iLed] = CRGB::Blue;	}
			leds[iFrame] = CRGB::Yellow;	
			iFrame++;
		}
		else	{
			for (iLed=NUM_LEDS - 1; iLed > iFrame; iLed--) { leds[iLed] = CRGB::Yellow; }
    1092:	9b e1       	ldi	r25, 0x1B	; 27
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212

    /// Allow assignment from 32-bit (really 24-bit) 0xRRGGBB color code
    /// @param colorcode a packed 24 bit color code
    inline CRGB& operator= (const uint32_t colorcode) __attribute__((always_inline))
    {
        r = (colorcode >> 16) & 0xFF;
    1094:	2f ef       	ldi	r18, 0xFF	; 255
loop():
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:209
    1096:	89 17       	cp	r24, r25
    1098:	f8 f4       	brcc	.+62     	; 0x10d8 <L_5013+0x4ae>
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212
    109a:	20 83       	st	Z, r18
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:213
        g = (colorcode >>  8) & 0xFF;
    109c:	21 83       	std	Z+1, r18	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
        b = (colorcode >>  0) & 0xFF;
    109e:	12 82       	std	Z+2, r1	; 0x02
loop():
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:209
    10a0:	91 50       	subi	r25, 0x01	; 1
    10a2:	33 97       	sbiw	r30, 0x03	; 3
    10a4:	f8 cf       	rjmp	.-16     	; 0x1096 <L_5013+0x46c>
    10a6:	e8 ed       	ldi	r30, 0xD8	; 216
    10a8:	f0 e0       	ldi	r31, 0x00	; 0
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
    10aa:	9f ef       	ldi	r25, 0xFF	; 255
loop():
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:204
				xFrame = xFrame + 1;
				iFrame = NUM_LEDS - 1;
			}
		}
		else if(CountDir == CountUp)	{
			for (iLed=0; iLed < iFrame; iLed++) { leds[iLed] = CRGB::Blue;	}
    10ac:	82 17       	cp	r24, r18
    10ae:	31 f0       	breq	.+12     	; 0x10bc <L_5013+0x492>
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212

    /// Allow assignment from 32-bit (really 24-bit) 0xRRGGBB color code
    /// @param colorcode a packed 24 bit color code
    inline CRGB& operator= (const uint32_t colorcode) __attribute__((always_inline))
    {
        r = (colorcode >> 16) & 0xFF;
    10b0:	10 82       	st	Z, r1
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:213
        g = (colorcode >>  8) & 0xFF;
    10b2:	11 82       	std	Z+1, r1	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
        b = (colorcode >>  0) & 0xFF;
    10b4:	92 83       	std	Z+2, r25	; 0x02
loop():
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:204
    10b6:	2f 5f       	subi	r18, 0xFF	; 255
    10b8:	33 96       	adiw	r30, 0x03	; 3
    10ba:	f8 cf       	rjmp	.-16     	; 0x10ac <L_5013+0x482>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:205
			leds[iFrame] = CRGB::Yellow;	
    10bc:	28 2f       	mov	r18, r24
    10be:	30 e0       	ldi	r19, 0x00	; 0
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212

    /// Allow assignment from 32-bit (really 24-bit) 0xRRGGBB color code
    /// @param colorcode a packed 24 bit color code
    inline CRGB& operator= (const uint32_t colorcode) __attribute__((always_inline))
    {
        r = (colorcode >> 16) & 0xFF;
    10c0:	f9 01       	movw	r30, r18
    10c2:	ee 0f       	add	r30, r30
    10c4:	ff 1f       	adc	r31, r31
    10c6:	e2 0f       	add	r30, r18
    10c8:	f3 1f       	adc	r31, r19
    10ca:	e8 52       	subi	r30, 0x28	; 40
    10cc:	ff 4f       	sbci	r31, 0xFF	; 255
    10ce:	9f ef       	ldi	r25, 0xFF	; 255
    10d0:	90 83       	st	Z, r25
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:213
        g = (colorcode >>  8) & 0xFF;
    10d2:	91 83       	std	Z+1, r25	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
        b = (colorcode >>  0) & 0xFF;
    10d4:	12 82       	std	Z+2, r1	; 0x02
    10d6:	41 cd       	rjmp	.-1406   	; 0xb5a <main+0x298>
loop():
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:210
			iFrame++;
		}
		else	{
			for (iLed=NUM_LEDS - 1; iLed > iFrame; iLed--) { leds[iLed] = CRGB::Yellow; }
			leds[iFrame] = CRGB::Blue;
    10d8:	28 2f       	mov	r18, r24
    10da:	30 e0       	ldi	r19, 0x00	; 0
_ZN4CRGBaSEm():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:212

    /// Allow assignment from 32-bit (really 24-bit) 0xRRGGBB color code
    /// @param colorcode a packed 24 bit color code
    inline CRGB& operator= (const uint32_t colorcode) __attribute__((always_inline))
    {
        r = (colorcode >> 16) & 0xFF;
    10dc:	f9 01       	movw	r30, r18
    10de:	ee 0f       	add	r30, r30
    10e0:	ff 1f       	adc	r31, r31
    10e2:	e2 0f       	add	r30, r18
    10e4:	f3 1f       	adc	r31, r19
    10e6:	e8 52       	subi	r30, 0x28	; 40
    10e8:	ff 4f       	sbci	r31, 0xFF	; 255
    10ea:	10 82       	st	Z, r1
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:213
        g = (colorcode >>  8) & 0xFF;
    10ec:	11 82       	std	Z+1, r1	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/pixeltypes.h:214
        b = (colorcode >>  0) & 0xFF;
    10ee:	9f ef       	ldi	r25, 0xFF	; 255
    10f0:	92 83       	std	Z+2, r25	; 0x02
loop():
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:100
		else 					{ColorLeds(CRGB::Purple);}
		FastLED.setBrightness(iFrame);
		if		(iFrame == BRIGHTNESS)		{ CountDir = CountDown;}
		else if	(iFrame == 0)             	{ CountDir = CountUp;}
		if		(CountDir == CountUp)		{ iFrame ++;}
		else								{ iFrame --;}
    10f2:	81 50       	subi	r24, 0x01	; 1
    10f4:	80 93 5e 01 	sts	0x015E, r24	; 0x80015e <iFrame>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:101
		FrameDelay = 5;
    10f8:	85 e0       	ldi	r24, 0x05	; 5
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:442
			else							{ xFrame--;}
		}
		else                            { 
			iFrame++; 
		}
		FrameDelay = xFrame;
    10fa:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <FrameDelay>
    10fe:	c0 cd       	rjmp	.-1152   	; 0xc80 <L_5013+0x56>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:216
			iFrame--;
		}
		FrameDelay = 5;
  	}	
  	//////////////////// STATUS 14 ///////////////////////
  	else if(Status == 14)  {
    1100:	8e 30       	cpi	r24, 0x0E	; 14
    1102:	41 f4       	brne	.+16     	; 0x1114 <L_5013+0x4ea>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:217
		LedPointer = &Tri[0];
    1104:	20 e6       	ldi	r18, 0x60	; 96
    1106:	30 e0       	ldi	r19, 0x00	; 0
    1108:	30 93 5b 01 	sts	0x015B, r19	; 0x80015b <LedPointer+0x1>
    110c:	20 93 5a 01 	sts	0x015A, r18	; 0x80015a <LedPointer>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:463
			Vect[iLed + 3] = 128;
			Vect[iLed + 4] = 160;
			Vect[iLed + 5] = 192;
			Vect[iLed + 6] = 224;
		} 
		ShiftLed(BlueDD);
    1110:	82 e0       	ldi	r24, 0x02	; 2
    1112:	03 c3       	rjmp	.+1542   	; 0x171a <L_5013+0xaf0>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:224
		if  (iFrame == NUM_LEDS - 1)    { iFrame = 0;}
		else                            { iFrame++; }
		FrameDelay = 15;
  	}
  	//////////////////// STATUS 15 ///////////////////////
  	else if(Status == 15)  {
    1114:	8f 30       	cpi	r24, 0x0F	; 15
    1116:	11 f4       	brne	.+4      	; 0x111c <L_5013+0x4f2>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:226
		// if(ResetStatus)	{
			RampInit();
    1118:	1c db       	rcall	.-2504   	; 0x752 <RampInit()>
    111a:	fa cf       	rjmp	.-12     	; 0x1110 <L_5013+0x4e6>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:235
		if  (iFrame == NUM_LEDS - 1)    { iFrame = 0;}
		else                            { iFrame++; }
		FrameDelay = 15;
  	}
  	//////////////////// STATUS 16 ///////////////////////
  	else if(Status == 16)  {
    111c:	80 31       	cpi	r24, 0x10	; 16
    111e:	09 f0       	breq	.+2      	; 0x1122 <L_5013+0x4f8>
    1120:	43 c2       	rjmp	.+1158   	; 0x15a8 <L_5013+0x97e>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:237
		// if(ResetStatus)	{
			RampInit();
    1122:	17 db       	rcall	.-2514   	; 0x752 <RampInit()>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:240
			// ResetStatus = 0;
		// }
		if(xFrame == 0)	{
    1124:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <xFrame>
    1128:	81 11       	cpse	r24, r1
    112a:	12 c0       	rjmp	.+36     	; 0x1150 <L_5013+0x526>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:241
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) { leds[iLed] = CRGB(0,255,0); }
    112c:	20 91 5e 01 	lds	r18, 0x015E	; 0x80015e <iFrame>
    1130:	e9 e2       	ldi	r30, 0x29	; 41
    1132:	f1 e0       	ldi	r31, 0x01	; 1
main():
    1134:	8b e1       	ldi	r24, 0x1B	; 27
loop():
    1136:	9f ef       	ldi	r25, 0xFF	; 255
    1138:	28 17       	cp	r18, r24
    113a:	30 f4       	brcc	.+12     	; 0x1148 <L_5013+0x51e>
    113c:	10 82       	st	Z, r1
    113e:	91 83       	std	Z+1, r25	; 0x01
    1140:	12 82       	std	Z+2, r1	; 0x02
    1142:	81 50       	subi	r24, 0x01	; 1
    1144:	33 97       	sbiw	r30, 0x03	; 3
    1146:	f8 cf       	rjmp	.-16     	; 0x1138 <L_5013+0x50e>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:242
			xFrame++;
    1148:	81 e0       	ldi	r24, 0x01	; 1
    114a:	80 93 5d 01 	sts	0x015D, r24	; 0x80015d <xFrame>
    114e:	a4 ce       	rjmp	.-696    	; 0xe98 <L_5013+0x26e>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:246
			iFrame = 0;
		}
		//Fade Blue
		else if(xFrame ==1)	{
    1150:	81 30       	cpi	r24, 0x01	; 1
    1152:	79 f5       	brne	.+94     	; 0x11b2 <L_5013+0x588>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:247
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    1154:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <iFrame>
    1158:	e9 e2       	ldi	r30, 0x29	; 41
    115a:	f1 e0       	ldi	r31, 0x01	; 1
main():
    115c:	9b e1       	ldi	r25, 0x1B	; 27
loop():
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:248
				leds[iLed] = CRGB(0,255,0);
    115e:	2f ef       	ldi	r18, 0xFF	; 255
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:247
			xFrame++;
			iFrame = 0;
		}
		//Fade Blue
		else if(xFrame ==1)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    1160:	89 17       	cp	r24, r25
    1162:	08 f1       	brcs	.+66     	; 0x11a6 <L_5013+0x57c>
    1164:	98 2f       	mov	r25, r24
    1166:	8c 31       	cpi	r24, 0x1C	; 28
    1168:	08 f0       	brcs	.+2      	; 0x116c <L_5013+0x542>
    116a:	9b e1       	ldi	r25, 0x1B	; 27
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:251
				leds[iLed] = CRGB(0,255,0);
			}		
			for (;iLed != 255; iLed--) {
				leds[iLed] = CRGB(0, 255, Vect[iFrame - iLed]);
    116c:	28 2f       	mov	r18, r24
    116e:	30 e0       	ldi	r19, 0x00	; 0
    1170:	53 e0       	ldi	r21, 0x03	; 3
    1172:	4f ef       	ldi	r20, 0xFF	; 255
    1174:	f9 01       	movw	r30, r18
    1176:	e9 1b       	sub	r30, r25
    1178:	f1 09       	sbc	r31, r1
    117a:	e2 5c       	subi	r30, 0xC2	; 194
    117c:	fe 4f       	sbci	r31, 0xFE	; 254
    117e:	60 81       	ld	r22, Z
    1180:	95 9f       	mul	r25, r21
    1182:	f0 01       	movw	r30, r0
    1184:	11 24       	eor	r1, r1
    1186:	e8 52       	subi	r30, 0x28	; 40
    1188:	ff 4f       	sbci	r31, 0xFF	; 255
    118a:	10 82       	st	Z, r1
    118c:	41 83       	std	Z+1, r20	; 0x01
    118e:	62 83       	std	Z+2, r22	; 0x02
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:250
		//Fade Blue
		else if(xFrame ==1)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(0,255,0);
			}		
			for (;iLed != 255; iLed--) {
    1190:	91 50       	subi	r25, 0x01	; 1
    1192:	80 f7       	brcc	.-32     	; 0x1174 <L_5013+0x54a>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:253
				leds[iLed] = CRGB(0, 255, Vect[iFrame - iLed]);
			}			
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
    1194:	8b 31       	cpi	r24, 0x1B	; 27
    1196:	09 f0       	breq	.+2      	; 0x119a <L_5013+0x570>
    1198:	c6 c2       	rjmp	.+1420   	; 0x1726 <L_5013+0xafc>
    119a:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <iFrame>
    119e:	82 e0       	ldi	r24, 0x02	; 2
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:374
				leds[iLed] = CRGB(Vect[iLed - iFrame], 255, 0);
			}
			for (;iLed != 255; iLed--) {
				leds[iLed] = CRGB(0, 255, 0);
			}
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame = 1;}
    11a0:	80 93 5d 01 	sts	0x015D, r24	; 0x80015d <xFrame>
    11a4:	7f ce       	rjmp	.-770    	; 0xea4 <L_5013+0x27a>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:248
			iFrame = 0;
		}
		//Fade Blue
		else if(xFrame ==1)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(0,255,0);
    11a6:	10 82       	st	Z, r1
    11a8:	21 83       	std	Z+1, r18	; 0x01
    11aa:	12 82       	std	Z+2, r1	; 0x02
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:247
			xFrame++;
			iFrame = 0;
		}
		//Fade Blue
		else if(xFrame ==1)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    11ac:	91 50       	subi	r25, 0x01	; 1
    11ae:	33 97       	sbiw	r30, 0x03	; 3
    11b0:	d7 cf       	rjmp	.-82     	; 0x1160 <L_5013+0x536>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:257
			}			
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Fill Blue
		else if(xFrame == 2)	{
    11b2:	82 30       	cpi	r24, 0x02	; 2
    11b4:	59 f5       	brne	.+86     	; 0x120c <L_5013+0x5e2>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:258
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    11b6:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <iFrame>
    11ba:	a8 2f       	mov	r26, r24
    11bc:	b0 e0       	ldi	r27, 0x00	; 0
    11be:	a2 5c       	subi	r26, 0xC2	; 194
    11c0:	be 4f       	sbci	r27, 0xFE	; 254
    11c2:	e9 e2       	ldi	r30, 0x29	; 41
    11c4:	f1 e0       	ldi	r31, 0x01	; 1
    11c6:	9b e1       	ldi	r25, 0x1B	; 27
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:259
				leds[iLed] = CRGB(0, 255, Vect[NUM_LEDS - 1 - iLed + iFrame]);
    11c8:	3f ef       	ldi	r19, 0xFF	; 255
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:258
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Fill Blue
		else if(xFrame == 2)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    11ca:	89 17       	cp	r24, r25
    11cc:	38 f4       	brcc	.+14     	; 0x11dc <L_5013+0x5b2>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:259
				leds[iLed] = CRGB(0, 255, Vect[NUM_LEDS - 1 - iLed + iFrame]);
    11ce:	2d 91       	ld	r18, X+
    11d0:	10 82       	st	Z, r1
    11d2:	31 83       	std	Z+1, r19	; 0x01
    11d4:	22 83       	std	Z+2, r18	; 0x02
    11d6:	91 50       	subi	r25, 0x01	; 1
    11d8:	33 97       	sbiw	r30, 0x03	; 3
    11da:	f7 cf       	rjmp	.-18     	; 0x11ca <L_5013+0x5a0>
    11dc:	98 2f       	mov	r25, r24
    11de:	8c 31       	cpi	r24, 0x1C	; 28
    11e0:	08 f0       	brcs	.+2      	; 0x11e4 <L_5013+0x5ba>
    11e2:	9b e1       	ldi	r25, 0x1B	; 27
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:262
			}
			for (;iLed != 255; iLed--) {
				leds[iLed] = CRGB(0, 255, 255);
    11e4:	23 e0       	ldi	r18, 0x03	; 3
    11e6:	3f ef       	ldi	r19, 0xFF	; 255
    11e8:	92 9f       	mul	r25, r18
    11ea:	f0 01       	movw	r30, r0
    11ec:	11 24       	eor	r1, r1
    11ee:	e8 52       	subi	r30, 0x28	; 40
    11f0:	ff 4f       	sbci	r31, 0xFF	; 255
    11f2:	10 82       	st	Z, r1
    11f4:	31 83       	std	Z+1, r19	; 0x01
    11f6:	32 83       	std	Z+2, r19	; 0x02
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:261
		//Fill Blue
		else if(xFrame == 2)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(0, 255, Vect[NUM_LEDS - 1 - iLed + iFrame]);
			}
			for (;iLed != 255; iLed--) {
    11f8:	91 50       	subi	r25, 0x01	; 1
    11fa:	b0 f7       	brcc	.-20     	; 0x11e8 <L_5013+0x5be>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:264
				leds[iLed] = CRGB(0, 255, 255);
			}
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
    11fc:	8b 31       	cpi	r24, 0x1B	; 27
    11fe:	09 f0       	breq	.+2      	; 0x1202 <L_5013+0x5d8>
    1200:	92 c2       	rjmp	.+1316   	; 0x1726 <L_5013+0xafc>
    1202:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <iFrame>
    1206:	20 93 5d 01 	sts	0x015D, r18	; 0x80015d <xFrame>
    120a:	4c ce       	rjmp	.-872    	; 0xea4 <L_5013+0x27a>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:268
			else						{iFrame++;}		
		}
		//Fade Green out
		else if(xFrame == 3)	{
    120c:	83 30       	cpi	r24, 0x03	; 3
    120e:	71 f5       	brne	.+92     	; 0x126c <L_5013+0x642>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:269
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    1210:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <iFrame>
    1214:	e9 e2       	ldi	r30, 0x29	; 41
    1216:	f1 e0       	ldi	r31, 0x01	; 1
main():
    1218:	9b e1       	ldi	r25, 0x1B	; 27
loop():
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:270
				leds[iLed] = CRGB(0, 255, 255);
    121a:	2f ef       	ldi	r18, 0xFF	; 255
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:269
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Fade Green out
		else if(xFrame == 3)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    121c:	89 17       	cp	r24, r25
    121e:	00 f1       	brcs	.+64     	; 0x1260 <L_5013+0x636>
    1220:	98 2f       	mov	r25, r24
    1222:	8c 31       	cpi	r24, 0x1C	; 28
    1224:	08 f0       	brcs	.+2      	; 0x1228 <L_5013+0x5fe>
    1226:	9b e1       	ldi	r25, 0x1B	; 27
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:273
				leds[iLed] = CRGB(0, 255, 255);
			}
			for (;iLed != 255; iLed--) {
				leds[iLed] = CRGB(0, Vect[NUM_LEDS - 1 - iFrame + iLed], 255);
    1228:	91 01       	movw	r18, r2
    122a:	28 1b       	sub	r18, r24
    122c:	31 09       	sbc	r19, r1
    122e:	22 5c       	subi	r18, 0xC2	; 194
    1230:	3e 4f       	sbci	r19, 0xFE	; 254
    1232:	63 e0       	ldi	r22, 0x03	; 3
    1234:	4f ef       	ldi	r20, 0xFF	; 255
    1236:	f9 01       	movw	r30, r18
    1238:	e9 0f       	add	r30, r25
    123a:	f1 1d       	adc	r31, r1
    123c:	50 81       	ld	r21, Z
    123e:	96 9f       	mul	r25, r22
    1240:	f0 01       	movw	r30, r0
    1242:	11 24       	eor	r1, r1
    1244:	e8 52       	subi	r30, 0x28	; 40
    1246:	ff 4f       	sbci	r31, 0xFF	; 255
    1248:	10 82       	st	Z, r1
    124a:	51 83       	std	Z+1, r21	; 0x01
    124c:	42 83       	std	Z+2, r20	; 0x02
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:272
		//Fade Green out
		else if(xFrame == 3)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(0, 255, 255);
			}
			for (;iLed != 255; iLed--) {
    124e:	91 50       	subi	r25, 0x01	; 1
    1250:	90 f7       	brcc	.-28     	; 0x1236 <L_5013+0x60c>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:275
				leds[iLed] = CRGB(0, Vect[NUM_LEDS - 1 - iFrame + iLed], 255);
			}
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
    1252:	8b 31       	cpi	r24, 0x1B	; 27
    1254:	09 f0       	breq	.+2      	; 0x1258 <L_5013+0x62e>
    1256:	67 c2       	rjmp	.+1230   	; 0x1726 <L_5013+0xafc>
    1258:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <iFrame>
    125c:	84 e0       	ldi	r24, 0x04	; 4
    125e:	a0 cf       	rjmp	.-192    	; 0x11a0 <L_5013+0x576>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:270
			else						{iFrame++;}		
		}
		//Fade Green out
		else if(xFrame == 3)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(0, 255, 255);
    1260:	10 82       	st	Z, r1
    1262:	21 83       	std	Z+1, r18	; 0x01
    1264:	22 83       	std	Z+2, r18	; 0x02
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:269
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Fade Green out
		else if(xFrame == 3)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    1266:	91 50       	subi	r25, 0x01	; 1
    1268:	33 97       	sbiw	r30, 0x03	; 3
    126a:	d8 cf       	rjmp	.-80     	; 0x121c <L_5013+0x5f2>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:279
			}
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Turn off green
		else if(xFrame == 4)	{
    126c:	84 30       	cpi	r24, 0x04	; 4
    126e:	59 f5       	brne	.+86     	; 0x12c6 <L_5013+0x69c>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:280
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    1270:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <iFrame>
    1274:	d5 01       	movw	r26, r10
    1276:	a8 1b       	sub	r26, r24
    1278:	b1 09       	sbc	r27, r1
    127a:	a2 5c       	subi	r26, 0xC2	; 194
    127c:	be 4f       	sbci	r27, 0xFE	; 254
    127e:	e9 e2       	ldi	r30, 0x29	; 41
    1280:	f1 e0       	ldi	r31, 0x01	; 1
    1282:	9b e1       	ldi	r25, 0x1B	; 27
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:281
				leds[iLed] = CRGB(0, Vect[iLed - iFrame], 255);
    1284:	2f ef       	ldi	r18, 0xFF	; 255
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:280
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Turn off green
		else if(xFrame == 4)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    1286:	89 17       	cp	r24, r25
    1288:	38 f4       	brcc	.+14     	; 0x1298 <L_5013+0x66e>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:281
				leds[iLed] = CRGB(0, Vect[iLed - iFrame], 255);
    128a:	3e 91       	ld	r19, -X
    128c:	10 82       	st	Z, r1
    128e:	31 83       	std	Z+1, r19	; 0x01
    1290:	22 83       	std	Z+2, r18	; 0x02
    1292:	91 50       	subi	r25, 0x01	; 1
    1294:	33 97       	sbiw	r30, 0x03	; 3
    1296:	f7 cf       	rjmp	.-18     	; 0x1286 <L_5013+0x65c>
    1298:	98 2f       	mov	r25, r24
    129a:	8c 31       	cpi	r24, 0x1C	; 28
    129c:	08 f0       	brcs	.+2      	; 0x12a0 <L_5013+0x676>
    129e:	9b e1       	ldi	r25, 0x1B	; 27
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:284
			}
			for (;iLed != 255; iLed--) {
				leds[iLed] = CRGB(0, 0, 255);
    12a0:	33 e0       	ldi	r19, 0x03	; 3
    12a2:	2f ef       	ldi	r18, 0xFF	; 255
    12a4:	93 9f       	mul	r25, r19
    12a6:	f0 01       	movw	r30, r0
    12a8:	11 24       	eor	r1, r1
    12aa:	e8 52       	subi	r30, 0x28	; 40
    12ac:	ff 4f       	sbci	r31, 0xFF	; 255
    12ae:	10 82       	st	Z, r1
    12b0:	11 82       	std	Z+1, r1	; 0x01
    12b2:	22 83       	std	Z+2, r18	; 0x02
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:283
		//Turn off green
		else if(xFrame == 4)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(0, Vect[iLed - iFrame], 255);
			}
			for (;iLed != 255; iLed--) {
    12b4:	91 50       	subi	r25, 0x01	; 1
    12b6:	b0 f7       	brcc	.-20     	; 0x12a4 <L_5013+0x67a>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:286
				leds[iLed] = CRGB(0, 0, 255);
			}
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
    12b8:	8b 31       	cpi	r24, 0x1B	; 27
    12ba:	09 f0       	breq	.+2      	; 0x12be <L_5013+0x694>
    12bc:	34 c2       	rjmp	.+1128   	; 0x1726 <L_5013+0xafc>
    12be:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <iFrame>
    12c2:	85 e0       	ldi	r24, 0x05	; 5
    12c4:	6d cf       	rjmp	.-294    	; 0x11a0 <L_5013+0x576>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:290
			else						{iFrame++;}		
		}	
		//Fade red
		else if(xFrame == 5)	{
    12c6:	85 30       	cpi	r24, 0x05	; 5
    12c8:	69 f5       	brne	.+90     	; 0x1324 <L_5013+0x6fa>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:291
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    12ca:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <iFrame>
    12ce:	e9 e2       	ldi	r30, 0x29	; 41
    12d0:	f1 e0       	ldi	r31, 0x01	; 1
main():
    12d2:	9b e1       	ldi	r25, 0x1B	; 27
loop():
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:292
				leds[iLed] = CRGB(0,0,255);
    12d4:	2f ef       	ldi	r18, 0xFF	; 255
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:291
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}	
		//Fade red
		else if(xFrame == 5)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    12d6:	89 17       	cp	r24, r25
    12d8:	f8 f0       	brcs	.+62     	; 0x1318 <L_5013+0x6ee>
    12da:	98 2f       	mov	r25, r24
    12dc:	8c 31       	cpi	r24, 0x1C	; 28
    12de:	08 f0       	brcs	.+2      	; 0x12e2 <L_5013+0x6b8>
    12e0:	9b e1       	ldi	r25, 0x1B	; 27
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:295
				leds[iLed] = CRGB(0,0,255);
			}		
			for (;iLed != 255; iLed--) {
				leds[iLed] = CRGB(Vect[iFrame - iLed], 0, 255);
    12e2:	63 e0       	ldi	r22, 0x03	; 3
    12e4:	48 2f       	mov	r20, r24
    12e6:	50 e0       	ldi	r21, 0x00	; 0
    12e8:	2f ef       	ldi	r18, 0xFF	; 255
    12ea:	96 9f       	mul	r25, r22
    12ec:	f0 01       	movw	r30, r0
    12ee:	11 24       	eor	r1, r1
    12f0:	e8 52       	subi	r30, 0x28	; 40
    12f2:	ff 4f       	sbci	r31, 0xFF	; 255
    12f4:	da 01       	movw	r26, r20
    12f6:	a9 1b       	sub	r26, r25
    12f8:	b1 09       	sbc	r27, r1
    12fa:	a2 5c       	subi	r26, 0xC2	; 194
    12fc:	be 4f       	sbci	r27, 0xFE	; 254
    12fe:	3c 91       	ld	r19, X
    1300:	30 83       	st	Z, r19
    1302:	11 82       	std	Z+1, r1	; 0x01
    1304:	22 83       	std	Z+2, r18	; 0x02
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:294
		//Fade red
		else if(xFrame == 5)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(0,0,255);
			}		
			for (;iLed != 255; iLed--) {
    1306:	91 50       	subi	r25, 0x01	; 1
    1308:	80 f7       	brcc	.-32     	; 0x12ea <L_5013+0x6c0>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:297
				leds[iLed] = CRGB(Vect[iFrame - iLed], 0, 255);
			}			
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
    130a:	8b 31       	cpi	r24, 0x1B	; 27
    130c:	09 f0       	breq	.+2      	; 0x1310 <L_5013+0x6e6>
    130e:	0b c2       	rjmp	.+1046   	; 0x1726 <L_5013+0xafc>
    1310:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <iFrame>
    1314:	86 e0       	ldi	r24, 0x06	; 6
    1316:	44 cf       	rjmp	.-376    	; 0x11a0 <L_5013+0x576>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:292
			else						{iFrame++;}		
		}	
		//Fade red
		else if(xFrame == 5)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(0,0,255);
    1318:	10 82       	st	Z, r1
    131a:	11 82       	std	Z+1, r1	; 0x01
    131c:	22 83       	std	Z+2, r18	; 0x02
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:291
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}	
		//Fade red
		else if(xFrame == 5)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    131e:	91 50       	subi	r25, 0x01	; 1
    1320:	33 97       	sbiw	r30, 0x03	; 3
    1322:	d9 cf       	rjmp	.-78     	; 0x12d6 <L_5013+0x6ac>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:301
			}			
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Fill red
		else if(xFrame == 6)	{
    1324:	86 30       	cpi	r24, 0x06	; 6
    1326:	51 f5       	brne	.+84     	; 0x137c <L_5013+0x752>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:302
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    1328:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <iFrame>
    132c:	a8 2f       	mov	r26, r24
    132e:	b0 e0       	ldi	r27, 0x00	; 0
    1330:	a2 5c       	subi	r26, 0xC2	; 194
    1332:	be 4f       	sbci	r27, 0xFE	; 254
    1334:	e9 e2       	ldi	r30, 0x29	; 41
    1336:	f1 e0       	ldi	r31, 0x01	; 1
    1338:	9b e1       	ldi	r25, 0x1B	; 27
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:303
				leds[iLed] = CRGB(Vect[NUM_LEDS - 1 - iLed + iFrame], 0, 255);
    133a:	2f ef       	ldi	r18, 0xFF	; 255
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:302
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Fill red
		else if(xFrame == 6)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    133c:	89 17       	cp	r24, r25
    133e:	38 f4       	brcc	.+14     	; 0x134e <L_5013+0x724>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:303
				leds[iLed] = CRGB(Vect[NUM_LEDS - 1 - iLed + iFrame], 0, 255);
    1340:	3d 91       	ld	r19, X+
    1342:	30 83       	st	Z, r19
    1344:	11 82       	std	Z+1, r1	; 0x01
    1346:	22 83       	std	Z+2, r18	; 0x02
    1348:	91 50       	subi	r25, 0x01	; 1
    134a:	33 97       	sbiw	r30, 0x03	; 3
    134c:	f7 cf       	rjmp	.-18     	; 0x133c <L_5013+0x712>
    134e:	98 2f       	mov	r25, r24
    1350:	8c 31       	cpi	r24, 0x1C	; 28
    1352:	08 f0       	brcs	.+2      	; 0x1356 <L_5013+0x72c>
    1354:	9b e1       	ldi	r25, 0x1B	; 27
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:306
			}
			for (;iLed != 255; iLed--) {
				leds[iLed] = CRGB(255, 0, 255);
    1356:	33 e0       	ldi	r19, 0x03	; 3
    1358:	2f ef       	ldi	r18, 0xFF	; 255
    135a:	93 9f       	mul	r25, r19
    135c:	f0 01       	movw	r30, r0
    135e:	11 24       	eor	r1, r1
    1360:	e8 52       	subi	r30, 0x28	; 40
    1362:	ff 4f       	sbci	r31, 0xFF	; 255
    1364:	20 83       	st	Z, r18
    1366:	11 82       	std	Z+1, r1	; 0x01
    1368:	22 83       	std	Z+2, r18	; 0x02
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:305
		//Fill red
		else if(xFrame == 6)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(Vect[NUM_LEDS - 1 - iLed + iFrame], 0, 255);
			}
			for (;iLed != 255; iLed--) {
    136a:	91 50       	subi	r25, 0x01	; 1
    136c:	b0 f7       	brcc	.-20     	; 0x135a <L_5013+0x730>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:308
				leds[iLed] = CRGB(255, 0, 255);
			}
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
    136e:	8b 31       	cpi	r24, 0x1B	; 27
    1370:	09 f0       	breq	.+2      	; 0x1374 <L_5013+0x74a>
    1372:	d9 c1       	rjmp	.+946    	; 0x1726 <L_5013+0xafc>
    1374:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <iFrame>
    1378:	87 e0       	ldi	r24, 0x07	; 7
    137a:	12 cf       	rjmp	.-476    	; 0x11a0 <L_5013+0x576>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:312
			else						{iFrame++;}		
		}
		//Fade blue out		
		else if(xFrame == 7)	{
    137c:	87 30       	cpi	r24, 0x07	; 7
    137e:	71 f5       	brne	.+92     	; 0x13dc <L_5013+0x7b2>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:313
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    1380:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <iFrame>
    1384:	e9 e2       	ldi	r30, 0x29	; 41
    1386:	f1 e0       	ldi	r31, 0x01	; 1
main():
    1388:	9b e1       	ldi	r25, 0x1B	; 27
loop():
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:314
				leds[iLed] = CRGB(255, 0, 255);
    138a:	2f ef       	ldi	r18, 0xFF	; 255
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:313
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Fade blue out		
		else if(xFrame == 7)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    138c:	89 17       	cp	r24, r25
    138e:	00 f1       	brcs	.+64     	; 0x13d0 <L_5013+0x7a6>
    1390:	98 2f       	mov	r25, r24
    1392:	8c 31       	cpi	r24, 0x1C	; 28
    1394:	08 f0       	brcs	.+2      	; 0x1398 <L_5013+0x76e>
    1396:	9b e1       	ldi	r25, 0x1B	; 27
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:317
				leds[iLed] = CRGB(255, 0, 255);
			}
			for (;iLed != 255; iLed--) {
				leds[iLed] = CRGB(255, 0, Vect[NUM_LEDS - 1 - iFrame + iLed]);
    1398:	91 01       	movw	r18, r2
    139a:	28 1b       	sub	r18, r24
    139c:	31 09       	sbc	r19, r1
    139e:	22 5c       	subi	r18, 0xC2	; 194
    13a0:	3e 4f       	sbci	r19, 0xFE	; 254
    13a2:	63 e0       	ldi	r22, 0x03	; 3
    13a4:	5f ef       	ldi	r21, 0xFF	; 255
    13a6:	f9 01       	movw	r30, r18
    13a8:	e9 0f       	add	r30, r25
    13aa:	f1 1d       	adc	r31, r1
    13ac:	40 81       	ld	r20, Z
    13ae:	96 9f       	mul	r25, r22
    13b0:	f0 01       	movw	r30, r0
    13b2:	11 24       	eor	r1, r1
    13b4:	e8 52       	subi	r30, 0x28	; 40
    13b6:	ff 4f       	sbci	r31, 0xFF	; 255
    13b8:	50 83       	st	Z, r21
    13ba:	11 82       	std	Z+1, r1	; 0x01
    13bc:	42 83       	std	Z+2, r20	; 0x02
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:316
		//Fade blue out		
		else if(xFrame == 7)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(255, 0, 255);
			}
			for (;iLed != 255; iLed--) {
    13be:	91 50       	subi	r25, 0x01	; 1
    13c0:	90 f7       	brcc	.-28     	; 0x13a6 <L_5013+0x77c>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:319
				leds[iLed] = CRGB(255, 0, Vect[NUM_LEDS - 1 - iFrame + iLed]);
			}
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
    13c2:	8b 31       	cpi	r24, 0x1B	; 27
    13c4:	09 f0       	breq	.+2      	; 0x13c8 <L_5013+0x79e>
    13c6:	af c1       	rjmp	.+862    	; 0x1726 <L_5013+0xafc>
    13c8:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <iFrame>
    13cc:	88 e0       	ldi	r24, 0x08	; 8
    13ce:	e8 ce       	rjmp	.-560    	; 0x11a0 <L_5013+0x576>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:314
			else						{iFrame++;}		
		}
		//Fade blue out		
		else if(xFrame == 7)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(255, 0, 255);
    13d0:	20 83       	st	Z, r18
    13d2:	11 82       	std	Z+1, r1	; 0x01
    13d4:	22 83       	std	Z+2, r18	; 0x02
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:313
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Fade blue out		
		else if(xFrame == 7)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    13d6:	91 50       	subi	r25, 0x01	; 1
    13d8:	33 97       	sbiw	r30, 0x03	; 3
    13da:	d8 cf       	rjmp	.-80     	; 0x138c <L_5013+0x762>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:323
			}
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Turn off blue
		else if(xFrame == 8)	{
    13dc:	88 30       	cpi	r24, 0x08	; 8
    13de:	59 f5       	brne	.+86     	; 0x1436 <L_5013+0x80c>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:324
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    13e0:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <iFrame>
    13e4:	d5 01       	movw	r26, r10
    13e6:	a8 1b       	sub	r26, r24
    13e8:	b1 09       	sbc	r27, r1
    13ea:	a2 5c       	subi	r26, 0xC2	; 194
    13ec:	be 4f       	sbci	r27, 0xFE	; 254
    13ee:	e9 e2       	ldi	r30, 0x29	; 41
    13f0:	f1 e0       	ldi	r31, 0x01	; 1
    13f2:	9b e1       	ldi	r25, 0x1B	; 27
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:325
				leds[iLed] = CRGB(255, 0, Vect[iLed - iFrame]);
    13f4:	3f ef       	ldi	r19, 0xFF	; 255
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:324
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Turn off blue
		else if(xFrame == 8)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    13f6:	89 17       	cp	r24, r25
    13f8:	38 f4       	brcc	.+14     	; 0x1408 <L_5013+0x7de>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:325
				leds[iLed] = CRGB(255, 0, Vect[iLed - iFrame]);
    13fa:	2e 91       	ld	r18, -X
    13fc:	30 83       	st	Z, r19
    13fe:	11 82       	std	Z+1, r1	; 0x01
    1400:	22 83       	std	Z+2, r18	; 0x02
    1402:	91 50       	subi	r25, 0x01	; 1
    1404:	33 97       	sbiw	r30, 0x03	; 3
    1406:	f7 cf       	rjmp	.-18     	; 0x13f6 <L_5013+0x7cc>
    1408:	98 2f       	mov	r25, r24
    140a:	8c 31       	cpi	r24, 0x1C	; 28
    140c:	08 f0       	brcs	.+2      	; 0x1410 <L_5013+0x7e6>
    140e:	9b e1       	ldi	r25, 0x1B	; 27
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:328
			}
			for (;iLed != 255; iLed--) {
				leds[iLed] = CRGB(255, 0, 0);
    1410:	33 e0       	ldi	r19, 0x03	; 3
    1412:	2f ef       	ldi	r18, 0xFF	; 255
    1414:	93 9f       	mul	r25, r19
    1416:	f0 01       	movw	r30, r0
    1418:	11 24       	eor	r1, r1
    141a:	e8 52       	subi	r30, 0x28	; 40
    141c:	ff 4f       	sbci	r31, 0xFF	; 255
    141e:	20 83       	st	Z, r18
    1420:	11 82       	std	Z+1, r1	; 0x01
    1422:	12 82       	std	Z+2, r1	; 0x02
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:327
		//Turn off blue
		else if(xFrame == 8)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(255, 0, Vect[iLed - iFrame]);
			}
			for (;iLed != 255; iLed--) {
    1424:	91 50       	subi	r25, 0x01	; 1
    1426:	b0 f7       	brcc	.-20     	; 0x1414 <L_5013+0x7ea>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:330
				leds[iLed] = CRGB(255, 0, 0);
			}
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
    1428:	8b 31       	cpi	r24, 0x1B	; 27
    142a:	09 f0       	breq	.+2      	; 0x142e <L_5013+0x804>
    142c:	7c c1       	rjmp	.+760    	; 0x1726 <L_5013+0xafc>
    142e:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <iFrame>
    1432:	89 e0       	ldi	r24, 0x09	; 9
    1434:	b5 ce       	rjmp	.-662    	; 0x11a0 <L_5013+0x576>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:334
			else						{iFrame++;}		
		}		
		//Fade in Green
		else if(xFrame == 9)	{
    1436:	89 30       	cpi	r24, 0x09	; 9
    1438:	69 f5       	brne	.+90     	; 0x1494 <L_5013+0x86a>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:335
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    143a:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <iFrame>
    143e:	e9 e2       	ldi	r30, 0x29	; 41
    1440:	f1 e0       	ldi	r31, 0x01	; 1
main():
    1442:	9b e1       	ldi	r25, 0x1B	; 27
loop():
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:336
				leds[iLed] = CRGB(255,0,0);
    1444:	2f ef       	ldi	r18, 0xFF	; 255
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:335
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}		
		//Fade in Green
		else if(xFrame == 9)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    1446:	89 17       	cp	r24, r25
    1448:	f8 f0       	brcs	.+62     	; 0x1488 <L_5013+0x85e>
    144a:	98 2f       	mov	r25, r24
    144c:	8c 31       	cpi	r24, 0x1C	; 28
    144e:	08 f0       	brcs	.+2      	; 0x1452 <L_5013+0x828>
    1450:	9b e1       	ldi	r25, 0x1B	; 27
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:339
				leds[iLed] = CRGB(255,0,0);
			}		
			for (;iLed != 255; iLed--) {
				leds[iLed] = CRGB(255,Vect[iFrame - iLed], 0);
    1452:	28 2f       	mov	r18, r24
    1454:	30 e0       	ldi	r19, 0x00	; 0
    1456:	53 e0       	ldi	r21, 0x03	; 3
    1458:	4f ef       	ldi	r20, 0xFF	; 255
    145a:	f9 01       	movw	r30, r18
    145c:	e9 1b       	sub	r30, r25
    145e:	f1 09       	sbc	r31, r1
    1460:	e2 5c       	subi	r30, 0xC2	; 194
    1462:	fe 4f       	sbci	r31, 0xFE	; 254
    1464:	60 81       	ld	r22, Z
    1466:	95 9f       	mul	r25, r21
    1468:	f0 01       	movw	r30, r0
    146a:	11 24       	eor	r1, r1
    146c:	e8 52       	subi	r30, 0x28	; 40
    146e:	ff 4f       	sbci	r31, 0xFF	; 255
    1470:	40 83       	st	Z, r20
    1472:	61 83       	std	Z+1, r22	; 0x01
    1474:	12 82       	std	Z+2, r1	; 0x02
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:338
		//Fade in Green
		else if(xFrame == 9)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(255,0,0);
			}		
			for (;iLed != 255; iLed--) {
    1476:	91 50       	subi	r25, 0x01	; 1
    1478:	80 f7       	brcc	.-32     	; 0x145a <L_5013+0x830>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:341
				leds[iLed] = CRGB(255,Vect[iFrame - iLed], 0);
			}			
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
    147a:	8b 31       	cpi	r24, 0x1B	; 27
    147c:	09 f0       	breq	.+2      	; 0x1480 <L_5013+0x856>
    147e:	53 c1       	rjmp	.+678    	; 0x1726 <L_5013+0xafc>
    1480:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <iFrame>
    1484:	8a e0       	ldi	r24, 0x0A	; 10
    1486:	8c ce       	rjmp	.-744    	; 0x11a0 <L_5013+0x576>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:336
			else						{iFrame++;}		
		}		
		//Fade in Green
		else if(xFrame == 9)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(255,0,0);
    1488:	20 83       	st	Z, r18
    148a:	11 82       	std	Z+1, r1	; 0x01
    148c:	12 82       	std	Z+2, r1	; 0x02
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:335
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}		
		//Fade in Green
		else if(xFrame == 9)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    148e:	91 50       	subi	r25, 0x01	; 1
    1490:	33 97       	sbiw	r30, 0x03	; 3
    1492:	d9 cf       	rjmp	.-78     	; 0x1446 <L_5013+0x81c>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:345
			}			
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}			
		}		
		//Fill green
		else if(xFrame == 10)	{
    1494:	8a 30       	cpi	r24, 0x0A	; 10
    1496:	51 f5       	brne	.+84     	; 0x14ec <L_5013+0x8c2>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:346
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    1498:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <iFrame>
    149c:	a8 2f       	mov	r26, r24
    149e:	b0 e0       	ldi	r27, 0x00	; 0
    14a0:	a2 5c       	subi	r26, 0xC2	; 194
    14a2:	be 4f       	sbci	r27, 0xFE	; 254
    14a4:	e9 e2       	ldi	r30, 0x29	; 41
    14a6:	f1 e0       	ldi	r31, 0x01	; 1
    14a8:	9b e1       	ldi	r25, 0x1B	; 27
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:347
				leds[iLed] = CRGB(255,Vect[NUM_LEDS - 1 - iLed + iFrame], 0);
    14aa:	3f ef       	ldi	r19, 0xFF	; 255
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:346
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}			
		}		
		//Fill green
		else if(xFrame == 10)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    14ac:	89 17       	cp	r24, r25
    14ae:	38 f4       	brcc	.+14     	; 0x14be <L_5013+0x894>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:347
				leds[iLed] = CRGB(255,Vect[NUM_LEDS - 1 - iLed + iFrame], 0);
    14b0:	2d 91       	ld	r18, X+
    14b2:	30 83       	st	Z, r19
    14b4:	21 83       	std	Z+1, r18	; 0x01
    14b6:	12 82       	std	Z+2, r1	; 0x02
    14b8:	91 50       	subi	r25, 0x01	; 1
    14ba:	33 97       	sbiw	r30, 0x03	; 3
    14bc:	f7 cf       	rjmp	.-18     	; 0x14ac <L_5013+0x882>
    14be:	98 2f       	mov	r25, r24
    14c0:	8c 31       	cpi	r24, 0x1C	; 28
    14c2:	08 f0       	brcs	.+2      	; 0x14c6 <L_5013+0x89c>
    14c4:	9b e1       	ldi	r25, 0x1B	; 27
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:350
			}
			for (;iLed != 255; iLed--) {
				leds[iLed] = CRGB(255, 255, 0);
    14c6:	33 e0       	ldi	r19, 0x03	; 3
    14c8:	2f ef       	ldi	r18, 0xFF	; 255
    14ca:	93 9f       	mul	r25, r19
    14cc:	f0 01       	movw	r30, r0
    14ce:	11 24       	eor	r1, r1
    14d0:	e8 52       	subi	r30, 0x28	; 40
    14d2:	ff 4f       	sbci	r31, 0xFF	; 255
    14d4:	20 83       	st	Z, r18
    14d6:	21 83       	std	Z+1, r18	; 0x01
    14d8:	12 82       	std	Z+2, r1	; 0x02
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:349
		//Fill green
		else if(xFrame == 10)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(255,Vect[NUM_LEDS - 1 - iLed + iFrame], 0);
			}
			for (;iLed != 255; iLed--) {
    14da:	91 50       	subi	r25, 0x01	; 1
    14dc:	b0 f7       	brcc	.-20     	; 0x14ca <L_5013+0x8a0>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:352
				leds[iLed] = CRGB(255, 255, 0);
			}
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
    14de:	8b 31       	cpi	r24, 0x1B	; 27
    14e0:	09 f0       	breq	.+2      	; 0x14e4 <L_5013+0x8ba>
    14e2:	21 c1       	rjmp	.+578    	; 0x1726 <L_5013+0xafc>
    14e4:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <iFrame>
    14e8:	8b e0       	ldi	r24, 0x0B	; 11
    14ea:	5a ce       	rjmp	.-844    	; 0x11a0 <L_5013+0x576>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:356
			else						{iFrame++;}		
		}
		//Fade red out		
		else if(xFrame == 11)	{
    14ec:	8b 30       	cpi	r24, 0x0B	; 11
    14ee:	71 f5       	brne	.+92     	; 0x154c <L_5013+0x922>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:357
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    14f0:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <iFrame>
    14f4:	e9 e2       	ldi	r30, 0x29	; 41
    14f6:	f1 e0       	ldi	r31, 0x01	; 1
main():
    14f8:	9b e1       	ldi	r25, 0x1B	; 27
loop():
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:358
				leds[iLed] = CRGB(255, 255, 0);
    14fa:	2f ef       	ldi	r18, 0xFF	; 255
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:357
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Fade red out		
		else if(xFrame == 11)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    14fc:	89 17       	cp	r24, r25
    14fe:	00 f1       	brcs	.+64     	; 0x1540 <L_5013+0x916>
    1500:	98 2f       	mov	r25, r24
    1502:	8c 31       	cpi	r24, 0x1C	; 28
    1504:	08 f0       	brcs	.+2      	; 0x1508 <L_5013+0x8de>
    1506:	9b e1       	ldi	r25, 0x1B	; 27
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:361
				leds[iLed] = CRGB(255, 255, 0);
			}
			for (;iLed != 255; iLed--) {
				leds[iLed] = CRGB(Vect[NUM_LEDS - 1 - iFrame + iLed], 255, 0);
    1508:	63 e0       	ldi	r22, 0x03	; 3
    150a:	91 01       	movw	r18, r2
    150c:	28 1b       	sub	r18, r24
    150e:	31 09       	sbc	r19, r1
    1510:	22 5c       	subi	r18, 0xC2	; 194
    1512:	3e 4f       	sbci	r19, 0xFE	; 254
    1514:	4f ef       	ldi	r20, 0xFF	; 255
    1516:	96 9f       	mul	r25, r22
    1518:	f0 01       	movw	r30, r0
    151a:	11 24       	eor	r1, r1
    151c:	e8 52       	subi	r30, 0x28	; 40
    151e:	ff 4f       	sbci	r31, 0xFF	; 255
    1520:	d9 01       	movw	r26, r18
    1522:	a9 0f       	add	r26, r25
    1524:	b1 1d       	adc	r27, r1
    1526:	5c 91       	ld	r21, X
    1528:	50 83       	st	Z, r21
    152a:	41 83       	std	Z+1, r20	; 0x01
    152c:	12 82       	std	Z+2, r1	; 0x02
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:360
		//Fade red out		
		else if(xFrame == 11)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(255, 255, 0);
			}
			for (;iLed != 255; iLed--) {
    152e:	91 50       	subi	r25, 0x01	; 1
    1530:	90 f7       	brcc	.-28     	; 0x1516 <L_5013+0x8ec>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:363
				leds[iLed] = CRGB(Vect[NUM_LEDS - 1 - iFrame + iLed], 255, 0);
			}
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
    1532:	8b 31       	cpi	r24, 0x1B	; 27
    1534:	09 f0       	breq	.+2      	; 0x1538 <L_5013+0x90e>
    1536:	f7 c0       	rjmp	.+494    	; 0x1726 <L_5013+0xafc>
    1538:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <iFrame>
    153c:	8c e0       	ldi	r24, 0x0C	; 12
    153e:	30 ce       	rjmp	.-928    	; 0x11a0 <L_5013+0x576>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:358
			else						{iFrame++;}		
		}
		//Fade red out		
		else if(xFrame == 11)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(255, 255, 0);
    1540:	20 83       	st	Z, r18
    1542:	21 83       	std	Z+1, r18	; 0x01
    1544:	12 82       	std	Z+2, r1	; 0x02
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:357
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Fade red out		
		else if(xFrame == 11)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    1546:	91 50       	subi	r25, 0x01	; 1
    1548:	33 97       	sbiw	r30, 0x03	; 3
    154a:	d8 cf       	rjmp	.-80     	; 0x14fc <L_5013+0x8d2>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:367
			}
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Turn off red
		else if(xFrame == 12)	{
    154c:	8c 30       	cpi	r24, 0x0C	; 12
    154e:	09 f0       	breq	.+2      	; 0x1552 <L_5013+0x928>
    1550:	a9 cc       	rjmp	.-1710   	; 0xea4 <L_5013+0x27a>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:368
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    1552:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <iFrame>
    1556:	d5 01       	movw	r26, r10
    1558:	a8 1b       	sub	r26, r24
    155a:	b1 09       	sbc	r27, r1
    155c:	a2 5c       	subi	r26, 0xC2	; 194
    155e:	be 4f       	sbci	r27, 0xFE	; 254
    1560:	e9 e2       	ldi	r30, 0x29	; 41
    1562:	f1 e0       	ldi	r31, 0x01	; 1
    1564:	9b e1       	ldi	r25, 0x1B	; 27
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:369
				leds[iLed] = CRGB(Vect[iLed - iFrame], 255, 0);
    1566:	2f ef       	ldi	r18, 0xFF	; 255
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:368
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame++;}
			else						{iFrame++;}		
		}
		//Turn off red
		else if(xFrame == 12)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
    1568:	89 17       	cp	r24, r25
    156a:	38 f4       	brcc	.+14     	; 0x157a <L_5013+0x950>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:369
				leds[iLed] = CRGB(Vect[iLed - iFrame], 255, 0);
    156c:	3e 91       	ld	r19, -X
    156e:	30 83       	st	Z, r19
    1570:	21 83       	std	Z+1, r18	; 0x01
    1572:	12 82       	std	Z+2, r1	; 0x02
    1574:	91 50       	subi	r25, 0x01	; 1
    1576:	33 97       	sbiw	r30, 0x03	; 3
    1578:	f7 cf       	rjmp	.-18     	; 0x1568 <L_5013+0x93e>
    157a:	98 2f       	mov	r25, r24
    157c:	8c 31       	cpi	r24, 0x1C	; 28
    157e:	08 f0       	brcs	.+2      	; 0x1582 <L_5013+0x958>
    1580:	9b e1       	ldi	r25, 0x1B	; 27
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:372
			}
			for (;iLed != 255; iLed--) {
				leds[iLed] = CRGB(0, 255, 0);
    1582:	33 e0       	ldi	r19, 0x03	; 3
    1584:	2f ef       	ldi	r18, 0xFF	; 255
    1586:	93 9f       	mul	r25, r19
    1588:	f0 01       	movw	r30, r0
    158a:	11 24       	eor	r1, r1
    158c:	e8 52       	subi	r30, 0x28	; 40
    158e:	ff 4f       	sbci	r31, 0xFF	; 255
    1590:	10 82       	st	Z, r1
    1592:	21 83       	std	Z+1, r18	; 0x01
    1594:	12 82       	std	Z+2, r1	; 0x02
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:371
		//Turn off red
		else if(xFrame == 12)	{
			for (iLed = NUM_LEDS-1; iLed > iFrame; iLed--) {
				leds[iLed] = CRGB(Vect[iLed - iFrame], 255, 0);
			}
			for (;iLed != 255; iLed--) {
    1596:	91 50       	subi	r25, 0x01	; 1
    1598:	b0 f7       	brcc	.-20     	; 0x1586 <L_5013+0x95c>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:374
				leds[iLed] = CRGB(0, 255, 0);
			}
			if(iFrame == NUM_LEDS-1)	{iFrame = 0; xFrame = 1;}
    159a:	8b 31       	cpi	r24, 0x1B	; 27
    159c:	09 f0       	breq	.+2      	; 0x15a0 <L_5013+0x976>
    159e:	c3 c0       	rjmp	.+390    	; 0x1726 <L_5013+0xafc>
    15a0:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <iFrame>
    15a4:	81 e0       	ldi	r24, 0x01	; 1
    15a6:	fc cd       	rjmp	.-1032   	; 0x11a0 <L_5013+0x576>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:381
		}		
	
		FrameDelay = 15;
  	}
  	//////////////////// STATUS 17 ///////////////////////
  	else if(Status == 17)  {
    15a8:	81 31       	cpi	r24, 0x11	; 17
    15aa:	91 f5       	brne	.+100    	; 0x1610 <L_5013+0x9e6>
    15ac:	ee e3       	ldi	r30, 0x3E	; 62
    15ae:	f1 e0       	ldi	r31, 0x01	; 1
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:382
		for (iLed=0; 			iLed<NUM_LEDS; 		iLed++)	{ Vect[iLed] = 0; }
    15b0:	11 92       	st	Z+, r1
    15b2:	31 e0       	ldi	r19, 0x01	; 1
    15b4:	ea 35       	cpi	r30, 0x5A	; 90
    15b6:	f3 07       	cpc	r31, r19
    15b8:	d9 f7       	brne	.-10     	; 0x15b0 <L_5013+0x986>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:383
		for (iLed=0; 			iLed<NUM_LEDS/4; 	iLed++) { Vect[iLed] = 255; }
    15ba:	8f ef       	ldi	r24, 0xFF	; 255
    15bc:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <Vect>
    15c0:	80 93 3f 01 	sts	0x013F, r24	; 0x80013f <Vect+0x1>
    15c4:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <Vect+0x2>
    15c8:	80 93 41 01 	sts	0x0141, r24	; 0x800141 <Vect+0x3>
    15cc:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <Vect+0x4>
    15d0:	80 93 43 01 	sts	0x0143, r24	; 0x800143 <Vect+0x5>
    15d4:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <Vect+0x6>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:384
		for (iLed=NUM_LEDS/2; 	iLed<NUM_LEDS*3/4;	iLed++) { Vect[iLed] = 255; }
    15d8:	80 93 4c 01 	sts	0x014C, r24	; 0x80014c <Vect+0xe>
    15dc:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <Vect+0xf>
    15e0:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <Vect+0x10>
    15e4:	80 93 4f 01 	sts	0x014F, r24	; 0x80014f <Vect+0x11>
    15e8:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <Vect+0x12>
    15ec:	80 93 51 01 	sts	0x0151, r24	; 0x800151 <Vect+0x13>
    15f0:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <Vect+0x14>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:385
		ShiftLed(GreenDD);
    15f4:	81 e0       	ldi	r24, 0x01	; 1
    15f6:	c3 d8       	rcall	.-3706   	; 0x77e <ShiftLed(unsigned char)>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:386
		if(iFrame) {
    15f8:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <iFrame>
    15fc:	81 11       	cpse	r24, r1
    15fe:	04 c0       	rjmp	.+8      	; 0x1608 <L_5013+0x9de>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:390
			iFrame = 0;
		}
		else{
			iFrame += NUM_LEDS/4;
    1600:	87 e0       	ldi	r24, 0x07	; 7
    1602:	80 93 5e 01 	sts	0x015E, r24	; 0x80015e <iFrame>
    1606:	02 c0       	rjmp	.+4      	; 0x160c <L_5013+0x9e2>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:387
		for (iLed=0; 			iLed<NUM_LEDS; 		iLed++)	{ Vect[iLed] = 0; }
		for (iLed=0; 			iLed<NUM_LEDS/4; 	iLed++) { Vect[iLed] = 255; }
		for (iLed=NUM_LEDS/2; 	iLed<NUM_LEDS*3/4;	iLed++) { Vect[iLed] = 255; }
		ShiftLed(GreenDD);
		if(iFrame) {
			iFrame = 0;
    1608:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <iFrame>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:392
		}
		else{
			iFrame += NUM_LEDS/4;
		}
		FrameDelay = 80;
    160c:	80 e5       	ldi	r24, 0x50	; 80
    160e:	75 cd       	rjmp	.-1302   	; 0x10fa <L_5013+0x4d0>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:395
  	}
  	//////////////////// STATUS 18 ///////////////////////
  	else if(Status == 18)  {
    1610:	82 31       	cpi	r24, 0x12	; 18
    1612:	c9 f4       	brne	.+50     	; 0x1646 <L_5013+0xa1c>
    1614:	ee e3       	ldi	r30, 0x3E	; 62
    1616:	f1 e0       	ldi	r31, 0x01	; 1
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:396
		for (iLed=0; iLed<NUM_LEDS; iLed++) { Vect[iLed] = 0; }
    1618:	11 92       	st	Z+, r1
    161a:	41 e0       	ldi	r20, 0x01	; 1
    161c:	ea 35       	cpi	r30, 0x5A	; 90
    161e:	f4 07       	cpc	r31, r20
    1620:	d9 f7       	brne	.-10     	; 0x1618 <L_5013+0x9ee>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:397
		Vect[0] = 255;
    1622:	8f ef       	ldi	r24, 0xFF	; 255
    1624:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <Vect>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:398
		Vect[1] = 255;
    1628:	80 93 3f 01 	sts	0x013F, r24	; 0x80013f <Vect+0x1>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:399
		Vect[2] = 255;
    162c:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <Vect+0x2>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:400
		Vect[3] = 255;
    1630:	80 93 41 01 	sts	0x0141, r24	; 0x800141 <Vect+0x3>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:401
		Vect[NUM_LEDS/2] = 255;
    1634:	80 93 4c 01 	sts	0x014C, r24	; 0x80014c <Vect+0xe>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:402
		Vect[NUM_LEDS/2 + 1] = 255;
    1638:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <Vect+0xf>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:403
		Vect[NUM_LEDS/2 + 2] = 255;
    163c:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <Vect+0x10>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:404
		Vect[NUM_LEDS/2 + 3] = 255;
    1640:	80 93 4f 01 	sts	0x014F, r24	; 0x80014f <Vect+0x11>
    1644:	65 cd       	rjmp	.-1334   	; 0x1110 <L_5013+0x4e6>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:411
		if  (iFrame == NUM_LEDS - 1)    { iFrame = 0;}
		else                            { iFrame++; }
		FrameDelay = 15;
  	}
  	//////////////////// STATUS 19 ///////////////////////
  	else if(Status == 19)  {
    1646:	83 31       	cpi	r24, 0x13	; 19
    1648:	49 f5       	brne	.+82     	; 0x169c <L_5013+0xa72>
    164a:	ee e3       	ldi	r30, 0x3E	; 62
    164c:	f1 e0       	ldi	r31, 0x01	; 1
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:412
		for (iLed=0; iLed<NUM_LEDS; iLed++) { Vect[iLed] = 0; }
    164e:	11 92       	st	Z+, r1
    1650:	51 e0       	ldi	r21, 0x01	; 1
    1652:	ea 35       	cpi	r30, 0x5A	; 90
    1654:	f5 07       	cpc	r31, r21
    1656:	d9 f7       	brne	.-10     	; 0x164e <L_5013+0xa24>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:413
		Vect[NUM_LEDS - 1] = 255;
    1658:	8f ef       	ldi	r24, 0xFF	; 255
    165a:	80 93 59 01 	sts	0x0159, r24	; 0x800159 <Vect+0x1b>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:414
		Vect[NUM_LEDS - 2] = 255;
    165e:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <Vect+0x1a>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:415
		Vect[NUM_LEDS - 3] = 255;
    1662:	80 93 57 01 	sts	0x0157, r24	; 0x800157 <Vect+0x19>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:416
		Vect[NUM_LEDS - 4] = 255;
    1666:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <Vect+0x18>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:417
		ShiftLed(GreenDD);
    166a:	81 e0       	ldi	r24, 0x01	; 1
    166c:	88 d8       	rcall	.-3824   	; 0x77e <ShiftLed(unsigned char)>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:418
		if		(iFrame == NUM_LEDS - 4)	{ CountDir = CountDown;}
    166e:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <iFrame>
    1672:	88 31       	cpi	r24, 0x18	; 24
    1674:	61 f4       	brne	.+24     	; 0x168e <L_5013+0xa64>
    1676:	91 e0       	ldi	r25, 0x01	; 1
    1678:	90 93 5c 01 	sts	0x015C, r25	; 0x80015c <CountDir>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:420
		else if	(iFrame == 0)             	{ CountDir = CountUp;}
		if		(CountDir == CountUp)		{ iFrame ++;}
    167c:	90 91 5c 01 	lds	r25, 0x015C	; 0x80015c <CountDir>
    1680:	91 11       	cpse	r25, r1
    1682:	0a c0       	rjmp	.+20     	; 0x1698 <L_5013+0xa6e>
    1684:	8f 5f       	subi	r24, 0xFF	; 255
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:421
		else								{ iFrame --;}
    1686:	80 93 5e 01 	sts	0x015E, r24	; 0x80015e <iFrame>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:422
		FrameDelay = 8;
    168a:	88 e0       	ldi	r24, 0x08	; 8
    168c:	36 cd       	rjmp	.-1428   	; 0x10fa <L_5013+0x4d0>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:419
		Vect[NUM_LEDS - 2] = 255;
		Vect[NUM_LEDS - 3] = 255;
		Vect[NUM_LEDS - 4] = 255;
		ShiftLed(GreenDD);
		if		(iFrame == NUM_LEDS - 4)	{ CountDir = CountDown;}
		else if	(iFrame == 0)             	{ CountDir = CountUp;}
    168e:	81 11       	cpse	r24, r1
    1690:	f5 cf       	rjmp	.-22     	; 0x167c <L_5013+0xa52>
    1692:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <CountDir>
    1696:	f2 cf       	rjmp	.-28     	; 0x167c <L_5013+0xa52>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:421
		if		(CountDir == CountUp)		{ iFrame ++;}
		else								{ iFrame --;}
    1698:	81 50       	subi	r24, 0x01	; 1
    169a:	f5 cf       	rjmp	.-22     	; 0x1686 <L_5013+0xa5c>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:425
		FrameDelay = 8;
  	}
  	//////////////////// STATUS 20 ///////////////////////
  	else if(Status == 20)  {
    169c:	84 31       	cpi	r24, 0x14	; 20
    169e:	a1 f5       	brne	.+104    	; 0x1708 <L_5013+0xade>
    16a0:	ee e3       	ldi	r30, 0x3E	; 62
    16a2:	f1 e0       	ldi	r31, 0x01	; 1
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:426
		for (iLed=0; iLed<NUM_LEDS; iLed++) { Vect[iLed] = 0; }
    16a4:	11 92       	st	Z+, r1
    16a6:	71 e0       	ldi	r23, 0x01	; 1
    16a8:	ea 35       	cpi	r30, 0x5A	; 90
    16aa:	f7 07       	cpc	r31, r23
    16ac:	d9 f7       	brne	.-10     	; 0x16a4 <L_5013+0xa7a>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:427
		Vect[NUM_LEDS - 1] = 255;
    16ae:	8f ef       	ldi	r24, 0xFF	; 255
    16b0:	80 93 59 01 	sts	0x0159, r24	; 0x800159 <Vect+0x1b>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:428
		Vect[NUM_LEDS - 2] = 255;
    16b4:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <Vect+0x1a>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:429
		Vect[NUM_LEDS - 3] = 255;
    16b8:	80 93 57 01 	sts	0x0157, r24	; 0x800157 <Vect+0x19>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:430
		Vect[NUM_LEDS - 4] = 255;
    16bc:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <Vect+0x18>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:431
		ShiftLed(RedDD);
    16c0:	80 e0       	ldi	r24, 0x00	; 0
    16c2:	5d d8       	rcall	.-3910   	; 0x77e <ShiftLed(unsigned char)>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:432
		if  (iFrame == NUM_LEDS - 1)    { 
    16c4:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <iFrame>
    16c8:	8b 31       	cpi	r24, 0x1B	; 27
    16ca:	d1 f4       	brne	.+52     	; 0x1700 <L_5013+0xad6>
    16cc:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <xFrame>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:433
			iFrame = 0;
    16d0:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <iFrame>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:434
			if		(xFrame == 8)			{ CountDir = CountDown;}
    16d4:	88 30       	cpi	r24, 0x08	; 8
    16d6:	69 f4       	brne	.+26     	; 0x16f2 <L_5013+0xac8>
    16d8:	91 e0       	ldi	r25, 0x01	; 1
    16da:	90 93 5c 01 	sts	0x015C, r25	; 0x80015c <CountDir>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:436
			else if	(xFrame == 1)       	{ CountDir = CountUp;}
			if		(CountDir == CountUp)	{ xFrame++;}
    16de:	90 91 5c 01 	lds	r25, 0x015C	; 0x80015c <CountDir>
    16e2:	91 11       	cpse	r25, r1
    16e4:	0b c0       	rjmp	.+22     	; 0x16fc <L_5013+0xad2>
    16e6:	8f 5f       	subi	r24, 0xFF	; 255
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:437
			else							{ xFrame--;}
    16e8:	80 93 5d 01 	sts	0x015D, r24	; 0x80015d <xFrame>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:442
		}
		else                            { 
			iFrame++; 
		}
		FrameDelay = xFrame;
    16ec:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <xFrame>
    16f0:	04 cd       	rjmp	.-1528   	; 0x10fa <L_5013+0x4d0>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:435
		Vect[NUM_LEDS - 4] = 255;
		ShiftLed(RedDD);
		if  (iFrame == NUM_LEDS - 1)    { 
			iFrame = 0;
			if		(xFrame == 8)			{ CountDir = CountDown;}
			else if	(xFrame == 1)       	{ CountDir = CountUp;}
    16f2:	81 30       	cpi	r24, 0x01	; 1
    16f4:	a1 f7       	brne	.-24     	; 0x16de <L_5013+0xab4>
    16f6:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <CountDir>
    16fa:	f1 cf       	rjmp	.-30     	; 0x16de <L_5013+0xab4>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:437
			if		(CountDir == CountUp)	{ xFrame++;}
			else							{ xFrame--;}
    16fc:	81 50       	subi	r24, 0x01	; 1
    16fe:	f4 cf       	rjmp	.-24     	; 0x16e8 <L_5013+0xabe>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:440
		}
		else                            { 
			iFrame++; 
    1700:	8f 5f       	subi	r24, 0xFF	; 255
    1702:	80 93 5e 01 	sts	0x015E, r24	; 0x80015e <iFrame>
    1706:	f2 cf       	rjmp	.-28     	; 0x16ec <L_5013+0xac2>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:445
		}
		FrameDelay = xFrame;
  	}
  	//////////////////// STATUS 21 ///////////////////////
  	else if(Status == 21)  {
    1708:	85 31       	cpi	r24, 0x15	; 21
    170a:	89 f4       	brne	.+34     	; 0x172e <L_5013+0xb04>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:446
		LedPointer = &Tri[0];
    170c:	80 e6       	ldi	r24, 0x60	; 96
    170e:	90 e0       	ldi	r25, 0x00	; 0
    1710:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <LedPointer+0x1>
    1714:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <LedPointer>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:447
		ShiftLed(PurpleBlueDD);
    1718:	83 e0       	ldi	r24, 0x03	; 3
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:463
			Vect[iLed + 3] = 128;
			Vect[iLed + 4] = 160;
			Vect[iLed + 5] = 192;
			Vect[iLed + 6] = 224;
		} 
		ShiftLed(BlueDD);
    171a:	31 d8       	rcall	.-3998   	; 0x77e <ShiftLed(unsigned char)>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:464
		if  (iFrame == NUM_LEDS - 1)    { iFrame = 0;}
    171c:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <iFrame>
    1720:	8b 31       	cpi	r24, 0x1B	; 27
    1722:	09 f4       	brne	.+2      	; 0x1726 <L_5013+0xafc>
    1724:	b9 cb       	rjmp	.-2190   	; 0xe98 <L_5013+0x26e>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:465
		else                            { iFrame++; }
    1726:	8f 5f       	subi	r24, 0xFF	; 255
    1728:	80 93 5e 01 	sts	0x015E, r24	; 0x80015e <iFrame>
    172c:	bb cb       	rjmp	.-2186   	; 0xea4 <L_5013+0x27a>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:453
		if  (iFrame == NUM_LEDS - 1)    { iFrame = 0;}
		else                            { iFrame++; }
		FrameDelay = 15;
  	}
	//////////////////// STATUS 22 ///////////////////////
  	else if(Status == 22)  {
    172e:	86 31       	cpi	r24, 0x16	; 22
    1730:	b1 f4       	brne	.+44     	; 0x175e <L_5013+0xb34>
    1732:	ee e3       	ldi	r30, 0x3E	; 62
    1734:	f1 e0       	ldi	r31, 0x01	; 1
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:455
		for(iLed = 0; iLed < NUM_LEDS - 6; iLed = iLed + 7)	{
			Vect[iLed + 0] = 32;
    1736:	60 e2       	ldi	r22, 0x20	; 32
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:456
			Vect[iLed + 1] = 64;
    1738:	50 e4       	ldi	r21, 0x40	; 64
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:457
			Vect[iLed + 2] = 96;
    173a:	40 e6       	ldi	r20, 0x60	; 96
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:458
			Vect[iLed + 3] = 128;
    173c:	30 e8       	ldi	r19, 0x80	; 128
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:459
			Vect[iLed + 4] = 160;
    173e:	20 ea       	ldi	r18, 0xA0	; 160
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:460
			Vect[iLed + 5] = 192;
    1740:	90 ec       	ldi	r25, 0xC0	; 192
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:461
			Vect[iLed + 6] = 224;
    1742:	80 ee       	ldi	r24, 0xE0	; 224
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:455
		FrameDelay = 15;
  	}
	//////////////////// STATUS 22 ///////////////////////
  	else if(Status == 22)  {
		for(iLed = 0; iLed < NUM_LEDS - 6; iLed = iLed + 7)	{
			Vect[iLed + 0] = 32;
    1744:	60 83       	st	Z, r22
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:456
			Vect[iLed + 1] = 64;
    1746:	51 83       	std	Z+1, r21	; 0x01
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:457
			Vect[iLed + 2] = 96;
    1748:	42 83       	std	Z+2, r20	; 0x02
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:458
			Vect[iLed + 3] = 128;
    174a:	33 83       	std	Z+3, r19	; 0x03
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:459
			Vect[iLed + 4] = 160;
    174c:	24 83       	std	Z+4, r18	; 0x04
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:460
			Vect[iLed + 5] = 192;
    174e:	95 83       	std	Z+5, r25	; 0x05
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:461
			Vect[iLed + 6] = 224;
    1750:	86 83       	std	Z+6, r24	; 0x06
    1752:	37 96       	adiw	r30, 0x07	; 7
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:454
		else                            { iFrame++; }
		FrameDelay = 15;
  	}
	//////////////////// STATUS 22 ///////////////////////
  	else if(Status == 22)  {
		for(iLed = 0; iLed < NUM_LEDS - 6; iLed = iLed + 7)	{
    1754:	a1 e0       	ldi	r26, 0x01	; 1
    1756:	ea 35       	cpi	r30, 0x5A	; 90
    1758:	fa 07       	cpc	r31, r26
    175a:	a1 f7       	brne	.-24     	; 0x1744 <L_5013+0xb1a>
    175c:	d9 cc       	rjmp	.-1614   	; 0x1110 <L_5013+0x4e6>
C:\Users\user\Desktop\Progetti\LedDriver\LedDriver2/LedDriver2.ino:471
		FrameDelay = 15;
  	}
	
	//////////////////// STATUS OTHERS ///////////////////////
	else	{
		Status = 0;
    175e:	10 92 5f 01 	sts	0x015F, r1	; 0x80015f <Status>
    1762:	8e ca       	rjmp	.-2788   	; 0xc80 <L_5013+0x56>
countFPS():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:225

void CFastLED::countFPS(int nFrames) {
	static int br = 0;
	static uint32_t lastframe = 0; // millis();

	if(br++ >= nFrames) {
    1764:	80 91 d0 00 	lds	r24, 0x00D0	; 0x8000d0 <CFastLED::countFPS(int)::br>
    1768:	90 91 d1 00 	lds	r25, 0x00D1	; 0x8000d1 <CFastLED::countFPS(int)::br+0x1>
    176c:	9c 01       	movw	r18, r24
    176e:	2f 5f       	subi	r18, 0xFF	; 255
    1770:	3f 4f       	sbci	r19, 0xFF	; 255
    1772:	30 93 d1 00 	sts	0x00D1, r19	; 0x8000d1 <CFastLED::countFPS(int)::br+0x1>
    1776:	20 93 d0 00 	sts	0x00D0, r18	; 0x8000d0 <CFastLED::countFPS(int)::br>
    177a:	49 97       	sbiw	r24, 0x19	; 25
    177c:	0c f4       	brge	.+2      	; 0x1780 <L_5013+0xb56>
    177e:	4b c0       	rjmp	.+150    	; 0x1816 <L_5013+0xbec>
millis():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:218
}

unsigned long millis()
{
  unsigned long m;
  uint8_t oldSREG = SREG;
    1780:	8f b7       	in	r24, 0x3f	; 63
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:222

  // disable interrupts while we read timer0_millis or we might get an
  // inconsistent value (e.g. in the middle of a write to timer0_millis)
  cli();
    1782:	f8 94       	cli
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:223
  m = timer0_millis;
    1784:	00 91 c8 00 	lds	r16, 0x00C8	; 0x8000c8 <timer0_millis>
    1788:	10 91 c9 00 	lds	r17, 0x00C9	; 0x8000c9 <timer0_millis+0x1>
    178c:	20 91 ca 00 	lds	r18, 0x00CA	; 0x8000ca <timer0_millis+0x2>
    1790:	30 91 cb 00 	lds	r19, 0x00CB	; 0x8000cb <timer0_millis+0x3>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:224
  SREG = oldSREG;
    1794:	8f bf       	out	0x3f, r24	; 63
countFPS():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:227
		uint32_t now = millis();
		now -= lastframe;
    1796:	80 91 cc 00 	lds	r24, 0x00CC	; 0x8000cc <CFastLED::countFPS(int)::lastframe>
    179a:	90 91 cd 00 	lds	r25, 0x00CD	; 0x8000cd <CFastLED::countFPS(int)::lastframe+0x1>
    179e:	a0 91 ce 00 	lds	r26, 0x00CE	; 0x8000ce <CFastLED::countFPS(int)::lastframe+0x2>
    17a2:	b0 91 cf 00 	lds	r27, 0x00CF	; 0x8000cf <CFastLED::countFPS(int)::lastframe+0x3>
    17a6:	a9 01       	movw	r20, r18
    17a8:	98 01       	movw	r18, r16
    17aa:	28 1b       	sub	r18, r24
    17ac:	39 0b       	sbc	r19, r25
    17ae:	4a 0b       	sbc	r20, r26
    17b0:	5b 0b       	sbc	r21, r27
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:228
		if(now == 0) {
    17b2:	21 f4       	brne	.+8      	; 0x17bc <L_5013+0xb92>
main():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:229
			now = 1; // prevent division by zero below
    17b4:	21 e0       	ldi	r18, 0x01	; 1
    17b6:	30 e0       	ldi	r19, 0x00	; 0
    17b8:	40 e0       	ldi	r20, 0x00	; 0
    17ba:	50 e0       	ldi	r21, 0x00	; 0
countFPS():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:231
		}
		m_nFPS = (br * 1000) / now;
    17bc:	e0 91 d0 00 	lds	r30, 0x00D0	; 0x8000d0 <CFastLED::countFPS(int)::br>
    17c0:	f0 91 d1 00 	lds	r31, 0x00D1	; 0x8000d1 <CFastLED::countFPS(int)::br+0x1>
    17c4:	88 ee       	ldi	r24, 0xE8	; 232
    17c6:	93 e0       	ldi	r25, 0x03	; 3
    17c8:	e8 9f       	mul	r30, r24
    17ca:	b0 01       	movw	r22, r0
    17cc:	e9 9f       	mul	r30, r25
    17ce:	70 0d       	add	r23, r0
    17d0:	f8 9f       	mul	r31, r24
    17d2:	70 0d       	add	r23, r0
    17d4:	11 24       	eor	r1, r1
    17d6:	07 2e       	mov	r0, r23
    17d8:	00 0c       	add	r0, r0
    17da:	88 0b       	sbc	r24, r24
    17dc:	99 0b       	sbc	r25, r25
    17de:	fc d0       	rcall	.+504    	; 0x19d8 <__udivmodsi4>
    17e0:	30 93 33 01 	sts	0x0133, r19	; 0x800133 <FastLED+0x2>
    17e4:	20 93 32 01 	sts	0x0132, r18	; 0x800132 <FastLED+0x1>
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:232
		br = 0;
    17e8:	10 92 d1 00 	sts	0x00D1, r1	; 0x8000d1 <CFastLED::countFPS(int)::br+0x1>
    17ec:	10 92 d0 00 	sts	0x00D0, r1	; 0x8000d0 <CFastLED::countFPS(int)::br>
millis():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:218
}

unsigned long millis()
{
  unsigned long m;
  uint8_t oldSREG = SREG;
    17f0:	2f b7       	in	r18, 0x3f	; 63
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:222

  // disable interrupts while we read timer0_millis or we might get an
  // inconsistent value (e.g. in the middle of a write to timer0_millis)
  cli();
    17f2:	f8 94       	cli
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:223
  m = timer0_millis;
    17f4:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <timer0_millis>
    17f8:	90 91 c9 00 	lds	r25, 0x00C9	; 0x8000c9 <timer0_millis+0x1>
    17fc:	a0 91 ca 00 	lds	r26, 0x00CA	; 0x8000ca <timer0_millis+0x2>
    1800:	b0 91 cb 00 	lds	r27, 0x00CB	; 0x8000cb <timer0_millis+0x3>
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/wiring.c:224
  SREG = oldSREG;
    1804:	2f bf       	out	0x3f, r18	; 63
countFPS():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:233
		lastframe = millis();
    1806:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <CFastLED::countFPS(int)::lastframe>
    180a:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <CFastLED::countFPS(int)::lastframe+0x1>
    180e:	a0 93 ce 00 	sts	0x00CE, r26	; 0x8000ce <CFastLED::countFPS(int)::lastframe+0x2>
    1812:	b0 93 cf 00 	sts	0x00CF, r27	; 0x8000cf <CFastLED::countFPS(int)::lastframe+0x3>
main():
C:\Users\user\AppData\Local\Arduino15\packages\MiniCore\hardware\avr\3.0.0\cores\MCUdude_corefiles/main.cpp:47
  
  setup();
    
  for (;;) {
    loop();
    if (serialEventRun) serialEventRun();
    1816:	80 e0       	ldi	r24, 0x00	; 0
    1818:	90 e0       	ldi	r25, 0x00	; 0
    181a:	89 2b       	or	r24, r25
    181c:	09 f4       	brne	.+2      	; 0x1820 <L_5013+0xbf6>
    181e:	1a c9       	rjmp	.-3532   	; 0xa54 <main+0x192>
    1820:	ef d3       	rcall	.+2014   	; 0x2000 <__TEXT_REGION_LENGTH__>
    1822:	13 c9       	rjmp	.-3546   	; 0xa4a <main+0x188>

00001824 <_GLOBAL__sub_I_pSmartMatrix>:
_GLOBAL__sub_I_pSmartMatrix():
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:36
// uint32_t CRGB::Squant = ((uint32_t)((__TIME__[4]-'0') * 28))<<16 | ((__TIME__[6]-'0')*50)<<8 | ((__TIME__[7]-'0')*28);

CFastLED::CFastLED() {
	// clear out the array of led controllers
	// m_nControllers = 0;
	m_Scale = 255;
    1824:	e1 e3       	ldi	r30, 0x31	; 49
    1826:	f1 e0       	ldi	r31, 0x01	; 1
    1828:	8f ef       	ldi	r24, 0xFF	; 255
    182a:	80 83       	st	Z, r24
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:37
	m_nFPS = 0;
    182c:	12 82       	std	Z+2, r1	; 0x02
    182e:	11 82       	std	Z+1, r1	; 0x01
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:38
	m_pPowerFunc = NULL;
    1830:	14 86       	std	Z+12, r1	; 0x0c
    1832:	13 86       	std	Z+11, r1	; 0x0b
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:39
	m_nPowerData = 0xFFFFFFFF;
    1834:	8f ef       	ldi	r24, 0xFF	; 255
    1836:	9f ef       	ldi	r25, 0xFF	; 255
    1838:	dc 01       	movw	r26, r24
    183a:	87 83       	std	Z+7, r24	; 0x07
    183c:	90 87       	std	Z+8, r25	; 0x08
    183e:	a1 87       	std	Z+9, r26	; 0x09
    1840:	b2 87       	std	Z+10, r27	; 0x0a
C:\Users\user\Documents\Arduino\libraries\FastLED\src/FastLED.cpp:254
}

/// Called at program exit when run in a desktop environment. 
/// Extra C definition that some environments may need. 
/// @returns 0 to indicate success
extern "C" int atexit(void (* /*func*/ )()) { return 0; }
    1842:	08 95       	ret

00001844 <random_r>:
random_r():
    1844:	8f 92       	push	r8
    1846:	9f 92       	push	r9
    1848:	af 92       	push	r10
    184a:	bf 92       	push	r11
    184c:	cf 92       	push	r12
    184e:	df 92       	push	r13
    1850:	ef 92       	push	r14
    1852:	ff 92       	push	r15
    1854:	cf 93       	push	r28
    1856:	df 93       	push	r29
    1858:	ec 01       	movw	r28, r24
    185a:	68 81       	ld	r22, Y
    185c:	79 81       	ldd	r23, Y+1	; 0x01
    185e:	8a 81       	ldd	r24, Y+2	; 0x02
    1860:	9b 81       	ldd	r25, Y+3	; 0x03
    1862:	61 15       	cp	r22, r1
    1864:	71 05       	cpc	r23, r1
    1866:	81 05       	cpc	r24, r1
    1868:	91 05       	cpc	r25, r1
    186a:	21 f4       	brne	.+8      	; 0x1874 <random_r+0x30>
    186c:	64 e2       	ldi	r22, 0x24	; 36
    186e:	79 ed       	ldi	r23, 0xD9	; 217
    1870:	8b e5       	ldi	r24, 0x5B	; 91
    1872:	97 e0       	ldi	r25, 0x07	; 7
    1874:	2d e1       	ldi	r18, 0x1D	; 29
    1876:	33 ef       	ldi	r19, 0xF3	; 243
    1878:	41 e0       	ldi	r20, 0x01	; 1
    187a:	50 e0       	ldi	r21, 0x00	; 0
    187c:	81 d0       	rcall	.+258    	; 0x1980 <__divmodsi4>
    187e:	49 01       	movw	r8, r18
    1880:	5a 01       	movw	r10, r20
    1882:	9b 01       	movw	r18, r22
    1884:	ac 01       	movw	r20, r24
    1886:	a7 ea       	ldi	r26, 0xA7	; 167
    1888:	b1 e4       	ldi	r27, 0x41	; 65
    188a:	96 d0       	rcall	.+300    	; 0x19b8 <__muluhisi3>
    188c:	6b 01       	movw	r12, r22
    188e:	7c 01       	movw	r14, r24
    1890:	ac ee       	ldi	r26, 0xEC	; 236
    1892:	b4 ef       	ldi	r27, 0xF4	; 244
    1894:	a5 01       	movw	r20, r10
    1896:	94 01       	movw	r18, r8
    1898:	9b d0       	rcall	.+310    	; 0x19d0 <__mulohisi3>
    189a:	c6 0e       	add	r12, r22
    189c:	d7 1e       	adc	r13, r23
    189e:	e8 1e       	adc	r14, r24
    18a0:	f9 1e       	adc	r15, r25
    18a2:	f7 fe       	sbrs	r15, 7
    18a4:	06 c0       	rjmp	.+12     	; 0x18b2 <random_r+0x6e>
    18a6:	81 e0       	ldi	r24, 0x01	; 1
    18a8:	c8 1a       	sub	r12, r24
    18aa:	d1 08       	sbc	r13, r1
    18ac:	e1 08       	sbc	r14, r1
    18ae:	80 e8       	ldi	r24, 0x80	; 128
    18b0:	f8 0a       	sbc	r15, r24
    18b2:	c8 82       	st	Y, r12
    18b4:	d9 82       	std	Y+1, r13	; 0x01
    18b6:	ea 82       	std	Y+2, r14	; 0x02
    18b8:	fb 82       	std	Y+3, r15	; 0x03
    18ba:	c7 01       	movw	r24, r14
    18bc:	b6 01       	movw	r22, r12
    18be:	9f 77       	andi	r25, 0x7F	; 127
    18c0:	df 91       	pop	r29
    18c2:	cf 91       	pop	r28
    18c4:	ff 90       	pop	r15
    18c6:	ef 90       	pop	r14
    18c8:	df 90       	pop	r13
    18ca:	cf 90       	pop	r12
    18cc:	bf 90       	pop	r11
    18ce:	af 90       	pop	r10
    18d0:	9f 90       	pop	r9
    18d2:	8f 90       	pop	r8
    18d4:	08 95       	ret

000018d6 <random>:
random():
    18d6:	8f 92       	push	r8
    18d8:	9f 92       	push	r9
    18da:	af 92       	push	r10
    18dc:	bf 92       	push	r11
    18de:	cf 92       	push	r12
    18e0:	df 92       	push	r13
    18e2:	ef 92       	push	r14
    18e4:	ff 92       	push	r15
    18e6:	60 91 7c 00 	lds	r22, 0x007C	; 0x80007c <next>
    18ea:	70 91 7d 00 	lds	r23, 0x007D	; 0x80007d <next+0x1>
    18ee:	80 91 7e 00 	lds	r24, 0x007E	; 0x80007e <next+0x2>
    18f2:	90 91 7f 00 	lds	r25, 0x007F	; 0x80007f <next+0x3>
    18f6:	61 15       	cp	r22, r1
    18f8:	71 05       	cpc	r23, r1
    18fa:	81 05       	cpc	r24, r1
    18fc:	91 05       	cpc	r25, r1
    18fe:	21 f4       	brne	.+8      	; 0x1908 <random+0x32>
    1900:	64 e2       	ldi	r22, 0x24	; 36
    1902:	79 ed       	ldi	r23, 0xD9	; 217
    1904:	8b e5       	ldi	r24, 0x5B	; 91
    1906:	97 e0       	ldi	r25, 0x07	; 7
    1908:	2d e1       	ldi	r18, 0x1D	; 29
    190a:	33 ef       	ldi	r19, 0xF3	; 243
    190c:	41 e0       	ldi	r20, 0x01	; 1
    190e:	50 e0       	ldi	r21, 0x00	; 0
    1910:	37 d0       	rcall	.+110    	; 0x1980 <__divmodsi4>
    1912:	49 01       	movw	r8, r18
    1914:	5a 01       	movw	r10, r20
    1916:	9b 01       	movw	r18, r22
    1918:	ac 01       	movw	r20, r24
    191a:	a7 ea       	ldi	r26, 0xA7	; 167
    191c:	b1 e4       	ldi	r27, 0x41	; 65
    191e:	4c d0       	rcall	.+152    	; 0x19b8 <__muluhisi3>
    1920:	6b 01       	movw	r12, r22
    1922:	7c 01       	movw	r14, r24
    1924:	ac ee       	ldi	r26, 0xEC	; 236
    1926:	b4 ef       	ldi	r27, 0xF4	; 244
    1928:	a5 01       	movw	r20, r10
    192a:	94 01       	movw	r18, r8
    192c:	51 d0       	rcall	.+162    	; 0x19d0 <__mulohisi3>
    192e:	c6 0e       	add	r12, r22
    1930:	d7 1e       	adc	r13, r23
    1932:	e8 1e       	adc	r14, r24
    1934:	f9 1e       	adc	r15, r25
    1936:	f7 fe       	sbrs	r15, 7
    1938:	06 c0       	rjmp	.+12     	; 0x1946 <random+0x70>
    193a:	81 e0       	ldi	r24, 0x01	; 1
    193c:	c8 1a       	sub	r12, r24
    193e:	d1 08       	sbc	r13, r1
    1940:	e1 08       	sbc	r14, r1
    1942:	80 e8       	ldi	r24, 0x80	; 128
    1944:	f8 0a       	sbc	r15, r24
    1946:	c0 92 7c 00 	sts	0x007C, r12	; 0x80007c <next>
    194a:	d0 92 7d 00 	sts	0x007D, r13	; 0x80007d <next+0x1>
    194e:	e0 92 7e 00 	sts	0x007E, r14	; 0x80007e <next+0x2>
    1952:	f0 92 7f 00 	sts	0x007F, r15	; 0x80007f <next+0x3>
    1956:	c7 01       	movw	r24, r14
    1958:	b6 01       	movw	r22, r12
    195a:	9f 77       	andi	r25, 0x7F	; 127
    195c:	ff 90       	pop	r15
    195e:	ef 90       	pop	r14
    1960:	df 90       	pop	r13
    1962:	cf 90       	pop	r12
    1964:	bf 90       	pop	r11
    1966:	af 90       	pop	r10
    1968:	9f 90       	pop	r9
    196a:	8f 90       	pop	r8
    196c:	08 95       	ret

0000196e <srandom>:
srandom():
    196e:	60 93 7c 00 	sts	0x007C, r22	; 0x80007c <next>
    1972:	70 93 7d 00 	sts	0x007D, r23	; 0x80007d <next+0x1>
    1976:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <next+0x2>
    197a:	90 93 7f 00 	sts	0x007F, r25	; 0x80007f <next+0x3>
    197e:	08 95       	ret

00001980 <__divmodsi4>:
__divmodsi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1686
    1980:	05 2e       	mov	r0, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1687
    1982:	97 fb       	bst	r25, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1688
    1984:	16 f4       	brtc	.+4      	; 0x198a <__divmodsi4+0xa>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1689
    1986:	00 94       	com	r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1690
    1988:	0f d0       	rcall	.+30     	; 0x19a8 <__negsi2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1692
    198a:	57 fd       	sbrc	r21, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1693
    198c:	05 d0       	rcall	.+10     	; 0x1998 <__divmodsi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1694
    198e:	24 d0       	rcall	.+72     	; 0x19d8 <__udivmodsi4>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1695
    1990:	07 fc       	sbrc	r0, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1696
    1992:	02 d0       	rcall	.+4      	; 0x1998 <__divmodsi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1697
    1994:	46 f4       	brtc	.+16     	; 0x19a6 <__divmodsi4_exit>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1698
    1996:	08 c0       	rjmp	.+16     	; 0x19a8 <__negsi2>

00001998 <__divmodsi4_neg2>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1701
    1998:	50 95       	com	r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1702
    199a:	40 95       	com	r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1703
    199c:	30 95       	com	r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1704
    199e:	21 95       	neg	r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1705
    19a0:	3f 4f       	sbci	r19, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1706
    19a2:	4f 4f       	sbci	r20, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1707
    19a4:	5f 4f       	sbci	r21, 0xFF	; 255

000019a6 <__divmodsi4_exit>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1709
    19a6:	08 95       	ret

000019a8 <__negsi2>:
__negsi2():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1718
    19a8:	90 95       	com	r25
    19aa:	80 95       	com	r24
    19ac:	70 95       	com	r23
    19ae:	61 95       	neg	r22
    19b0:	7f 4f       	sbci	r23, 0xFF	; 255
    19b2:	8f 4f       	sbci	r24, 0xFF	; 255
    19b4:	9f 4f       	sbci	r25, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1719
    19b6:	08 95       	ret

000019b8 <__muluhisi3>:
__muluhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:626
    19b8:	31 d0       	rcall	.+98     	; 0x1a1c <__umulhisi3>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:627
    19ba:	a5 9f       	mul	r26, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:628
    19bc:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:629
    19be:	b4 9f       	mul	r27, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:630
    19c0:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:631
    19c2:	a4 9f       	mul	r26, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:632
    19c4:	80 0d       	add	r24, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:633
    19c6:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:634
    19c8:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:635
    19ca:	08 95       	ret

000019cc <__mulshisi3>:
__mulshisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:603
    19cc:	b7 ff       	sbrs	r27, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:605
    19ce:	f4 cf       	rjmp	.-24     	; 0x19b8 <__muluhisi3>

000019d0 <__mulohisi3>:
__mulohisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:613
    19d0:	f3 df       	rcall	.-26     	; 0x19b8 <__muluhisi3>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:615
    19d2:	82 1b       	sub	r24, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:616
    19d4:	93 0b       	sbc	r25, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:617
    19d6:	08 95       	ret

000019d8 <__udivmodsi4>:
__udivmodsi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1638
    19d8:	a1 e2       	ldi	r26, 0x21	; 33
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1639
    19da:	1a 2e       	mov	r1, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1640
    19dc:	aa 1b       	sub	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1641
    19de:	bb 1b       	sub	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1642
    19e0:	fd 01       	movw	r30, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1644
    19e2:	0d c0       	rjmp	.+26     	; 0x19fe <__udivmodsi4_ep>

000019e4 <__udivmodsi4_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1646
    19e4:	aa 1f       	adc	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1647
    19e6:	bb 1f       	adc	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1648
    19e8:	ee 1f       	adc	r30, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1649
    19ea:	ff 1f       	adc	r31, r31
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1650
    19ec:	a2 17       	cp	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1651
    19ee:	b3 07       	cpc	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1652
    19f0:	e4 07       	cpc	r30, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1653
    19f2:	f5 07       	cpc	r31, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1654
    19f4:	20 f0       	brcs	.+8      	; 0x19fe <__udivmodsi4_ep>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1655
    19f6:	a2 1b       	sub	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1656
    19f8:	b3 0b       	sbc	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1657
    19fa:	e4 0b       	sbc	r30, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1658
    19fc:	f5 0b       	sbc	r31, r21

000019fe <__udivmodsi4_ep>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1660
    19fe:	66 1f       	adc	r22, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1661
    1a00:	77 1f       	adc	r23, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1662
    1a02:	88 1f       	adc	r24, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1663
    1a04:	99 1f       	adc	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1664
    1a06:	1a 94       	dec	r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1665
    1a08:	69 f7       	brne	.-38     	; 0x19e4 <__udivmodsi4_loop>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1667
    1a0a:	60 95       	com	r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1668
    1a0c:	70 95       	com	r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1669
    1a0e:	80 95       	com	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1670
    1a10:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1672
    1a12:	9b 01       	movw	r18, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1674
    1a14:	ac 01       	movw	r20, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1676
    1a16:	bd 01       	movw	r22, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1678
    1a18:	cf 01       	movw	r24, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1680
    1a1a:	08 95       	ret

00001a1c <__umulhisi3>:
__umulhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:564
    1a1c:	a2 9f       	mul	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:565
    1a1e:	b0 01       	movw	r22, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:566
    1a20:	b3 9f       	mul	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:567
    1a22:	c0 01       	movw	r24, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:568
    1a24:	a3 9f       	mul	r26, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:578
    1a26:	01 d0       	rcall	.+2      	; 0x1a2a <__umulhisi3+0xe>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:580
    1a28:	b2 9f       	mul	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:581
    1a2a:	70 0d       	add	r23, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:582
    1a2c:	81 1d       	adc	r24, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:583
    1a2e:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:584
    1a30:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:585
    1a32:	08 95       	ret

00001a34 <__mulsi3>:
__mulsi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:648
    1a34:	db 01       	movw	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:649
    1a36:	8f 93       	push	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:650
    1a38:	9f 93       	push	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:651
    1a3a:	be df       	rcall	.-132    	; 0x19b8 <__muluhisi3>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:652
    1a3c:	bf 91       	pop	r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:653
    1a3e:	af 91       	pop	r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:655
    1a40:	a2 9f       	mul	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:656
    1a42:	80 0d       	add	r24, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:657
    1a44:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:658
    1a46:	a3 9f       	mul	r26, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:659
    1a48:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:660
    1a4a:	b2 9f       	mul	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:661
    1a4c:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:662
    1a4e:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:663
    1a50:	08 95       	ret

00001a52 <__divmodhi4>:
__divmodhi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1440
    1a52:	97 fb       	bst	r25, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1441
    1a54:	07 2e       	mov	r0, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1442
    1a56:	16 f4       	brtc	.+4      	; 0x1a5c <__divmodhi4+0xa>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1443
    1a58:	00 94       	com	r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1444
    1a5a:	06 d0       	rcall	.+12     	; 0x1a68 <__divmodhi4_neg1>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1446
    1a5c:	77 fd       	sbrc	r23, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1447
    1a5e:	08 d0       	rcall	.+16     	; 0x1a70 <__divmodhi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1448
    1a60:	11 d0       	rcall	.+34     	; 0x1a84 <__udivmodhi4>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1449
    1a62:	07 fc       	sbrc	r0, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1450
    1a64:	05 d0       	rcall	.+10     	; 0x1a70 <__divmodhi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1451
    1a66:	3e f4       	brtc	.+14     	; 0x1a76 <__divmodhi4_exit>

00001a68 <__divmodhi4_neg1>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1454
    1a68:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1455
    1a6a:	81 95       	neg	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1456
    1a6c:	9f 4f       	sbci	r25, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1457
    1a6e:	08 95       	ret

00001a70 <__divmodhi4_neg2>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1460
    1a70:	70 95       	com	r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1461
    1a72:	61 95       	neg	r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1462
    1a74:	7f 4f       	sbci	r23, 0xFF	; 255

00001a76 <__divmodhi4_exit>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1464
    1a76:	08 95       	ret

00001a78 <__usmulhisi3>:
__usmulhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:545
    1a78:	d1 df       	rcall	.-94     	; 0x1a1c <__umulhisi3>

00001a7a <__usmulhisi3_tail>:
__usmulhisi3_tail():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:551
    1a7a:	b7 ff       	sbrs	r27, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:552
    1a7c:	08 95       	ret
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:553
    1a7e:	82 1b       	sub	r24, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:554
    1a80:	93 0b       	sbc	r25, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:555
    1a82:	08 95       	ret

00001a84 <__udivmodhi4>:
__udivmodhi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1408
    1a84:	aa 1b       	sub	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1409
    1a86:	bb 1b       	sub	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1410
    1a88:	51 e1       	ldi	r21, 0x11	; 17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1411
    1a8a:	07 c0       	rjmp	.+14     	; 0x1a9a <__udivmodhi4_ep>

00001a8c <__udivmodhi4_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1413
    1a8c:	aa 1f       	adc	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1414
    1a8e:	bb 1f       	adc	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1415
    1a90:	a6 17       	cp	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1416
    1a92:	b7 07       	cpc	r27, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1417
    1a94:	10 f0       	brcs	.+4      	; 0x1a9a <__udivmodhi4_ep>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1418
    1a96:	a6 1b       	sub	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1419
    1a98:	b7 0b       	sbc	r27, r23

00001a9a <__udivmodhi4_ep>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1421
    1a9a:	88 1f       	adc	r24, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1422
    1a9c:	99 1f       	adc	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1423
    1a9e:	5a 95       	dec	r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1424
    1aa0:	a9 f7       	brne	.-22     	; 0x1a8c <__udivmodhi4_loop>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1425
    1aa2:	80 95       	com	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1426
    1aa4:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1428
    1aa6:	bc 01       	movw	r22, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1430
    1aa8:	cd 01       	movw	r24, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1432
    1aaa:	08 95       	ret

00001aac <__tablejump2__>:
__tablejump2__():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2296
    1aac:	ee 0f       	add	r30, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2297
    1aae:	ff 1f       	adc	r31, r31
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2328
    1ab0:	05 90       	lpm	r0, Z+
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2329
    1ab2:	f4 91       	lpm	r31, Z
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2330
    1ab4:	e0 2d       	mov	r30, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2331
    1ab6:	09 94       	ijmp

00001ab8 <abort>:
abort():
    1ab8:	81 e0       	ldi	r24, 0x01	; 1
    1aba:	90 e0       	ldi	r25, 0x00	; 0
    1abc:	f8 94       	cli
    1abe:	00 c0       	rjmp	.+0      	; 0x1ac0 <_exit>

00001ac0 <_exit>:
exit():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2278
    1ac0:	f8 94       	cli

00001ac2 <__stop_program>:
__stop_program():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr4/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2280
    1ac2:	ff cf       	rjmp	.-2      	; 0x1ac2 <__stop_program>
